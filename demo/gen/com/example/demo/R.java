/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.example.demo;

public final class R {
    public static final class anim {
        public static final int abc_fade_in=0x7f040000;
        public static final int abc_fade_out=0x7f040001;
        public static final int abc_grow_fade_in_from_bottom=0x7f040002;
        public static final int abc_popup_enter=0x7f040003;
        public static final int abc_popup_exit=0x7f040004;
        public static final int abc_shrink_fade_out_from_bottom=0x7f040005;
        public static final int abc_slide_in_bottom=0x7f040006;
        public static final int abc_slide_in_top=0x7f040007;
        public static final int abc_slide_out_bottom=0x7f040008;
        public static final int abc_slide_out_top=0x7f040009;
    }
    public static final class array {
        /**  Description of each color mode for the display. [CHAR LIMIT=NONE] 
         */
        public static final int color_mode_descriptions=0x7f060005;
        /**  Name of each color mode for the display. [CHAR LIMIT=40] 
         */
        public static final int color_mode_names=0x7f060004;
        public static final int wifi_calling_mode_choices=0x7f060002;
        public static final int wifi_calling_mode_values=0x7f060003;
        /**  Wi-Fi settings. The status messages when the network is unknown. 
         */
        public static final int wifi_status=0x7f060000;
        /**  Wi-Fi settings. The status messages when the network is known. 
         */
        public static final int wifi_status_with_ssid=0x7f060001;
    }
    public static final class attr {
        /**  Custom divider drawable to use for elements in the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarDivider=0x7f010018;
        /**  Custom item state list drawable background for action bar items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarItemBackground=0x7f010019;
        /**  Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarPopupTheme=0x7f010012;
        /**  Size of the Action Bar, including the contextual
             bar used to present Action Modes. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>wrap_content</code></td><td>0</td><td></td></tr>
</table>
         */
        public static final int actionBarSize=0x7f010017;
        /**  Reference to a style for the split Action Bar. This style
             controls the split component that holds the menu/action
             buttons. actionBarStyle is still used for the primary
             bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarSplitStyle=0x7f010014;
        /**  Reference to a style for the Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarStyle=0x7f010013;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabBarStyle=0x7f01000e;
        /**  Default style for tabs within an action bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabStyle=0x7f01000d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTabTextStyle=0x7f01000f;
        /**  Reference to a theme that should be used to inflate the
             action bar. This will be inherited by any widget inflated
             into the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarTheme=0x7f010015;
        /**  Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar. Most of the time
             this will be a reference to the current theme, but when
             the action bar has a significantly different contrast
             profile than the rest of the activity the difference
             can become important. If this is set to @null the current
             theme will be used.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionBarWidgetTheme=0x7f010016;
        /**  Default action button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionButtonStyle=0x7f010032;
        /**  Default ActionBar dropdown style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionDropDownStyle=0x7f01002e;
        /**  An optional layout to be used as an action view.
             See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionLayout=0x7f010091;
        /**  TextAppearance style that will be applied to text that
             appears within action menu items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionMenuTextAppearance=0x7f01001a;
        /**  Color for text that appears within action menu items. 
 Color for text that appears within action menu items. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int actionMenuTextColor=0x7f01001b;
        /**  Background drawable to use for action mode UI 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeBackground=0x7f01001e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCloseButtonStyle=0x7f01001d;
        /**  Drawable to use for the close action mode button 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCloseDrawable=0x7f010020;
        /**  Drawable to use for the Copy action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCopyDrawable=0x7f010022;
        /**  Drawable to use for the Cut action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeCutDrawable=0x7f010021;
        /**  Drawable to use for the Find action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeFindDrawable=0x7f010026;
        /**  Drawable to use for the Paste action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModePasteDrawable=0x7f010023;
        /**  PopupWindow style to use for action modes when showing as a window overlay. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModePopupWindowStyle=0x7f010028;
        /**  Drawable to use for the Select all action button in Contextual Action Bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeSelectAllDrawable=0x7f010024;
        /**  Drawable to use for the Share action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeShareDrawable=0x7f010025;
        /**  Background drawable to use for action mode UI in the lower split bar 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeSplitBackground=0x7f01001f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeStyle=0x7f01001c;
        /**  Drawable to use for the Web Search action button in WebView selection action modes 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionModeWebSearchDrawable=0x7f010027;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionOverflowButtonStyle=0x7f010010;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int actionOverflowMenuStyle=0x7f010011;
        /**  The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.
             See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
             for more info. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int actionProviderClass=0x7f010093;
        /**  The name of an optional View class to instantiate and use as an
             action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int actionViewClass=0x7f010092;
        /**  Default ActivityChooserView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int activityChooserViewStyle=0x7f01003a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogButtonGroupStyle=0x7f01005d;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alertDialogCenterButtons=0x7f01005e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogStyle=0x7f01005c;
        /**  Theme to use for alert dialogs spawned from this theme. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int alertDialogTheme=0x7f01005f;
        /**  Whether to automatically stack the buttons when there is not
             enough space to lay them out side-by-side. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowStacking=0x7f0100cf;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int apnPreferenceStyle=0x7f0100e8;
        /**  The length of the arrow head when formed to make an arrow 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int arrowHeadLength=0x7f0100bc;
        /**  The length of the shaft when formed to make an arrow 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int arrowShaftLength=0x7f0100bd;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int aspectRatio=0x7f0100d2;
        /**  Default AutoCompleteTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int autoCompleteTextViewStyle=0x7f010064;
        /**  Specifies a background drawable for the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int background=0x7f010079;
        /**  Specifies a background drawable for the bottom component of a split action bar. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int backgroundSplit=0x7f01007b;
        /**  Specifies a background drawable for a second stacked row of the action bar. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int backgroundStacked=0x7f01007a;
        /**  Tint to apply to the background. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundTint=0x7f01008d;
        /**  Blending mode used to apply the background tint. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>src_over</code></td><td>3</td><td> The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] </td></tr>
<tr><td><code>src_in</code></td><td>5</td><td> The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] </td></tr>
<tr><td><code>src_atop</code></td><td>9</td><td> The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] </td></tr>
<tr><td><code>multiply</code></td><td>14</td><td> Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] </td></tr>
<tr><td><code>screen</code></td><td>15</td><td> [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] </td></tr>
</table>
         */
        public static final int backgroundTintMode=0x7f01008e;
        /**  The length of the bars when they are parallel to each other 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int barLength=0x7f0100be;
        /**  Color of predicted future use part of chart. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int barPredictionColor=0x7f0100d5;
        /**  Primary color of chart. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int barPrimaryColor=0x7f0100d4;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int borderDrawable=0x7f0100e4;
        /**  Style for buttons without an explicit border, often used in groups. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int borderlessButtonStyle=0x7f010037;
        /**  Style for buttons within button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarButtonStyle=0x7f010034;
        /**  Style for the "negative" buttons within button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarNegativeButtonStyle=0x7f010062;
        /**  Style for the "neutral" buttons within button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarNeutralButtonStyle=0x7f010063;
        /**  Style for the "positive" buttons within button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarPositiveButtonStyle=0x7f010061;
        /**  Style for button bars 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonBarStyle=0x7f010033;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonPanelSideLayout=0x7f0100ca;
        /**  Normal Button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyle=0x7f010065;
        /**  Small Button style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int buttonStyleSmall=0x7f010066;
        /**  Tint to apply to the button drawable. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int buttonTint=0x7f0100c1;
        /**  Blending mode used to apply the button tint. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>src_over</code></td><td>3</td><td> The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] </td></tr>
<tr><td><code>src_in</code></td><td>5</td><td> The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] </td></tr>
<tr><td><code>src_atop</code></td><td>9</td><td> The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] </td></tr>
<tr><td><code>multiply</code></td><td>14</td><td> Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] </td></tr>
<tr><td><code>screen</code></td><td>15</td><td> [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] </td></tr>
</table>
         */
        public static final int buttonTintMode=0x7f0100c2;
        /**  Minimum height of the chart itself. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
         */
        public static final int chartMinHeight=0x7f0100d6;
        /**  Default Checkbox style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkboxStyle=0x7f010067;
        /**  Default CheckedTextView style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int checkedTextViewStyle=0x7f010068;
        /**  Close button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int closeIcon=0x7f010098;
        /**  Specifies a layout to use for the "close" item at the starting edge. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int closeItemLayout=0x7f010089;
        /**  Text to set as the content description for the collapse button. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int collapseContentDescription=0x7f0100b0;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int collapseIcon=0x7f0100af;
        /**  The drawing color for the bars 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int color=0x7f0100b8;
        /**  Bright complement to the primary branding color. By default, this is the color applied
             to framework controls (via colorControlActivated). 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorAccent=0x7f010055;
        /**  The color applied to framework buttons in their normal state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorButtonNormal=0x7f010059;
        /**  The color applied to framework controls in their activated (ex. checked) state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorControlActivated=0x7f010057;
        /**  The color applied to framework control highlights (ex. ripples, list selectors). 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorControlHighlight=0x7f010058;
        /**  The color applied to framework controls in their normal state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorControlNormal=0x7f010056;
        /**  The primary branding color for the app. By default, this is the color applied to the
             action bar background. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorPrimary=0x7f010053;
        /**  Dark variant of the primary branding color. By default, this is the color applied to
             the status bar (via statusBarColor) and navigation bar (via navigationBarColor). 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorPrimaryDark=0x7f010054;
        /**  The color applied to framework switch thumbs in their normal state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorSwitchThumbNormal=0x7f01005a;
        /**  Commit icon shown in the query suggestion row 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int commitIcon=0x7f01009d;
        /**  Confirm device credentials screen 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int confirmDeviceCredentialsSideMargin=0x7f0100ee;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int confirmDeviceCredentialsTopMargin=0x7f0100ef;
        /**  Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentInsetEnd=0x7f010084;
        /**  Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentInsetLeft=0x7f010085;
        /**  Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentInsetRight=0x7f010086;
        /**  Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentInsetStart=0x7f010083;
        /**  The background used by framework controls. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int controlBackground=0x7f01005b;
        /**  Specifies a layout for custom navigation. Overrides navigationMode. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int customNavigationLayout=0x7f01007c;
        /**  Default query hint used when {@code queryHint} is undefined and
             the search view's {@code SearchableInfo} does not provide a hint. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int defaultQueryHint=0x7f010097;
        /**  Preferred padding for dialog content. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dialogPreferredPadding=0x7f01002c;
        /**  Theme to use for dialogs spawned from this theme. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dialogTheme=0x7f01002b;
        /**  Options affecting how the action bar is displayed. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>useLogo</code></td><td>0x1</td><td></td></tr>
<tr><td><code>showHome</code></td><td>0x2</td><td></td></tr>
<tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>
<tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>
<tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>
<tr><td><code>disableHome</code></td><td>0x20</td><td></td></tr>
</table>
         */
        public static final int displayOptions=0x7f010072;
        /**  Specifies the drawable used for item dividers. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int divider=0x7f010078;
        /**  A drawable that may be used as a horizontal divider between visual elements. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dividerHorizontal=0x7f010039;
        /**  Size of padding on either end of a divider. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dividerPadding=0x7f0100a6;
        /**  A drawable that may be used as a vertical divider between visual elements. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dividerVertical=0x7f010038;
        /**  The total size of the drawable 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawableSize=0x7f0100ba;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawerArrowStyle=0x7f0100c0;
        /**  ListPopupWindow compatibility 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int dropDownListViewStyle=0x7f01004b;
        /**  The preferred item height for dropdown lists. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dropdownListPreferredItemHeight=0x7f01002f;
        /**  EditText background drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextBackground=0x7f010040;
        /**  EditText text foreground color. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int editTextColor=0x7f01003f;
        /**  Default EditText style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int editTextStyle=0x7f010069;
        /**  Elevation for the action bar itself 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int elevation=0x7f010087;
        /**  Background color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int emptyColor=0x7f0100d7;
        /**  The drawable to show in the button for expanding the activities overflow popup.
             <strong>Note:</strong> Clients would like to set this drawable
             as a clue about the action the chosen activity will perform. For
             example, if share activity is to be chosen the drawable should
             give a clue that sharing is to be performed.
         
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int expandActivityOverflowButtonDrawable=0x7f0100a2;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillColor=0x7f0100e6;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillColorSecondary=0x7f0100e7;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int followAxis=0x7f0100dc;
        /**  The max gap between the bars when they are parallel to each other 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gapBetweenBars=0x7f0100bb;
        /**  Go button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int goIcon=0x7f010099;
        /**  Text color, typeface, size, and style of header. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int headerAppearance=0x7f0100d3;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int height=0x7f010001;
        /**  Set true to hide the action bar on a vertical nested scroll of content. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hideOnContentScroll=0x7f010082;
        /**  Specifies a drawable to use for the 'home as up' indicator. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int homeAsUpIndicator=0x7f010031;
        /**  Specifies a layout to use for the "home" section of the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int homeLayout=0x7f01007d;
        /**  Specifies the drawable used for the application icon. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon=0x7f010076;
        /**  The default state of the SearchView. If true, it will be iconified when not in
             use and expanded when clicked. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int iconifiedByDefault=0x7f010095;
        /**  ImageButton background drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int imageButtonStyle=0x7f010041;
        /**  Specifies a style resource to use for an indeterminate progress spinner. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int indeterminateProgressStyle=0x7f01007f;
        /**  The maximal number of items initially shown in the activity list. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int initialActivityCount=0x7f0100a1;
        /**  Specifies whether the theme is light, otherwise it is dark. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isLightTheme=0x7f010002;
        /**  Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int itemPadding=0x7f010081;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keywords=0x7f0100e9;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelColor=0x7f0100e0;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelSize=0x7f0100de;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int labelTemplate=0x7f0100df;
        /**  The layout to use for the search view. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layout=0x7f010094;
        /**  Drawable used as a background for selected list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listChoiceBackgroundIndicator=0x7f010052;
        /**  The list divider used in alert dialogs. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listDividerAlertDialog=0x7f01002d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listItemLayout=0x7f0100ce;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listLayout=0x7f0100cb;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listPopupWindowStyle=0x7f01004c;
        /**  The preferred list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeight=0x7f010046;
        /**  A larger, more robust list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeightLarge=0x7f010048;
        /**  A smaller, sleeker list item height. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemHeightSmall=0x7f010047;
        /**  The preferred padding along the left edge of list items. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemPaddingLeft=0x7f010049;
        /**  The preferred padding along the right edge of list items. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int listPreferredItemPaddingRight=0x7f01004a;
        /**  Specifies the drawable used for the application logo. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int logo=0x7f010077;
        /**  A content description string to describe the appearance of the
             associated logo image. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int logoDescription=0x7f0100b3;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxButtonHeight=0x7f0100ae;
        /**  When set to true, all children with a weight will be considered having
             the minimum size of the largest child. If false, all children are
             measured normally. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int measureWithLargestChild=0x7f0100a4;
        /**  Minimum tick width for each slice in the bar chart. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minTickWidth=0x7f0100d8;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int multiChoiceItemLayout=0x7f0100cc;
        /**  Text to set as the content description for the navigation button
             located at the start of the toolbar. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int navigationContentDescription=0x7f0100b2;
        /**  Icon drawable to use for the navigation button located at
             the start of the toolbar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int navigationIcon=0x7f0100b1;
        /**  The type of navigation to use. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Normal static title text </td></tr>
<tr><td><code>listMode</code></td><td>1</td><td> The action bar will use a selection list for navigation. </td></tr>
<tr><td><code>tabMode</code></td><td>2</td><td> The action bar will use a series of horizontal tabs for navigation. </td></tr>
</table>
         */
        public static final int navigationMode=0x7f010071;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int neighborMargin=0x7f0100dd;
        /**  optimal width of the chart 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int optimalWidth=0x7f0100d9;
        /**  how to weight extra space beyond optimal width 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int optimalWidthWeight=0x7f0100da;
        /**  Whether the popup window should overlap its anchor view. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int overlapAnchor=0x7f0100b7;
        /**  Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingEnd=0x7f01008b;
        /**  Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingStart=0x7f01008a;
        /**  The background of a panel when it is inset from the left and right edges of the screen. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int panelBackground=0x7f01004f;
        /**  Default Panel Menu style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int panelMenuListTheme=0x7f010051;
        /**  Default Panel Menu width. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int panelMenuListWidth=0x7f010050;
        /**  Default PopupMenu style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupMenuStyle=0x7f01003d;
        /**  Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupTheme=0x7f010088;
        /**  Default PopupWindow style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int popupWindowStyle=0x7f01003e;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int preferenceBackgroundColor=0x7f0100ed;
        /**  Whether space should be reserved in layout when an icon is missing. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int preserveIconSpacing=0x7f01008f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int primaryDrawable=0x7f0100e2;
        /**  Specifies the horizontal padding on either end for an embedded progress bar. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int progressBarPadding=0x7f010080;
        /**  Specifies a style resource to use for an embedded progress bar. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int progressBarStyle=0x7f01007e;
        /**  Background for the section containing the search query 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int queryBackground=0x7f01009f;
        /**  An optional user-defined query hint string to be displayed in the empty query field. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int queryHint=0x7f010096;
        /**  Default RadioButton style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int radioButtonStyle=0x7f01006a;
        /**  Default RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyle=0x7f01006b;
        /**  Indicator RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyleIndicator=0x7f01006c;
        /**  Small indicator RatingBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ratingBarStyleSmall=0x7f01006d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int safeRegion=0x7f0100e1;
        /**  Search icon displayed as a text field hint 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchHintIcon=0x7f01009b;
        /**  Search icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchIcon=0x7f01009a;
        /**  Style for the search query widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int searchViewStyle=0x7f010045;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int secondaryDrawable=0x7f0100e3;
        /**  Default SeekBar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int seekBarStyle=0x7f01006e;
        /**  A style that may be applied to buttons or other selectable items
             that should react to pressed and focus states, but that do not
             have a clear visual border along the edges. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int selectableItemBackground=0x7f010035;
        /**  Background drawable for borderless standalone items that need focus/pressed states. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int selectableItemBackgroundBorderless=0x7f010036;
        /**  How this item should display in the Action Bar, if present. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>never</code></td><td>0</td><td> Never show this item in an action bar, show it in the overflow menu instead.
                 Mutually exclusive with "ifRoom" and "always". </td></tr>
<tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined
                 by the system. Favor this option over "always" where possible.
                 Mutually exclusive with "never" and "always". </td></tr>
<tr><td><code>always</code></td><td>2</td><td> Always show this item in an actionbar, even if it would override
                 the system's limits of how much stuff to put there. This may make
                 your action bar look bad on some screens. In most cases you should
                 use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never". </td></tr>
<tr><td><code>withText</code></td><td>4</td><td> When this item is shown as an action in the action bar, show a text
                 label with it even if it has an icon representation. </td></tr>
<tr><td><code>collapseActionView</code></td><td>8</td><td> This item's action view collapses to a normal menu
                 item. When expanded, the action view takes over a
                 larger segment of its container. </td></tr>
</table>
         */
        public static final int showAsAction=0x7f010090;
        /**  Setting for which dividers to show. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>beginning</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>4</td><td></td></tr>
</table>
         */
        public static final int showDividers=0x7f0100a5;
        /**  Whether to draw on/off text. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showText=0x7f0100c9;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int singleChoiceItemLayout=0x7f0100cd;
        /**  Whether bars should rotate or not during transition 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spinBars=0x7f0100b9;
        /**  Default Spinner style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerDropDownItemStyle=0x7f010030;
        /**  Default Spinner style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int spinnerStyle=0x7f01006f;
        /**  Whether to split the track and leave a gap for the thumb drawable. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int splitTrack=0x7f0100c8;
        /**  TODO 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int srcCompat=0x7f0100d0;
        /**  State identifier indicating the popup will be above the anchor. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_above_anchor=0x7f0100b6;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_encrypted=0x7f0100d1;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int strokeColor=0x7f0100e5;
        /**  Background for the section containing the action (e.g. voice search) 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int submitBackground=0x7f0100a0;
        /**  Specifies subtitle text used for navigationMode="normal" 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int subtitle=0x7f010073;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int subtitleTextAppearance=0x7f0100a8;
        /**  A color to apply to the subtitle string. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int subtitleTextColor=0x7f0100b5;
        /**  Specifies a style to use for subtitle text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int subtitleTextStyle=0x7f010075;
        /**  Layout for query suggestion rows 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionRowLayout=0x7f01009e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int sweepDrawable=0x7f0100db;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchBarMarginEnd=0x7f0100ec;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchBarMarginStart=0x7f0100eb;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchBarTheme=0x7f0100ea;
        /**  Minimum width for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinWidth=0x7f0100c6;
        /**  Minimum space between the switch and caption text 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchPadding=0x7f0100c7;
        /**  Default style for the Switch widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchStyle=0x7f010070;
        /**  TextAppearance style for text displayed on the switch thumb. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchTextAppearance=0x7f0100c5;
        /**  Present the text in ALL CAPS. This may use a small-caps form when available. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
         */
        public static final int textAllCaps=0x7f0100a3;
        /**  Text color, typeface, size, and style for the text inside of a popup menu. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceLargePopupMenu=0x7f010029;
        /**  The preferred TextAppearance for the primary text of list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceListItem=0x7f01004d;
        /**  The preferred TextAppearance for the primary text of small list items. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceListItemSmall=0x7f01004e;
        /**  Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultSubtitle=0x7f010043;
        /**  Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSearchResultTitle=0x7f010042;
        /**  Text color, typeface, size, and style for small text inside of a popup menu. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textAppearanceSmallPopupMenu=0x7f01002a;
        /**  Color of list item text in alert dialogs. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorAlertDialogListItem=0x7f010060;
        /**  Text color for urls in search suggestions, used by things like global search 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int textColorSearchUrl=0x7f010044;
        /**  Deprecated. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int theme=0x7f01008c;
        /**  The thickness (stroke size) for the bar paint 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thickness=0x7f0100bf;
        /**  Amount of padding on either side of text within the switch thumb. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbTextPadding=0x7f0100c4;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int title=0x7f010000;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMarginBottom=0x7f0100ad;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMarginEnd=0x7f0100ab;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMarginStart=0x7f0100aa;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMarginTop=0x7f0100ac;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleMargins=0x7f0100a9;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int titleTextAppearance=0x7f0100a7;
        /**  A color to apply to the title string. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int titleTextColor=0x7f0100b4;
        /**  Specifies a style to use for title text. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int titleTextStyle=0x7f010074;
        /**  Default Toolar NavigationButtonStyle 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int toolbarNavigationButtonStyle=0x7f01003c;
        /**  Default Toolbar style. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int toolbarStyle=0x7f01003b;
        /**  Drawable to use as the "track" that the switch thumb slides within. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int track=0x7f0100c3;
        /**  Voice button icon 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int voiceIcon=0x7f01009c;
        /**  Flag indicating whether this window should have an Action Bar
             in place of the usual title bar. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionBar=0x7f010003;
        /**  Flag indicating whether this window's Action Bar should overlay
             application content. Does nothing if the window would not
             have an Action Bar. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionBarOverlay=0x7f010005;
        /**  Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar). 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowActionModeOverlay=0x7f010006;
        /**  A fixed height for the window along the major axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedHeightMajor=0x7f01000a;
        /**  A fixed height for the window along the minor axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedHeightMinor=0x7f010008;
        /**  A fixed width for the window along the major axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedWidthMajor=0x7f010007;
        /**  A fixed width for the window along the minor axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowFixedWidthMinor=0x7f010009;
        /**  The minimum width the window is allowed to be, along the major
             axis of the screen.  That is, when in landscape.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowMinWidthMajor=0x7f01000b;
        /**  The minimum width the window is allowed to be, along the minor
             axis of the screen.  That is, when in portrait.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowMinWidthMinor=0x7f01000c;
        /**  Flag indicating whether there should be no title on this window. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int windowNoTitle=0x7f010004;
    }
    public static final class bool {
        public static final int abc_action_bar_embed_tabs=0x7f090000;
        public static final int abc_action_bar_embed_tabs_pre_jb=0x7f090001;
        public static final int abc_action_bar_expanded_action_views_exclusive=0x7f090002;
        /**  Whether to allow vertically stacked button bars. This is enabled for
         all < v13 devices. 
 Whether to allow vertically stacked button bars. This is disabled for
         configurations with a small (e.g. less than 320dp) screen height. 
         */
        public static final int abc_allow_stacked_button_bar=0x7f090004;
        /**  Whether action menu items should be displayed in ALLCAPS or not.
         Defaults to true. If this is not appropriate for specific locales
         it should be disabled in that locale's resources. 
         */
        public static final int abc_config_actionMenuItemAllCaps=0x7f090006;
        /**  Whether action menu items should obey the "withText" showAsAction
    flag. This may be set to false for situations where space is
    extremely limited. 
 Whether action menu items should obey the "withText" showAsAction.
         This may be set to false for situations where space is
         extremely limited. 
         */
        public static final int abc_config_allowActionMenuItemTextWithIcon=0x7f090005;
        public static final int abc_config_closeDialogWhenTouchOutside=0x7f090007;
        public static final int abc_config_showMenuShortcutsWhenKeyboardPresent=0x7f090003;
    }
    public static final class color {
        public static final int abc_background_cache_hint_selector_material_dark=0x7f0a003b;
        public static final int abc_background_cache_hint_selector_material_light=0x7f0a003c;
        public static final int abc_color_highlight_material=0x7f0a003d;
        public static final int abc_input_method_navigation_guard=0x7f0a0003;
        public static final int abc_primary_text_disable_only_material_dark=0x7f0a003e;
        public static final int abc_primary_text_disable_only_material_light=0x7f0a003f;
        public static final int abc_primary_text_material_dark=0x7f0a0040;
        public static final int abc_primary_text_material_light=0x7f0a0041;
        public static final int abc_search_url_text=0x7f0a0042;
        public static final int abc_search_url_text_normal=0x7f0a0000;
        public static final int abc_search_url_text_pressed=0x7f0a0002;
        public static final int abc_search_url_text_selected=0x7f0a0001;
        public static final int abc_secondary_text_material_dark=0x7f0a0043;
        public static final int abc_secondary_text_material_light=0x7f0a0044;
        public static final int accent_material_dark=0x7f0a0011;
        public static final int accent_material_light=0x7f0a0010;
        public static final int background_floating_material_dark=0x7f0a0008;
        public static final int background_floating_material_light=0x7f0a0009;
        public static final int background_material_dark=0x7f0a0006;
        public static final int background_material_light=0x7f0a0007;
        /**  White 50% 
         */
        public static final int bright_foreground_disabled_material_dark=0x7f0a001a;
        /**  Black 50% 
         */
        public static final int bright_foreground_disabled_material_light=0x7f0a001b;
        public static final int bright_foreground_inverse_material_dark=0x7f0a001c;
        public static final int bright_foreground_inverse_material_light=0x7f0a001d;
        public static final int bright_foreground_material_dark=0x7f0a0018;
        public static final int bright_foreground_material_light=0x7f0a0019;
        public static final int button_material_dark=0x7f0a0012;
        public static final int button_material_light=0x7f0a0013;
        public static final int dim_foreground_disabled_material_dark=0x7f0a0020;
        public static final int dim_foreground_disabled_material_light=0x7f0a0021;
        public static final int dim_foreground_material_dark=0x7f0a001e;
        public static final int dim_foreground_material_light=0x7f0a001f;
        public static final int foreground_material_dark=0x7f0a0004;
        public static final int foreground_material_light=0x7f0a0005;
        /**  TODO: This is 40% alpha on the default accent color. 
         */
        public static final int highlighted_text_material_dark=0x7f0a0024;
        /**  TODO: This is 40% alpha on the default accent color. 
         */
        public static final int highlighted_text_material_light=0x7f0a0025;
        public static final int hint_foreground_material_dark=0x7f0a0022;
        public static final int hint_foreground_material_light=0x7f0a0023;
        public static final int material_blue_grey_800=0x7f0a0037;
        public static final int material_blue_grey_900=0x7f0a0038;
        public static final int material_blue_grey_950=0x7f0a0039;
        public static final int material_deep_teal_200=0x7f0a0035;
        public static final int material_deep_teal_500=0x7f0a0036;
        public static final int material_grey_100=0x7f0a0033;
        public static final int material_grey_300=0x7f0a0032;
        public static final int material_grey_50=0x7f0a0034;
        public static final int material_grey_600=0x7f0a0031;
        public static final int material_grey_800=0x7f0a0030;
        public static final int material_grey_850=0x7f0a002f;
        public static final int material_grey_900=0x7f0a002e;
        public static final int primary_dark_material_dark=0x7f0a000c;
        public static final int primary_dark_material_light=0x7f0a000d;
        public static final int primary_material_dark=0x7f0a000a;
        public static final int primary_material_light=0x7f0a000b;
        /**  100% white 
         */
        public static final int primary_text_default_material_dark=0x7f0a0028;
        /**  87% black 
         */
        public static final int primary_text_default_material_light=0x7f0a0026;
        /**  30% of default values 
         */
        public static final int primary_text_disabled_material_dark=0x7f0a002c;
        /**  26% of default values 
         */
        public static final int primary_text_disabled_material_light=0x7f0a002a;
        /**  20% white (foreground) 
         */
        public static final int ripple_material_dark=0x7f0a000e;
        /**  12% black (foreground) 
         */
        public static final int ripple_material_light=0x7f0a000f;
        /**  70% white 
         */
        public static final int secondary_text_default_material_dark=0x7f0a0029;
        /**  54% black 
         */
        public static final int secondary_text_default_material_light=0x7f0a0027;
        public static final int secondary_text_disabled_material_dark=0x7f0a002d;
        public static final int secondary_text_disabled_material_light=0x7f0a002b;
        public static final int sim_noitification=0x7f0a003a;
        public static final int switch_thumb_disabled_material_dark=0x7f0a0016;
        public static final int switch_thumb_disabled_material_light=0x7f0a0017;
        public static final int switch_thumb_material_dark=0x7f0a0045;
        public static final int switch_thumb_material_light=0x7f0a0046;
        public static final int switch_thumb_normal_material_dark=0x7f0a0014;
        public static final int switch_thumb_normal_material_light=0x7f0a0015;
    }
    public static final class dimen {
        /**  Default content inset of an action bar. 
 Default content inset of an action bar. 
         */
        public static final int abc_action_bar_content_inset_material=0x7f07002d;
        /**  Default height of an action bar. 
 Default height of an action bar. 
 Default height of an action bar. 
         */
        public static final int abc_action_bar_default_height_material=0x7f07002c;
        /**  Default end padding of an action bar. 
 Default end padding of an action bar. 
         */
        public static final int abc_action_bar_default_padding_end_material=0x7f07002f;
        /**  Default start padding of an action bar. 
 Default start padding of an action bar. 
         */
        public static final int abc_action_bar_default_padding_start_material=0x7f07002e;
        /**  Vertical padding around action bar icons. 
         */
        public static final int abc_action_bar_icon_vertical_padding_material=0x7f070030;
        /**  Padding to add to the end of the overflow action button. 
         */
        public static final int abc_action_bar_overflow_padding_end_material=0x7f070035;
        /**  Padding to add to the start of the overflow action button. 
         */
        public static final int abc_action_bar_overflow_padding_start_material=0x7f070034;
        /**  Size of the indeterminate Progress Bar 
 Size of the indeterminate Progress Bar 
         */
        public static final int abc_action_bar_progress_bar_size=0x7f07000a;
        /**  Maximum height for a stacked tab bar as part of an action bar 
         */
        public static final int abc_action_bar_stacked_max_height=0x7f070009;
        /**  Maximum width for a stacked action bar tab. This prevents
         action bar tabs from becoming too wide on a wide screen when only
         a few are present. 
         */
        public static final int abc_action_bar_stacked_tab_max_width=0x7f070008;
        /**  Bottom margin for action bar subtitles 
         */
        public static final int abc_action_bar_subtitle_bottom_margin_material=0x7f070032;
        /**  Top margin for action bar subtitles 
         */
        public static final int abc_action_bar_subtitle_top_margin_material=0x7f070031;
        public static final int abc_action_button_min_height_material=0x7f070038;
        public static final int abc_action_button_min_width_material=0x7f070037;
        public static final int abc_action_button_min_width_overflow_material=0x7f070036;
        /**  Dialog button bar height 
 Dialog button bar height 
         */
        public static final int abc_alert_dialog_button_bar_height=0x7f070022;
        public static final int abc_button_inset_horizontal_material=0x7f070016;
        public static final int abc_button_inset_vertical_material=0x7f070015;
        public static final int abc_button_padding_horizontal_material=0x7f070018;
        /**  Default inner padding within buttons 
         */
        public static final int abc_button_padding_vertical_material=0x7f070017;
        /**  The maximum width we would prefer dialogs to be.  0 if there is no
    maximum (let them grow as large as the screen).  Actual values are
    specified for -large and -xlarge configurations. 
 see comment in values/config.xml 
 see comment in values/config.xml 
         */
        public static final int abc_config_prefDialogWidth=0x7f070007;
        /**  Default rounded corner for controls 
         */
        public static final int abc_control_corner_material=0x7f07001b;
        /**  Default insets (outer padding) around controls 
         */
        public static final int abc_control_inset_material=0x7f070019;
        /**  Default inner padding within controls 
         */
        public static final int abc_control_padding_material=0x7f07001a;
        /**  The platform's desired fixed height for a dialog along the major axis
         (the screen is in portrait). This may be either a fraction or a dimension.
         */
        public static final int abc_dialog_fixed_height_major=0x7f070013;
        /**  The platform's desired fixed height for a dialog along the minor axis
         (the screen is in landscape). This may be either a fraction or a dimension.
         */
        public static final int abc_dialog_fixed_height_minor=0x7f070014;
        /**  The platform's desired fixed width for a dialog along the major axis
         (the screen is in landscape). This may be either a fraction or a dimension.
         */
        public static final int abc_dialog_fixed_width_major=0x7f070011;
        /**  The platform's desired fixed width for a dialog along the minor axis
         (the screen is in portrait). This may be either a fraction or a dimension.
         */
        public static final int abc_dialog_fixed_width_minor=0x7f070012;
        /**  Padding above and below selection dialog lists. 
         */
        public static final int abc_dialog_list_padding_vertical_material=0x7f070023;
        /**  The platform's desired minimum size for a dialog's width when it
         is along the major axis (that is the screen is landscape).  This may
         be either a fraction or a dimension. 
         */
        public static final int abc_dialog_min_width_major=0x7f070025;
        /**  The platform's desired minimum size for a dialog's width when it
         is along the minor axis (that is the screen is portrait).  This may
         be either a fraction or a dimension. 
         */
        public static final int abc_dialog_min_width_minor=0x7f070026;
        public static final int abc_dialog_padding_material=0x7f070020;
        public static final int abc_dialog_padding_top_material=0x7f070021;
        public static final int abc_disabled_alpha_material_dark=0x7f07004a;
        public static final int abc_disabled_alpha_material_light=0x7f070049;
        /**  Width of the icon in a dropdown list 
         */
        public static final int abc_dropdownitem_icon_width=0x7f070010;
        /**  Text padding for dropdown items 
         */
        public static final int abc_dropdownitem_text_padding_left=0x7f07000e;
        public static final int abc_dropdownitem_text_padding_right=0x7f07000f;
        public static final int abc_edit_text_inset_bottom_material=0x7f07001e;
        public static final int abc_edit_text_inset_horizontal_material=0x7f07001c;
        public static final int abc_edit_text_inset_top_material=0x7f07001d;
        public static final int abc_floating_window_z=0x7f070048;
        /**  Default padding for list items. This should match the action bar
         content inset so that ListActivity items line up correctly. 
         */
        public static final int abc_list_item_padding_horizontal_material=0x7f070033;
        public static final int abc_panel_menu_list_width=0x7f07000b;
        /**  Preferred width of the search view. 
         */
        public static final int abc_search_view_preferred_width=0x7f07000d;
        /**  Minimum width of the search view text entry area. 
 Minimum width of the search view text entry area. 
 Minimum width of the search view text entry area. 
 Minimum width of the search view text entry area. 
 Minimum width of the search view text entry area. 
         */
        public static final int abc_search_view_text_min_width=0x7f07000c;
        public static final int abc_seekbar_track_background_height_material=0x7f07004b;
        public static final int abc_seekbar_track_progress_height_material=0x7f07004c;
        /**  Dialog padding minus control padding, used to fix alignment. 
         */
        public static final int abc_select_dialog_padding_start_material=0x7f070024;
        /**  Since optical insets are not available pre-v18, we add a small amount of padding 
 Since SwitchCompat can use optical insets on v18+, reset the manual padding 
         */
        public static final int abc_switch_padding=0x7f07001f;
        public static final int abc_text_size_body_1_material=0x7f070042;
        public static final int abc_text_size_body_2_material=0x7f070041;
        public static final int abc_text_size_button_material=0x7f070044;
        public static final int abc_text_size_caption_material=0x7f070043;
        public static final int abc_text_size_display_1_material=0x7f07003c;
        public static final int abc_text_size_display_2_material=0x7f07003b;
        public static final int abc_text_size_display_3_material=0x7f07003a;
        public static final int abc_text_size_display_4_material=0x7f070039;
        public static final int abc_text_size_headline_material=0x7f07003d;
        public static final int abc_text_size_large_material=0x7f070045;
        public static final int abc_text_size_medium_material=0x7f070046;
        public static final int abc_text_size_menu_material=0x7f070040;
        public static final int abc_text_size_small_material=0x7f070047;
        public static final int abc_text_size_subhead_material=0x7f07003f;
        /**  Use the default subtitle sizes on tablets. 
 Default text size for action bar subtitle.
         */
        public static final int abc_text_size_subtitle_material_toolbar=0x7f07002b;
        public static final int abc_text_size_title_material=0x7f07003e;
        /**  Use the default title sizes on tablets. 
 Default text size for action bar title.
         */
        public static final int abc_text_size_title_material_toolbar=0x7f07002a;
        public static final int action_bar_switch_padding=0x7f07004f;
        /**  ActionBar contentInsetStart 
         */
        public static final int actionbar_contentInsetStart=0x7f070077;
        /**  ActionBar height 
         */
        public static final int actionbar_size=0x7f070076;
        public static final int actionbar_subsettings_contentInsetStart=0x7f070078;
        /** 
         Example customization of dimensions originally defined in res/values/dimens.xml
         (such as screen margins) for screens with more than 820dp of available width. This
         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
    
         */
        public static final int activity_horizontal_margin=0x7f0700d7;
        public static final int app_icon_size=0x7f070050;
        /**  The y translation to apply at the start in appear animations. 
         */
        public static final int appear_y_translation_start=0x7f070000;
        public static final int appwidget_min_height=0x7f07006a;
        public static final int appwidget_min_width=0x7f070069;
        public static final int badge_size=0x7f0700d6;
        public static final int battery_history_chart_height=0x7f070059;
        public static final int bind_app_widget_dialog_checkbox_bottom_padding=0x7f070057;
        /**  Bluetooth Preferences 
         */
        public static final int bluetooth_dialog_padding=0x7f0700af;
        public static final int bluetooth_landscape_actionbar_height=0x7f0700b3;
        public static final int bluetooth_landscape_switchbar_height=0x7f0700b5;
        /**  Bluetooth ActionBar 
         */
        public static final int bluetooth_landscape_title_textsize=0x7f0700b1;
        public static final int bluetooth_pairing_padding=0x7f0700b0;
        public static final int bluetooth_portrait_actionbar_height=0x7f0700b4;
        public static final int bluetooth_portrait_switchbar_height=0x7f0700b6;
        public static final int bluetooth_portrait_title_textsize=0x7f0700b2;
        /**  Default text size for caption preview samples. Uses dp rather than sp because captions are not scaled. 
         */
        public static final int caption_preview_text_size=0x7f070075;
        public static final int captioning_preview_height=0x7f07006e;
        public static final int checkbox_layout_padding=0x7f0700ae;
        /**  CheckBoxPreference 
         */
        public static final int checkbox_widget_min_width=0x7f0700ad;
        public static final int circle_avatar_size=0x7f07006c;
        /**  Color picker 
         */
        public static final int color_swatch_size=0x7f0700b9;
        public static final int color_swatch_stroke_width=0x7f0700ba;
        public static final int confirm_credentials_security_method_margin=0x7f0700cb;
        public static final int content_margin_left=0x7f070054;
        public static final int crypt_clock_size=0x7f07005d;
        /**  CryptKeeper edit text ime icon padding 
         */
        public static final int crypt_keeper_edit_text_ime_padding=0x7f07009f;
        /**  CryptKeeper emergency call button dimensions 
         */
        public static final int crypt_keeper_emergency_call_space_above=0x7f07009e;
        /**  CryptKeeper top margin for password/pin screen 
         */
        public static final int crypt_keeper_password_top_margin=0x7f07009b;
        /**  CryptKeeper password/pin width 
         */
        public static final int crypt_keeper_password_width=0x7f07009d;
        /**  CryptKeeper pattern margin on phone 
         */
        public static final int crypt_keeper_pattern_margin=0x7f0700a0;
        /**  CryptKeeper pattern size for tablet 
         */
        public static final int crypt_keeper_pattern_size=0x7f0700a1;
        /**  CryptKeeper top margin for pattern screen 
         */
        public static final int crypt_keeper_pattern_top_margin=0x7f07009c;
        /**  Dashboard category panel elevation 
         */
        public static final int dashboard_category_elevation=0x7f070081;
        public static final int dashboard_category_padding_end=0x7f070080;
        /**  Dashboard category padding start / end 
         */
        public static final int dashboard_category_padding_start=0x7f07007f;
        /**  Dashboard category title layout height 
         */
        public static final int dashboard_category_title_height=0x7f070082;
        /**  Dashboard category title margin start 
         */
        public static final int dashboard_category_title_margin_start=0x7f070083;
        /**  Dashboard margins between each tiles within the layout 
         */
        public static final int dashboard_cell_gap_x=0x7f070079;
        public static final int dashboard_cell_gap_y=0x7f07007a;
        public static final int dashboard_padding_bottom=0x7f07007e;
        public static final int dashboard_padding_end=0x7f07007c;
        /**  Dashboard padding in its container 
         */
        public static final int dashboard_padding_start=0x7f07007b;
        public static final int dashboard_padding_top=0x7f07007d;
        public static final int dashboard_tile_image_margin_end=0x7f070087;
        /**  Dashboard tile image margin start / end 
         */
        public static final int dashboard_tile_image_margin_start=0x7f070086;
        /**  Dashboard image tile size 
         */
        public static final int dashboard_tile_image_size=0x7f070085;
        /**  Dashboard tile minimum height 
         */
        public static final int dashboard_tile_minimum_height=0x7f070084;
        public static final int data_usage_chart_height=0x7f07005a;
        public static final int data_usage_chart_optimalWidth=0x7f07005b;
        public static final int delete_profile_dialog_padding_left_right=0x7f0700d1;
        /**  Delete managed profile dialog 
         */
        public static final int delete_profile_dialog_padding_top=0x7f0700d0;
        public static final int description_margin_sides=0x7f070056;
        public static final int description_margin_top=0x7f070055;
        public static final int device_memory_usage_button_height=0x7f07004e;
        public static final int device_memory_usage_button_width=0x7f07004d;
        public static final int disabled_alpha_material_dark=0x7f070003;
        public static final int disabled_alpha_material_light=0x7f070002;
        /**  The translation for disappearing security views after having solved them. 
         */
        public static final int disappear_y_translation=0x7f070001;
        public static final int divider_height=0x7f070064;
        public static final int divider_margin_bottom=0x7f070066;
        public static final int divider_margin_top=0x7f070065;
        public static final int fab_elevation=0x7f0700ce;
        public static final int fab_margin=0x7f0700cd;
        public static final int fab_press_translation_z=0x7f0700cf;
        public static final int fab_size=0x7f0700cc;
        public static final int fingerprint_animation_size=0x7f0700c5;
        public static final int fingerprint_decor_padding_top=0x7f0700c2;
        public static final int fingerprint_dot_radius=0x7f0700be;
        public static final int fingerprint_enrolling_content_margin_top=0x7f0700c7;
        public static final int fingerprint_error_text_appear_distance=0x7f0700c3;
        public static final int fingerprint_error_text_disappear_distance=0x7f0700c4;
        public static final int fingerprint_find_sensor_graphic_size=0x7f0700c0;
        public static final int fingerprint_illustration_aspect_ratio=0x7f0700c1;
        public static final int fingerprint_in_app_indicator_size=0x7f0700c8;
        public static final int fingerprint_progress_bar_size=0x7f0700c6;
        public static final int fingerprint_pulse_radius=0x7f0700bf;
        /**  Fingerprint 
         */
        public static final int fingerprint_ring_radius=0x7f0700bc;
        public static final int fingerprint_ring_thickness=0x7f0700bd;
        /**   Size of icons in the top-level of settings  
         */
        public static final int header_icon_width=0x7f070068;
        public static final int highlight_alpha_material_colored=0x7f070006;
        public static final int highlight_alpha_material_dark=0x7f070005;
        public static final int highlight_alpha_material_light=0x7f070004;
        public static final int installed_app_details_bullet_offset=0x7f070058;
        public static final int mdm_app_info_height=0x7f0700d2;
        public static final int mdm_app_info_padding_top_bottom=0x7f0700d3;
        public static final int mdm_app_name_padding_left=0x7f0700d4;
        public static final int notification_app_icon_badge_margin=0x7f070072;
        public static final int notification_app_icon_badge_size=0x7f070071;
        public static final int notification_app_icon_size=0x7f070070;
        /**  The width of the big icons in notifications. 
         */
        public static final int notification_large_icon_height=0x7f070028;
        /**  The width of the big icons in notifications. 
         */
        public static final int notification_large_icon_width=0x7f070027;
        /**  Size of smaller notification text (see TextAppearance.StatusBar.EventContent.Line2, Info,
         Time) 
         */
        public static final int notification_subtext_size=0x7f070029;
        public static final int pager_tabs_padding=0x7f07006b;
        /**  RedactionInterstitial 
         */
        public static final int redaction_vertical_margins=0x7f0700bb;
        public static final int screen_margin_bottom=0x7f070053;
        public static final int screen_margin_sides=0x7f070051;
        public static final int screen_margin_top=0x7f070052;
        /**  Screen pinning textview paddings 
         */
        public static final int screen_pinning_textview_padding=0x7f0700a2;
        /**  Search Panel elevation 
         */
        public static final int search_panel_elevation=0x7f07008c;
        public static final int search_result_item_image_margin_end=0x7f070090;
        /**  Result item image margin start / end 
         */
        public static final int search_result_item_image_margin_start=0x7f07008f;
        /**  Result item image size 
         */
        public static final int search_result_item_image_size=0x7f07008e;
        public static final int search_suggestion_item_image_margin_end=0x7f070093;
        /**  Suggestion item image margin start / end 
         */
        public static final int search_suggestion_item_image_margin_start=0x7f070092;
        /**  Suggestion item image size 
         */
        public static final int search_suggestion_item_image_size=0x7f070091;
        /**  Search title (recent / results) padding start 
         */
        public static final int search_title_padding_start=0x7f07008d;
        public static final int settings_side_margin=0x7f07006f;
        public static final int setup_add_network_item_height=0x7f07005e;
        public static final int setup_fingerprint_progress_bar_size=0x7f0700ca;
        public static final int setup_fingerprint_ring_radius=0x7f0700c9;
        /**  Size of padding to give in the wifi list when there is no icon 
         */
        public static final int setup_list_no_icon_padding=0x7f07005f;
        public static final int setup_preference_icon_frame_margin_start=0x7f070060;
        public static final int setup_preference_icon_frame_padding_end=0x7f070061;
        public static final int setup_preference_icon_frame_width=0x7f070062;
        public static final int setup_wizard_margin_top=0x7f070063;
        public static final int shortcut_size=0x7f0700d5;
        public static final int sim_content_padding=0x7f0700a7;
        /**  SIM Dialog Margin bottom 
         */
        public static final int sim_dialog_margin_bottom=0x7f0700a4;
        /**  SIM Dialog Margin top 
         */
        public static final int sim_dialog_margin_top=0x7f0700a3;
        /**  SIM Dialog padding 
         */
        public static final int sim_dialog_padding=0x7f0700a5;
        public static final int sim_label_padding=0x7f0700a6;
        public static final int switchbar_margin_end=0x7f070089;
        /**  SwitchBar margin start / end 
         */
        public static final int switchbar_margin_start=0x7f070088;
        public static final int switchbar_subsettings_margin_end=0x7f07008b;
        /**  SwitchBar sub settings margin start / end 
         */
        public static final int switchbar_subsettings_margin_start=0x7f07008a;
        /**  Minimum width for the popup for updating a user's photo. 
         */
        public static final int update_user_photo_popup_min_width=0x7f07006d;
        /**  Height of a user icon view 
         */
        public static final int user_icon_view_height=0x7f0700a8;
        /**  User spinner 
         */
        public static final int user_spinner_height=0x7f0700a9;
        public static final int user_spinner_item_height=0x7f0700ac;
        public static final int user_spinner_padding=0x7f0700aa;
        public static final int user_spinner_padding_sides=0x7f0700ab;
        public static final int vert_divider_width=0x7f070067;
        public static final int volume_seekbar_side_margin=0x7f07005c;
        public static final int wifi_assistant_height=0x7f070098;
        public static final int wifi_assistant_image_start=0x7f07009a;
        public static final int wifi_assistant_image_top=0x7f070099;
        public static final int wifi_assistant_padding=0x7f070096;
        public static final int wifi_assistant_padding_start_end=0x7f070095;
        /**  Dimensions for Wifi Assistant Card 
         */
        public static final int wifi_assistant_padding_top_bottom=0x7f070094;
        public static final int wifi_assistant_text_padding=0x7f070097;
        /**  WiFi Preferences 
         */
        public static final int wifi_divider_height=0x7f0700b7;
        public static final int wifi_preference_badge_padding=0x7f0700b8;
        public static final int zen_schedule_day_margin=0x7f070074;
        public static final int zen_schedule_rule_checkbox_padding=0x7f070073;
    }
    public static final class drawable {
        public static final int abc_ab_share_pack_mtrl_alpha=0x7f020000;
        public static final int abc_action_bar_item_background_material=0x7f020001;
        public static final int abc_btn_borderless_material=0x7f020002;
        public static final int abc_btn_check_material=0x7f020003;
        public static final int abc_btn_check_to_on_mtrl_000=0x7f020004;
        public static final int abc_btn_check_to_on_mtrl_015=0x7f020005;
        public static final int abc_btn_colored_material=0x7f020006;
        public static final int abc_btn_default_mtrl_shape=0x7f020007;
        public static final int abc_btn_radio_material=0x7f020008;
        public static final int abc_btn_radio_to_on_mtrl_000=0x7f020009;
        public static final int abc_btn_radio_to_on_mtrl_015=0x7f02000a;
        public static final int abc_btn_rating_star_off_mtrl_alpha=0x7f02000b;
        public static final int abc_btn_rating_star_on_mtrl_alpha=0x7f02000c;
        public static final int abc_btn_switch_to_on_mtrl_00001=0x7f02000d;
        public static final int abc_btn_switch_to_on_mtrl_00012=0x7f02000e;
        public static final int abc_cab_background_internal_bg=0x7f02000f;
        public static final int abc_cab_background_top_material=0x7f020010;
        public static final int abc_cab_background_top_mtrl_alpha=0x7f020011;
        public static final int abc_control_background_material=0x7f020012;
        public static final int abc_dialog_material_background_dark=0x7f020013;
        public static final int abc_dialog_material_background_light=0x7f020014;
        public static final int abc_edit_text_material=0x7f020015;
        public static final int abc_ic_ab_back_mtrl_am_alpha=0x7f020016;
        public static final int abc_ic_clear_mtrl_alpha=0x7f020017;
        public static final int abc_ic_commit_search_api_mtrl_alpha=0x7f020018;
        public static final int abc_ic_go_search_api_mtrl_alpha=0x7f020019;
        public static final int abc_ic_menu_copy_mtrl_am_alpha=0x7f02001a;
        public static final int abc_ic_menu_cut_mtrl_alpha=0x7f02001b;
        public static final int abc_ic_menu_moreoverflow_mtrl_alpha=0x7f02001c;
        public static final int abc_ic_menu_paste_mtrl_am_alpha=0x7f02001d;
        public static final int abc_ic_menu_selectall_mtrl_alpha=0x7f02001e;
        public static final int abc_ic_menu_share_mtrl_alpha=0x7f02001f;
        public static final int abc_ic_search_api_mtrl_alpha=0x7f020020;
        public static final int abc_ic_star_black_16dp=0x7f020021;
        public static final int abc_ic_star_black_36dp=0x7f020022;
        public static final int abc_ic_star_half_black_16dp=0x7f020023;
        public static final int abc_ic_star_half_black_36dp=0x7f020024;
        public static final int abc_ic_voice_search_api_mtrl_alpha=0x7f020025;
        public static final int abc_item_background_holo_dark=0x7f020026;
        public static final int abc_item_background_holo_light=0x7f020027;
        public static final int abc_list_divider_mtrl_alpha=0x7f020028;
        public static final int abc_list_focused_holo=0x7f020029;
        public static final int abc_list_longpressed_holo=0x7f02002a;
        public static final int abc_list_pressed_holo_dark=0x7f02002b;
        public static final int abc_list_pressed_holo_light=0x7f02002c;
        public static final int abc_list_selector_background_transition_holo_dark=0x7f02002d;
        public static final int abc_list_selector_background_transition_holo_light=0x7f02002e;
        public static final int abc_list_selector_disabled_holo_dark=0x7f02002f;
        public static final int abc_list_selector_disabled_holo_light=0x7f020030;
        public static final int abc_list_selector_holo_dark=0x7f020031;
        public static final int abc_list_selector_holo_light=0x7f020032;
        public static final int abc_menu_hardkey_panel_mtrl_mult=0x7f020033;
        public static final int abc_popup_background_mtrl_mult=0x7f020034;
        public static final int abc_ratingbar_full_material=0x7f020035;
        public static final int abc_ratingbar_indicator_material=0x7f020036;
        public static final int abc_ratingbar_small_material=0x7f020037;
        public static final int abc_scrubber_control_off_mtrl_alpha=0x7f020038;
        public static final int abc_scrubber_control_to_pressed_mtrl_000=0x7f020039;
        public static final int abc_scrubber_control_to_pressed_mtrl_005=0x7f02003a;
        public static final int abc_scrubber_primary_mtrl_alpha=0x7f02003b;
        public static final int abc_scrubber_track_mtrl_alpha=0x7f02003c;
        public static final int abc_seekbar_thumb_material=0x7f02003d;
        public static final int abc_seekbar_track_material=0x7f02003e;
        public static final int abc_spinner_mtrl_am_alpha=0x7f02003f;
        public static final int abc_spinner_textfield_background_material=0x7f020040;
        public static final int abc_switch_thumb_material=0x7f020041;
        public static final int abc_switch_track_mtrl_alpha=0x7f020042;
        public static final int abc_tab_indicator_material=0x7f020043;
        public static final int abc_tab_indicator_mtrl_alpha=0x7f020044;
        public static final int abc_text_cursor_material=0x7f020045;
        public static final int abc_textfield_activated_mtrl_alpha=0x7f020046;
        public static final int abc_textfield_default_mtrl_alpha=0x7f020047;
        public static final int abc_textfield_search_activated_mtrl_alpha=0x7f020048;
        public static final int abc_textfield_search_default_mtrl_alpha=0x7f020049;
        public static final int abc_textfield_search_material=0x7f02004a;
        public static final int ic_bt_cellphone=0x7f02004b;
        public static final int ic_bt_headphones_a2dp=0x7f02004c;
        public static final int ic_bt_headset_hfp=0x7f02004d;
        public static final int ic_bt_misc_hid=0x7f02004e;
        public static final int ic_bt_network_pan=0x7f02004f;
        public static final int ic_bt_pointing_hid=0x7f020050;
        public static final int ic_launcher=0x7f020051;
        public static final int ic_lockscreen_ime=0x7f020052;
        public static final int notification_template_icon_bg=0x7f020053;
    }
    public static final class fraction {
        public static final int fingerprint_sensor_location_fraction_x=0x7f0e0000;
        public static final int fingerprint_sensor_location_fraction_y=0x7f0e0001;
    }
    public static final class id {
        public static final int action0=0x7f0c007d;
        public static final int action_bar=0x7f0c0044;
        public static final int action_bar_activity_content=0x7f0c0003;
        public static final int action_bar_container=0x7f0c0043;
        public static final int action_bar_root=0x7f0c003f;
        public static final int action_bar_spinner=0x7f0c0002;
        public static final int action_bar_subtitle=0x7f0c0025;
        public static final int action_bar_title=0x7f0c0024;
        public static final int action_context_bar=0x7f0c0045;
        public static final int action_divider=0x7f0c0081;
        public static final int action_menu_divider=0x7f0c0005;
        public static final int action_menu_presenter=0x7f0c0006;
        public static final int action_mode_bar=0x7f0c0041;
        public static final int action_mode_bar_stub=0x7f0c0040;
        public static final int action_mode_close_button=0x7f0c0026;
        public static final int action_settings=0x7f0c0091;
        public static final int activity_chooser_view_content=0x7f0c0027;
        public static final int alertTitle=0x7f0c0033;
        public static final int always=0x7f0c001a;
        public static final int app_background=0x7f0c0074;
        public static final int app_detail=0x7f0c0070;
        public static final int app_foreground=0x7f0c0073;
        public static final int app_icon=0x7f0c0071;
        public static final int app_settings=0x7f0c0075;
        public static final int app_summary=0x7f0c0065;
        public static final int app_switches=0x7f0c0076;
        public static final int app_title=0x7f0c0064;
        public static final int app_titles=0x7f0c0072;
        public static final int appsize=0x7f0c005f;
        public static final int audiosize=0x7f0c005d;
        public static final int beginning=0x7f0c001f;
        public static final int buttonPanel=0x7f0c002e;
        public static final int bytes=0x7f0c0066;
        public static final int cancel_action=0x7f0c007e;
        public static final int chart=0x7f0c0067;
        public static final int checkbox=0x7f0c003c;
        public static final int chronometer=0x7f0c0084;
        public static final int collapseActionView=0x7f0c001b;
        public static final int contentPanel=0x7f0c0034;
        public static final int currentey=0x7f0c0057;
        public static final int custom=0x7f0c003a;
        public static final int customPanel=0x7f0c0039;
        public static final int cycle_day=0x7f0c006d;
        public static final int cycle_summary=0x7f0c006f;
        public static final int cycles_spinner=0x7f0c006e;
        public static final int data=0x7f0c0061;
        public static final int data_usage_menu_cellular_networks=0x7f0c008f;
        public static final int data_usage_menu_help=0x7f0c0090;
        public static final int data_usage_menu_metered=0x7f0c008d;
        public static final int data_usage_menu_restrict_background=0x7f0c008a;
        public static final int data_usage_menu_show_ethernet=0x7f0c008c;
        public static final int data_usage_menu_show_wifi=0x7f0c008b;
        public static final int data_usage_menu_sim_cards=0x7f0c008e;
        public static final int decor_content_parent=0x7f0c0042;
        public static final int default_activity_button=0x7f0c002a;
        public static final int detail_series=0x7f0c006a;
        public static final int disableHome=0x7f0c000e;
        public static final int disclaimer=0x7f0c0079;
        public static final int edit_query=0x7f0c0046;
        public static final int end=0x7f0c0020;
        public static final int end_padder=0x7f0c0089;
        public static final int expand_activities_button=0x7f0c0028;
        public static final int expanded_menu=0x7f0c003b;
        public static final int grid=0x7f0c0068;
        public static final int home=0x7f0c0000;
        public static final int homeAsUp=0x7f0c000f;
        public static final int horizontal=0x7f0c0022;
        public static final int icon=0x7f0c002c;
        public static final int ifRoom=0x7f0c001c;
        public static final int image=0x7f0c0029;
        public static final int info=0x7f0c0088;
        public static final int line1=0x7f0c0082;
        public static final int line3=0x7f0c0086;
        public static final int listMode=0x7f0c000b;
        public static final int list_item=0x7f0c002b;
        public static final int media_actions=0x7f0c0080;
        public static final int memPercent=0x7f0c0060;
        public static final int middle=0x7f0c0021;
        public static final int model=0x7f0c0054;
        public static final int multiply=0x7f0c0015;
        public static final int network_switches=0x7f0c0078;
        public static final int network_switches_container=0x7f0c0077;
        public static final int never=0x7f0c001d;
        public static final int none=0x7f0c0010;
        public static final int normal=0x7f0c000c;
        public static final int othersize=0x7f0c005e;
        public static final int parentPanel=0x7f0c0030;
        public static final int percent=0x7f0c005a;
        public static final int photosize=0x7f0c005b;
        public static final int pinned_header=0x7f0c007c;
        public static final int preference_highlight_key=0x7f0c0009;
        public static final int progress_circular=0x7f0c0007;
        public static final int progress_horizontal=0x7f0c0008;
        public static final int radio=0x7f0c003e;
        public static final int romverison=0x7f0c0055;
        public static final int screen=0x7f0c0016;
        public static final int scrollIndicatorDown=0x7f0c0038;
        public static final int scrollIndicatorUp=0x7f0c0035;
        public static final int scrollView=0x7f0c0036;
        public static final int search_badge=0x7f0c0048;
        public static final int search_bar=0x7f0c0047;
        public static final int search_button=0x7f0c0049;
        public static final int search_close_btn=0x7f0c004e;
        public static final int search_edit_frame=0x7f0c004a;
        public static final int search_go_btn=0x7f0c0050;
        public static final int search_mag_icon=0x7f0c004b;
        public static final int search_plate=0x7f0c004c;
        public static final int search_src_text=0x7f0c004d;
        public static final int search_voice_btn=0x7f0c0051;
        public static final int select_dialog_listview=0x7f0c0052;
        public static final int series=0x7f0c0069;
        public static final int shortcut=0x7f0c003d;
        public static final int showCustom=0x7f0c0011;
        public static final int showHome=0x7f0c0012;
        public static final int showTitle=0x7f0c0013;
        public static final int sim=0x7f0c0062;
        public static final int sn=0x7f0c0053;
        public static final int spacer=0x7f0c002f;
        public static final int split_action_bar=0x7f0c0004;
        public static final int src_atop=0x7f0c0017;
        public static final int src_in=0x7f0c0018;
        public static final int src_over=0x7f0c0019;
        public static final int status_bar_latest_event_content=0x7f0c007f;
        public static final int stupid_padding=0x7f0c007a;
        public static final int submit_area=0x7f0c004f;
        public static final int sweep_limit=0x7f0c006c;
        public static final int sweep_warning=0x7f0c006b;
        public static final int tabMode=0x7f0c000d;
        public static final int tabs_container=0x7f0c007b;
        public static final int text=0x7f0c0087;
        public static final int text2=0x7f0c0085;
        public static final int textSpacerNoButtons=0x7f0c0037;
        public static final int time=0x7f0c0083;
        public static final int title=0x7f0c002d;
        public static final int title_template=0x7f0c0032;
        public static final int topPanel=0x7f0c0031;
        public static final int totalSD=0x7f0c0058;
        public static final int up=0x7f0c0001;
        public static final int useLogo=0x7f0c0014;
        public static final int usedSD=0x7f0c0059;
        public static final int vertical=0x7f0c0023;
        public static final int videosize=0x7f0c005c;
        public static final int widget_frame=0x7f0c0063;
        public static final int withText=0x7f0c001e;
        public static final int wrap_content=0x7f0c000a;
        public static final int xyverison=0x7f0c0056;
    }
    public static final class integer {
        public static final int abc_config_activityDefaultDur=0x7f0b0001;
        /**  The duration (in milliseconds) of the activity open/close and fragment open/close animations. 
         */
        public static final int abc_config_activityShortDur=0x7f0b0000;
        /**  The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
     an action bar/action mode. This will be used to determine how many
     showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
 The maximum number of action buttons that should be permitted within
         an action bar/action mode. This will be used to determine how many
         showAsAction="ifRoom" items can fit. "always" items can override this. 
         */
        public static final int abc_max_action_buttons=0x7f0b0004;
        public static final int bluetooth_name_length=0x7f0b0008;
        public static final int cancel_button_image_alpha=0x7f0b0003;
        /**  Weight of the left pane in a multi-pane preference layout. 
         */
        public static final int preferences_left_pane_weight=0x7f0b0005;
        /**  Weight of the right pane in a multi-pane preference layout. So the split is 40:60 
         */
        public static final int preferences_right_pane_weight=0x7f0b0006;
        /**  Sim Card Name length 
         */
        public static final int sim_name_length=0x7f0b0007;
        /**  Maximum numerical value that will be shown in a status bar
         notification icon or in the notification itself. Will be replaced
         with @string/status_bar_notification_info_overflow when shown in the
         UI. 
         */
        public static final int status_bar_notification_info_maxnum=0x7f0b0002;
    }
    public static final class layout {
        public static final int abc_action_bar_title_item=0x7f030000;
        public static final int abc_action_bar_up_container=0x7f030001;
        public static final int abc_action_bar_view_list_nav_layout=0x7f030002;
        public static final int abc_action_menu_item_layout=0x7f030003;
        public static final int abc_action_menu_layout=0x7f030004;
        public static final int abc_action_mode_bar=0x7f030005;
        public static final int abc_action_mode_close_item_material=0x7f030006;
        public static final int abc_activity_chooser_view=0x7f030007;
        public static final int abc_activity_chooser_view_list_item=0x7f030008;
        public static final int abc_alert_dialog_button_bar_material=0x7f030009;
        public static final int abc_alert_dialog_material=0x7f03000a;
        public static final int abc_dialog_title_material=0x7f03000b;
        public static final int abc_expanded_menu_layout=0x7f03000c;
        public static final int abc_list_menu_item_checkbox=0x7f03000d;
        public static final int abc_list_menu_item_icon=0x7f03000e;
        public static final int abc_list_menu_item_layout=0x7f03000f;
        public static final int abc_list_menu_item_radio=0x7f030010;
        public static final int abc_popup_menu_item_layout=0x7f030011;
        public static final int abc_screen_content_include=0x7f030012;
        public static final int abc_screen_simple=0x7f030013;
        public static final int abc_screen_simple_overlay_action_mode=0x7f030014;
        public static final int abc_screen_toolbar=0x7f030015;
        public static final int abc_search_dropdown_item_icons_2line=0x7f030016;
        public static final int abc_search_view=0x7f030017;
        public static final int abc_select_dialog_material=0x7f030018;
        public static final int activity_main=0x7f030019;
        public static final int app_item=0x7f03001a;
        public static final int data_activity=0x7f03001b;
        public static final int data_usage_app_title=0x7f03001c;
        public static final int data_usage_bytes_editor=0x7f03001d;
        public static final int data_usage_chart=0x7f03001e;
        public static final int data_usage_cycle_editor=0x7f03001f;
        public static final int data_usage_cycle_item=0x7f030020;
        public static final int data_usage_cycle_item_dropdown=0x7f030021;
        public static final int data_usage_cycles=0x7f030022;
        public static final int data_usage_detail=0x7f030023;
        public static final int data_usage_header=0x7f030024;
        public static final int data_usage_item=0x7f030025;
        public static final int data_usage_summary=0x7f030026;
        public static final int notification_media_action=0x7f030027;
        public static final int notification_media_cancel_action=0x7f030028;
        public static final int notification_template_big_media=0x7f030029;
        public static final int notification_template_big_media_narrow=0x7f03002a;
        public static final int notification_template_lines=0x7f03002b;
        public static final int notification_template_media=0x7f03002c;
        public static final int notification_template_part_chronometer=0x7f03002d;
        public static final int notification_template_part_time=0x7f03002e;
        public static final int preference=0x7f03002f;
        public static final int select_dialog_item_material=0x7f030030;
        public static final int select_dialog_multichoice_material=0x7f030031;
        public static final int select_dialog_singlechoice_material=0x7f030032;
        public static final int support_simple_spinner_dropdown_item=0x7f030033;
        public static final int tab_widget=0x7f030034;
        public static final int user_preference=0x7f030035;
        public static final int widget_progress_bar=0x7f030036;
    }
    public static final class menu {
        public static final int data_usage=0x7f100000;
        public static final int main=0x7f100001;
    }
    public static final class plurals {
        /**  Description of settings item that leads to list of all apps with Domain URLs [CHAR LIMIT=NONE] 
         */
        public static final int domain_urls_apps_summary=0x7f0f000f;
        /**  Description of number of apps with high power turned on [CHAR LIMIT=NONE] 
         */
        public static final int high_power_count=0x7f0f0010;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of letters 
         */
        public static final int lockpassword_password_requires_letters=0x7f0f0002;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of lowercase letters 
         */
        public static final int lockpassword_password_requires_lowercase=0x7f0f0003;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of non-letter characters 
         */
        public static final int lockpassword_password_requires_nonletter=0x7f0f0007;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of numerical digits 
         */
        public static final int lockpassword_password_requires_numeric=0x7f0f0005;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of special symbols 
         */
        public static final int lockpassword_password_requires_symbols=0x7f0f0006;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of uppercase letters 
         */
        public static final int lockpassword_password_requires_uppercase=0x7f0f0004;
        /**  Summary of preference to manage notification listeners, when one or more are enabled
         and are therefore able to read the user's notifications 
         */
        public static final int manage_notification_access_summary_nonzero=0x7f0f0009;
        /**  Description of number of apps using memory [CHAR LIMIT=NONE] 
         */
        public static final int memory_usage_apps_summary=0x7f0f0011;
        /**  Permissions preference summary [CHAR LIMIT=40] 
         */
        public static final int permissions_summary=0x7f0f000c;
        /**  Runtime permissions preference summary.  Number of additional permissions granted. [CHAR LIMIT=40] 
         */
        public static final int runtime_permissions_additional_count=0x7f0f000e;
        /**  Runtime permissions preference summary [CHAR LIMIT=40] 
         */
        public static final int runtime_permissions_summary=0x7f0f000d;
        /**  message shown for menu item that launches fingerprint settings or enrollment 
         */
        public static final int security_settings_fingerprint_preference_summary=0x7f0f0001;
        /**  [CHAR LIMIT=NONE] Device Info screen. Countdown for user taps to enable development settings 
         */
        public static final int show_dev_countdown=0x7f0f0000;
        /**  Instructions telling the user that they entered the wrong SIM PIN while trying to unlock the keyguard.  Displayed in a dialog box.  [CHAR LIMIT=100] 
         */
        public static final int wrong_pin_code=0x7f0f0008;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only for N hours. 
         */
        public static final int zen_mode_summary_alarms_only_by_hour=0x7f0f000b;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only for < 60 minutes. 
         */
        public static final int zen_mode_summary_alarms_only_by_minute=0x7f0f000a;
    }
    public static final class string {
        /**  Main Settings screen setting option title for the item to take you to the Accounts screen [CHAR LIMIT=22] 
         */
        public static final int Accounts_settings_title=0x7f080176;
        /**  Content description for the action bar "home" affordance. [CHAR LIMIT=NONE] 
         */
        public static final int abc_action_bar_home_description=0x7f080052;
        /**  Formatting string for describing the action bar's title/home/up affordance.
         This is a single tappable "button" that includes the app icon, the Up indicator
         (usually a "<" chevron) and the window title text.
         %1$s is the title. %2$s is the description of what tapping/clicking the whole
         thing is going to do. 
         */
        public static final int abc_action_bar_home_description_format=0x7f080056;
        /**  Just like action_bar_home_description_format, but this one will be used
         if the window is also providing subtitle text.
         %1$s is the title. %2$s is the subtitle. %3$s is the description of what
         tapping/clicking the whole thing is going to do. 
         */
        public static final int abc_action_bar_home_subtitle_description_format=0x7f080057;
        /**  Content description for the action bar "up" affordance. [CHAR LIMIT=NONE] 
         */
        public static final int abc_action_bar_up_description=0x7f080053;
        /**  Content description for the action menu overflow button. [CHAR LIMIT=NONE] 
         */
        public static final int abc_action_menu_overflow_description=0x7f080054;
        /**  Label for the "Done" button on the far left of action mode toolbars. 
         */
        public static final int abc_action_mode_done=0x7f080051;
        /**  Title for a button to expand the list of activities in ActivityChooserView [CHAR LIMIT=25] 
         */
        public static final int abc_activity_chooser_view_see_all=0x7f08005f;
        /**  ActivityChooserView - accessibility support 
 Description of the shwoing of a popup window with activities to choose from. [CHAR LIMIT=NONE] 
         */
        public static final int abc_activitychooserview_choose_application=0x7f08005e;
        /**  Default text for a button that can be toggled on and off. 
         */
        public static final int abc_capital_off=0x7f080064;
        /**  Default text for a button that can be toggled on and off. 
         */
        public static final int abc_capital_on=0x7f080063;
        /**  Default hint text for the system-wide search UI's text field. [CHAR LIMIT=30] 
         */
        public static final int abc_search_hint=0x7f080059;
        /**  SearchView accessibility description for clear button [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_clear=0x7f08005b;
        /**  SearchView accessibility description for search text field [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_query=0x7f08005a;
        /**  SearchView accessibility description for search button [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_search=0x7f080058;
        /**  SearchView accessibility description for submit button [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_submit=0x7f08005c;
        /**  SearchView accessibility description for voice button [CHAR LIMIT=NONE] 
         */
        public static final int abc_searchview_description_voice=0x7f08005d;
        /**  Description of the choose target button in a ShareActionProvider (share UI). [CHAR LIMIT=NONE] 
         */
        public static final int abc_shareactionprovider_share_with=0x7f080061;
        /**  Description of a share target (both in the list of such or the default share button) in a ShareActionProvider (share UI). [CHAR LIMIT=NONE] 
         */
        public static final int abc_shareactionprovider_share_with_application=0x7f080060;
        /**  Content description for the Toolbar icon used to collapse an expanded action mode. [CHAR LIMIT=NONE] 
         */
        public static final int abc_toolbar_collapse_description=0x7f080055;
        /**  Main settings screen, setting title for the user to go into the About phone screen 
         */
        public static final int about_settings=0x7f0804c6;
        /**  Main settings screen, setting summary for the user to go into the About phone screen
         */
        public static final int about_settings_summary=0x7f0804c7;
        /**  Sound & display settings screen, accelerometer-based rotation summary text when check box is clear 
         */
        public static final int accelerometer_summary_off=0x7f080360;
        /**  Sound & display settings screen, accelerometer-based rotation summary text when check box is selected 
         */
        public static final int accelerometer_summary_on=0x7f08035f;
        /**  Sound & display settings screen, accelerometer-based rotation check box label 
         */
        public static final int accelerometer_title=0x7f08035e;
        /**  Access point names title.  [CHAR LIMIT=50] 
         */
        public static final int access_point_names=0x7f08096c;
        /**  Title for the accessibility preference screen to enable video captioning. [CHAR LIMIT=35] 
         */
        public static final int accessibility_captioning_title=0x7f080637;
        /**  Content description for personal profile accounts group [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_category_personal=0x7f080358;
        /**  Content description for work profile accounts group [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_category_work=0x7f080357;
        /**  Subtitle for the accessibility preference to configure display color space correction. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_display_daltonizer_preference_subtitle=0x7f080649;
        /**  Title for the accessibility preference to configure display color space correction. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_display_daltonizer_preference_title=0x7f080648;
        /**  Subtitle for the accessibility preference to configure display color inversion. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_display_inversion_preference_subtitle=0x7f080647;
        /**  Title for the accessibility preference to configure display color inversion. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_display_inversion_preference_title=0x7f080646;
        /**  Title for the accessibility preference category of display related preferences. [CHAR LIMIT=25] 
         */
        public static final int accessibility_display_title=0x7f080636;
        /**  Summary when an accessibility feature or ime is not permitted. [CHAR LIMIT=40] 
         */
        public static final int accessibility_feature_or_input_method_not_allowed=0x7f080655;
        /**  Summary for the disabled state of an accessibility feature. [CHAR LIMIT=10] 
         */
        public static final int accessibility_feature_state_off=0x7f080654;
        /**  Summary for the enabled state of an accessibility feature. [CHAR LIMIT=10] 
         */
        public static final int accessibility_feature_state_on=0x7f080653;
        /**   Description for the preference screen to enable the global geture taht turns on accessibility. [CHAR LIMIT=none] 
         */
        public static final int accessibility_global_gesture_preference_description=0x7f08063d;
        /**  Summary for the preference screen to enable the global geture that turns on accessibility (off state). [CHAR LIMIT=35] 
         */
        public static final int accessibility_global_gesture_preference_summary_off=0x7f08063c;
        /**  Summary for the preference to enable the global geture that turns on accessibility (on state). [CHAR LIMIT=60] 
         */
        public static final int accessibility_global_gesture_preference_summary_on=0x7f08063b;
        /**  Title for the preference to enable the global geture that turns on accessibility. [CHAR LIMIT=35] 
         */
        public static final int accessibility_global_gesture_preference_title=0x7f08063a;
        /**  Number of characters used for lock screen text [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_lock_screen_progress=0x7f080b10;
        /**  Title for accessibility preference to choose long-press delay i.e. timeout before it is detected. [CHAR LIMIT=35] 
         */
        public static final int accessibility_long_press_timeout_preference_title=0x7f080645;
        /**  Title for accessibility menu item to lauch a settings activity. [CHAR LIMIT=15] 
         */
        public static final int accessibility_menu_item_settings=0x7f080652;
        /**  Title for the prompt shown as a placeholder if no accessibility serivices are installed. [CHAR LIMIT=50] 
         */
        public static final int accessibility_no_services_installed=0x7f080681;
        /**  Content description of the WIFI signal when no signal for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_no_wifi=0x7f08004c;
        /**  Content description for personal profile details page title [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_personal_account_title=0x7f08035a;
        /**  Title for the accessibility preference to power button to end a call. [CHAR LIMIT=35] 
         */
        public static final int accessibility_power_button_ends_call_prerefence_title=0x7f080643;
        /**  Summary for the accessibility preference screen to enable screen magnification. [CHAR LIMIT=none] 
         */
        public static final int accessibility_screen_magnification_summary=0x7f080639;
        /**  Title for the accessibility preference screen to enable screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_screen_magnification_title=0x7f080638;
        /**  Default description for an accessibility serivice if the latter doesn't provide one. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_service_default_description=0x7f080682;
        /**  Title for the accessibility preference category of accessibility services. [CHAR LIMIT=25] 
         */
        public static final int accessibility_services_title=0x7f080634;
        /**  Settings title in main settings screen for accessibility settings 
         */
        public static final int accessibility_settings=0x7f080632;
        /**  Settings title for accessibility settings screen 
         */
        public static final int accessibility_settings_title=0x7f080633;
        /**  Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_disabled=0x7f0807de;
        /**  Content description of the enabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_enabled=0x7f0807dd;
        /**  Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_error=0x7f0807e0;
        /**  Content description of the in progress sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_in_progress=0x7f0807df;
        /**  Title for the accessibility preference category of system related preferences. [CHAR LIMIT=25] 
         */
        public static final int accessibility_system_title=0x7f080635;
        /**  Title for the accessibility preference to high contrast text. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_high_text_contrast_preference_title=0x7f08063f;
        /**  Title for the accessibility preference to enable large text. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_large_text_preference_title=0x7f08063e;
        /**  Summary for the accessibility preference to auto update screen magnification. [CHAR LIMIT=50] 
         */
        public static final int accessibility_toggle_screen_magnification_auto_update_preference_summary=0x7f080642;
        /**  Title for the accessibility preference to auto update screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_screen_magnification_auto_update_preference_title=0x7f080641;
        /**  Title for the accessibility preference to enable screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_screen_magnification_preference_title=0x7f080640;
        /**  Title for the accessibility preference to speak passwords. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_speak_password_preference_title=0x7f080644;
        /**  Content description of the WIFI signal when WIFI is disabled for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_off=0x7f08004b;
        /**  Content description of the WIFI signal when it is one bar for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_one_bar=0x7f08004d;
        /**  Content description of the WIFI signal when it is full for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_signal_full=0x7f080050;
        /**  Content description of the WIFI signal when it is three bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_three_bars=0x7f08004f;
        /**  Content description of the WIFI signal when it is two bars for accessibility (not shown on the screen). [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_wifi_two_bars=0x7f08004e;
        /**  Content description for work profile details page title [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_work_account_title=0x7f080359;
        /**  Account settings header. [CHAR LIMIT=30] 
         */
        public static final int account_settings=0x7f080354;
        /**   Title for menu option to enable global auto-sync of personal account data [CHAR LIMIT=30] 
         */
        public static final int account_settings_menu_auto_sync=0x7f08086a;
        /**   Title for menu option to enable global auto-sync of personal account data [CHAR LIMIT=30] 
         */
        public static final int account_settings_menu_auto_sync_personal=0x7f08086b;
        /**   Title for menu option to enable global auto-sync of work account data [CHAR LIMIT=30] 
         */
        public static final int account_settings_menu_auto_sync_work=0x7f08086c;
        /**  Main Settings screen setting option title for the item to take you to the accounts screen [CHAR LIMIT=22] 
         */
        public static final int account_settings_title=0x7f080178;
        /**  Account specific sync settings title [CHAR LIMIT=35] 
         */
        public static final int account_sync_settings_title=0x7f0807e3;
        /**  Label for screen showing the active device policy 
         */
        public static final int active_device_admin_msg=0x7f0807ac;
        /**  Title for settings of active input methods in each IME [CHAR LIMIT=35] 
         */
        public static final int active_input_method_subtypes=0x7f0805e2;
        /**  Displayed when user launches a widget configuration activity that was uninstalled 
         */
        public static final int activity_not_found=0x7f080506;
        /**  The title of the dialog to pick an activity.  This is shown when there are multiple activities that can do a particular action.  For example, suppose you click on the "Share" menu item in the Browser.  Since you can share the webpage URL via many communication methods, this dialog would come up with choices like "Email", "IM", etc.  This is a generic message, and the previous example is a single possible scenario (so please don't assume it's for the browser or anything :) ). 
         */
        public static final int activity_picker_label=0x7f080131;
        /**  Message of dialog confirming that user wants to revoke access to adb from all computers they have authorized 
         */
        public static final int adb_keys_warning_message=0x7f080615;
        /**  Warning text to user about the implications of enabling USB debugging 
         */
        public static final int adb_warning_message=0x7f080614;
        public static final int adb_warning_title=0x7f080613;
        /**  Button label to add an account [CHAR LIMIT=20] 
         */
        public static final int add_account_label=0x7f0807e5;
        /**  Label for button to set the active device admin 
         */
        public static final int add_device_admin=0x7f0807b5;
        /**  Label for screen showing to add device policy 
         */
        public static final int add_device_admin_msg=0x7f0807b4;
        /**  Warning when trying to add a profile owner admin after setup has completed. [CHAR LIMIT=none] 
         */
        public static final int adding_profile_owner_warning=0x7f0807ba;
        /**  Label for button that leads to more permissions [CHAR LIMIT=40] 
         */
        public static final int additional_permissions=0x7f080ae1;
        /**  Description of how many more permissions to view on next page [CHAR LIMIT=30] 
         */
        public static final int additional_permissions_more=0x7f080ae2;
        /**  A menu item in "About phone" that allows the user to update the phone with settings
    from their cell phone carrier. The use of the string is similar to the string
    "system_update_settings_list_item_title" in this project. [CHAR LIMIT=25] 
         */
        public static final int additional_system_update_settings_list_item_title=0x7f0808de;
        /**  Title for advanced application management settings [CHAR LIMIT=30] 
         */
        public static final int advanced_apps=0x7f080aa6;
        /**  Sound & notification: Advanced section header [CHAR LIMIT=30] 
         */
        public static final int advanced_section_header=0x7f0809f3;
        /**  Title of preference group for advance security settings [CHAR LIMIT=30] 
         */
        public static final int advanced_security_title=0x7f080781;
        /**  Applications settings screen, setting check box title. If checked, applications show more settings options. 
         */
        public static final int advanced_settings=0x7f080511;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Advanced settings" checkbox  
         */
        public static final int advanced_settings_summary=0x7f080512;
        /**  Wireless controls settings screen, setting check box label 
         */
        public static final int airplane_mode=0x7f080140;
        /**  Sound & notification > Sound section: Title for the option managing alarm volume. [CHAR LIMIT=30] 
         */
        public static final int alarm_volume_option_title=0x7f0809e5;
        /**  Sound settings screen, alarm volume slider title 
         */
        public static final int alarm_volume_title=0x7f080339;
        /**  Sound settings screen, volume title 
         */
        public static final int all_volume_title=0x7f08032d;
        /**  Strings for Dialog allow button 
         */
        public static final int allow=0x7f080068;
        /**  Message in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_allow_bind=0x7f080623;
        /**  Title in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_allow_bind_title=0x7f080622;
        /**  Text for checkbox that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_always_allow_bind=0x7f080624;
        /**  check box to allow data usage when roaming [CHAR LIMIT=41] 
         */
        public static final int allow_data_usage_title=0x7f080148;
        /**  Setting Checkbox title whether to allow mock locations 
         */
        public static final int allow_mock_location=0x7f08060f;
        /**  setting Checkbox summary whether to allow mock locations  
         */
        public static final int allow_mock_location_summary=0x7f080610;
        /**  Description of allowing overlay setting [CHAR LIMIT=NONE] 
         */
        public static final int allow_overlay_description=0x7f080b18;
        /**  Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app was given user permission to create widgets. 
         */
        public static final int always_allow_bind_appwidgets_text=0x7f08052b;
        /**  Description of app always running [CHAR LIMIT=45] 
         */
        public static final int always_running=0x7f080acc;
        /**  Amber alerts summary.  [CHAR LIMIT=60] 
         */
        public static final int amber_alerts_summary=0x7f080964;
        /**  Amber alerts title.  [CHAR LIMIT=30] 
         */
        public static final int amber_alerts_title=0x7f080963;
        /**  Used to describe the enabled state of the Android Beam feature when NFC, which it relies on, is turned off [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_disabled_summary=0x7f080260;
        /**  Explanation of the Android Beam feature in the Android Beam settings panel. The use of "beam" here is as a verb and not considered trademarked. [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_explained=0x7f080262;
        /**  Used in the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32] 
         */
        public static final int android_beam_label=0x7f080261;
        /**  Used to describe the off state of the Android Beam feature [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_off_summary=0x7f08025f;
        /**  Used to describe the on state of the Android Beam feature [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_on_summary=0x7f08025e;
        /**  Used to enter the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32] 
         */
        public static final int android_beam_settings_title=0x7f08025d;
        /**  UI debug setting: scaling factor for all Animator-based animations [CHAR LIMIT=25] 
         */
        public static final int animator_duration_scale_title=0x7f080848;
        /**  Edit access point labels: The actual access point name
         */
        public static final int apn_apn=0x7f08043b;
        /**  Edit acces  point labels: Authenticaton type
         */
        public static final int apn_auth_type=0x7f080446;
        /**  Authentication Typs: CHAP 
         */
        public static final int apn_auth_type_chap=0x7f080449;
        /**  Authentication Typs: None 
         */
        public static final int apn_auth_type_none=0x7f080447;
        /**  Authentication Typs: PAP 
         */
        public static final int apn_auth_type_pap=0x7f080448;
        /**  Authentication Typs: PAP or CHAP 
         */
        public static final int apn_auth_type_pap_chap=0x7f08044a;
        /**  Screen title after user selects APNs setting option 
         */
        public static final int apn_edit=0x7f080438;
        /**  Edit access point labels: The port number of the proxy to use for this APN 
         */
        public static final int apn_http_port=0x7f08043d;
        /**  Edit access point labels: The addess of the proxy to use for this APN 
         */
        public static final int apn_http_proxy=0x7f08043c;
        /**  Edit access point labels: 
         */
        public static final int apn_mcc=0x7f080444;
        /**  Edit access point labels: The port on the proxy used for MMS
         */
        public static final int apn_mms_port=0x7f080443;
        /**  Edit access point labels: The proxy to use for MMS (multimedia messages)
         */
        public static final int apn_mms_proxy=0x7f080442;
        /**  Edit access point labels: 
         */
        public static final int apn_mmsc=0x7f080441;
        /**  Edit access point labels: 
         */
        public static final int apn_mnc=0x7f080445;
        /**  Edit access point labels: A label the user can give to the APN to allow him to differentiate it from the others 
         */
        public static final int apn_name=0x7f08043a;
        /**  Edit access point label summary text when no value has been set 
         */
        public static final int apn_not_set=0x7f080439;
        /**  Edit access point labels: The password that will be used when connecting to this APN 
         */
        public static final int apn_password=0x7f08043f;
        /**  Edit access point labels: PPP number 
         */
        public static final int apn_ppp_number=0x7f08044e;
        /**  Edit access point labels: The protocol of the APN, e.g., "IPv4", "IPv6", or "IPv4/IPv6". 
         */
        public static final int apn_protocol=0x7f08044c;
        /**  Edit access point labels: The protocol of the APN when roaming, e.g., "IPv4", "IPv6", or "IPv4/IPv6". 
         */
        public static final int apn_roaming_protocol=0x7f08044d;
        /**  Edit access point labels: The server address to conenct to for this APN 
         */
        public static final int apn_server=0x7f080440;
        /**  APN Settings 
 APN settings screen title 
         */
        public static final int apn_settings=0x7f080437;
        /**  Error message for users that aren't allowed to modify Access Point Names settings [CHAR LIMIT=none] 
         */
        public static final int apn_settings_not_available=0x7f0805ee;
        /**  Edit access point labels: The type of APN 
         */
        public static final int apn_type=0x7f08044b;
        /**  Edit access point labels: The username that will be used when conencting to this APN
         */
        public static final int apn_user=0x7f08043e;
        /**  Title for data usage screen when entered from app info [CHAR LIMIT=30] 
         */
        public static final int app_data_usage=0x7f080a8b;
        /**  [CHAR LIMIT=30] Manage applications, label for option to disable app 
         */
        public static final int app_disable_dlg_positive=0x7f080571;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when disabling apps 
         */
        public static final int app_disable_dlg_text=0x7f080572;
        /**  [CHAR LIMIT=30] Manage applications, title for dialog when disabling apps 
         */
        public static final int app_disable_dlg_title=0x7f080570;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when disabling notifications for an app 
         */
        public static final int app_disable_notifications_dlg_text=0x7f080576;
        /**  [CHAR LIMIT=30] Manage applications, title for dialog when disabling notifications for an app 
         */
        public static final int app_disable_notifications_dlg_title=0x7f080575;
        /**  Manage applications, restore updated system application to factory version 
         */
        public static final int app_factory_reset=0x7f080529;
        /**  Manage applications, factory reset option dialog text for system applications. 
         */
        public static final int app_factory_reset_dlg_text=0x7f080552;
        /**  Manage applications, factory reset dialog title for system applications. 
         */
        public static final int app_factory_reset_dlg_title=0x7f080551;
        public static final int app_forward_locked=0x7f080567;
        /**  Manage applications. application installation location summary 
         */
        public static final int app_install_location_summary=0x7f08056f;
        /**  Manage applications, application installation location title 
         */
        public static final int app_install_location_title=0x7f08056e;
        /**  Category name for App Launch 
         */
        public static final int app_launch_domain_links_title=0x7f080a84;
        public static final int app_launch_open_domain_urls_summary=0x7f080a86;
        public static final int app_launch_open_domain_urls_title=0x7f080a85;
        public static final int app_launch_other_defaults_title=0x7f080a88;
        public static final int app_launch_supported_domain_urls_title=0x7f080a87;
        /**  Explanation that the app that will ALWAYS be launched to open web links to domains that it understands 
         */
        public static final int app_link_open_always=0x7f080ab3;
        /**  Explanation that the user will be asked whether to launch the app to open web links to domains that it understands 
         */
        public static final int app_link_open_ask=0x7f080ab4;
        /**  Explanation that the app that will NEVER be launched to open web links to domains that it understands 
         */
        public static final int app_link_open_never=0x7f080ab5;
        /**  Label for app list of memory use [CHAR LIMIT=30] 
         */
        public static final int app_list_memory_use=0x7f080af9;
        /**  Label for None item in AppListPreference [CHAR LIMIT=40] 
         */
        public static final int app_list_preference_none=0x7f080b0e;
        /**  [CHAR LIMIT=NONE] Label for amount of memory use 
         */
        public static final int app_memory_use=0x7f080707;
        /**  label for application name 
         */
        public static final int app_name_label=0x7f08062f;
        /**  Manage applications, individual application dialog box message. Shown when the user somehow got into a state where it wants to manage some app that isn't found. 
         */
        public static final int app_not_found_dlg_text=0x7f08054f;
        /**  Manage applications, individual application dialog box title. Shown when the user somehow got into a state where it wants to manage some app that isn't found. 
         */
        public static final int app_not_found_dlg_title=0x7f08054e;
        /**  [CHAR LIMIT=NONE] App notification settings: Block option description
         */
        public static final int app_notification_block_summary=0x7f080a12;
        /**  [CHAR LIMIT=NONE] App notification settings: Block option title 
         */
        public static final int app_notification_block_title=0x7f080a11;
        /**  [CHAR LIMIT=NONE] App notification settings: Peekable option description
         */
        public static final int app_notification_peekable_summary=0x7f080a16;
        /**  [CHAR LIMIT=NONE] App notification settings: Peekable option title 
         */
        public static final int app_notification_peekable_title=0x7f080a15;
        /**  Link to an apps notification settings [CHAR LIMIT=50] 
         */
        public static final int app_notification_preferences=0x7f080adf;
        /**  [CHAR LIMIT=NONE] App notification settings: Priority option description
         */
        public static final int app_notification_priority_summary=0x7f080a14;
        /**  [CHAR LIMIT=NONE] App notification settings: Priority option title 
         */
        public static final int app_notification_priority_title=0x7f080a13;
        /**  [CHAR LIMIT=20] Notification settings: App notifications row summary when banned 
         */
        public static final int app_notification_row_banned=0x7f080a19;
        /**  [CHAR LIMIT=40] Notification settings: App notifications row summary when high priority 
         */
        public static final int app_notification_row_priority=0x7f080a1a;
        /**  [CHAR LIMIT=20] Notification settings: App notifications row summary when sensitive 
         */
        public static final int app_notification_row_sensitive=0x7f080a1b;
        /**  [CHAR LIMIT=NONE] App notification settings: Sensitive option description
         */
        public static final int app_notification_sensitive_summary=0x7f080a18;
        /**  [CHAR LIMIT=NONE] App notification settings: Sensitive option title 
         */
        public static final int app_notification_sensitive_title=0x7f080a17;
        /**  [CHAR LIMIT=20] Notification settings: App notifications dialog dismiss button caption 
         */
        public static final int app_notifications_dialog_done=0x7f080a1c;
        /**  Label for are-notifications-enabled checkbox in app details [CHAR LIMIT=20] 
         */
        public static final int app_notifications_switch_label=0x7f08093c;
        /**  Sound & notification > Notification section: Title for the option managing notifications per application. [CHAR LIMIT=30] 
         */
        public static final int app_notifications_title=0x7f0809fb;
        /**  [CHAR LIMIT=NONE] Time label for an operation that has never executed. 
         */
        public static final int app_ops_never_used=0x7f080579;
        /**  [CHAR LIMIT=NONE] Time label for an operation that is currently running. 
         */
        public static final int app_ops_running=0x7f080578;
        /**  [CHAR LIMIT=NONE] App ops settings title, on main settings screen. If clicked, the user is taken to a settings screen for app operations 
         */
        public static final int app_ops_settings=0x7f080577;
        /**  Link to the apps page for SYSTEM_ALERT_WINDOW settings [CHAR LIMIT=45] 
         */
        public static final int app_overlay_permission_preference=0x7f080b17;
        /**  Label for list that shows all permissions 
         */
        public static final int app_permissions=0x7f080aaa;
        /**  Summary of number of apps currently granted a single permission [CHAR
        LIMIT=45] 
         */
        public static final int app_permissions_group_summary=0x7f080aac;
        /**  Summary of permissions currently granted to apps [CHAR LIMIT=45] 
         */
        public static final int app_permissions_summary=0x7f080aab;
        /**  UI debug setting: limit number of running background processes [CHAR LIMIT=25] 
         */
        public static final int app_process_limit_title=0x7f080851;
        /**  Preference label for custom restrictions [CHAR LIMIT=35] 
         */
        public static final int app_restrictions_custom_label=0x7f080974;
        /**  Summary text for apps that are allowed to access accounts from the primary user [CHAR LIMIT=none] 
         */
        public static final int app_sees_restricted_accounts=0x7f080976;
        /**  Summary for a case when app entries that are controlled by another entry and app can access user accounts [CHAR LIMIT=none] 
         */
        public static final int app_sees_restricted_accounts_and_controlled_by=0x7f080977;
        /**  [CHAR LIMIT=NONE] Manage applications, text for dialog when disabling update apps 
         */
        public static final int app_special_disable_dlg_text=0x7f080574;
        /**  [CHAR LIMIT=NONE] Manage applications, title for dialog when disabling updated apps 
         */
        public static final int app_special_disable_dlg_title=0x7f080573;
        /**  Link to the apps page for app usage settings [CHAR LIMIT=45] 
         */
        public static final int app_usage_preference=0x7f080ac8;
        /**  Manage applications, individual application info screen title. For example, if they click on "Browser" in "Manage applications", the title of the next screen will be this 
         */
        public static final int application_info_label=0x7f080513;
        /**  Application Restrictions screen title [CHAR LIMIT=45] 
         */
        public static final int application_restrictions=0x7f080920;
        /**  Manage applications, individual application info screen, label under Storage heading. The amount of space taken up by the application itself (for example, the java compield files and things like that) 
         */
        public static final int application_size_label=0x7f08051f;
        /**  Applications settings title, on main settings screen. If clicked, the user is taken to a settings screen full of application settings
         */
        public static final int applications_settings=0x7f080509;
        /**  Applications settings screen heading. The header for the Application settings screen. 
         */
        public static final int applications_settings_header=0x7f08050b;
        /**  Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen. 
         */
        public static final int applications_settings_summary=0x7f08050a;
        /**  Title of app storage screen [CHAR LIMIT=30] 
         */
        public static final int apps_storage=0x7f080ac5;
        /**  Applications with restrictions header [CHAR LIMIT=45] 
         */
        public static final int apps_with_restrictions_header=0x7f080921;
        /**  Applicaitons with restrictions - settings button [CHAR LIMIT=30] 
         */
        public static final int apps_with_restrictions_settings_button=0x7f080922;
        /**  Manage applications, individual application screen, checkbox to control asking for compatibility mode.  
         */
        public static final int ask_compatibility=0x7f08052f;
        /**  Summary for the "context" preference to determine whether assist can access the data currently displayed on-screen [CHAR LIMIT=NONE] 
         */
        public static final int assist_access_context_summary=0x7f080af2;
        /**  Title for the "context" preference to determine whether assist can access the data currently displayed on-screen [CHAR LIMIT=40] 
         */
        public static final int assist_access_context_title=0x7f080af1;
        /**  Summary for the "screenshot" preference to determine whether assist can access the screenshot of your screen [CHAR LIMIT=NONE] 
         */
        public static final int assist_access_screenshot_summary=0x7f080af4;
        /**  Title for the "screenshot" preference to determine whether assist can access the screenshot of your screen [CHAR LIMIT=40] 
         */
        public static final int assist_access_screenshot_title=0x7f080af3;
        /**  Title for Assist and voice input settings [CHAR LIMIT=30] 
         */
        public static final int assist_and_voice_input_title=0x7f080ab8;
        /**  Footer text in the manage assist screen. [CHAR LIMIT=NONE] 
         */
        public static final int assist_footer=0x7f080af5;
        /**  [CHAR_LIMIT=NONE] Warning message about security implications of setting an assistant,
         displayed as a dialog message when the user selects an assistant. 
         */
        public static final int assistant_security_warning=0x7f080abd;
        /**  Label for the button to acknowledge assistant security implications. [CHAR LIMIT=30] 
         */
        public static final int assistant_security_warning_agree=0x7f080abe;
        /**  Label for the button to bail out assistant security implications. [CHAR LIMIT=30] 
         */
        public static final int assistant_security_warning_disagree=0x7f080abf;
        /**  [CHAR_LIMIT=45] Title of the security warning dialog for setting an assitant 
         */
        public static final int assistant_security_warning_title=0x7f080abc;
        /**  Security & location settings screen, setting check box label if Assisted GPS should be enabled 
         */
        public static final int assisted_gps=0x7f0804be;
        /**  Security & location settings screen, setting summary when Assisted GPS check box is clear 
         */
        public static final int assisted_gps_disabled=0x7f0804c0;
        /**  Security & location settings screen, setting summary when Assisted GPS check box is selected 
         */
        public static final int assisted_gps_enabled=0x7f0804bf;
        /**  Sound settings screen, setting option name checkbox to enable/disable audio recording features that improve audio recording in noisy environments 
         */
        public static final int audio_record_proc_title=0x7f08033f;
        /**  Sound & display settings screen, setting option summary to enable adaptive brightness [CHAR LIMIT=100] 
         */
        public static final int auto_brightness_summary=0x7f080365;
        /**  Sound & display settings screen, setting option name to enable adaptive brightness [CHAR LIMIT=30] 
         */
        public static final int auto_brightness_title=0x7f080364;
        /**  On Text & language settings screen, setting option name.  title of the setting to enable autocapitalization of entered text.  for example, after the user finishes a sentence, the next letter he types will automatically be capitalizated. [CHAR LIMIT=25] 
         */
        public static final int auto_caps=0x7f0805ad;
        /**  On Text & language settings screen, setting summary. Summary for the Auto-cap setting. [CHAR LIMIT=100]
         */
        public static final int auto_caps_summary=0x7f0805ae;
        /**  Manage applications, individual application screen, text under Launch by default heading if the app is NOT a default for actions 
         */
        public static final int auto_launch_disable_text=0x7f08052c;
        /**  Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app is set as a default for some actions. 
         */
        public static final int auto_launch_enable_text=0x7f08052a;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions 
         */
        public static final int auto_launch_label=0x7f080515;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions *and* whether the app was given permission by the user to create widgets 
         */
        public static final int auto_launch_label_generic=0x7f080516;
        /**  On Text & language settings screen, setting option name. title of the setting to enable automatic punctuation of entered text.  for example, it will change an entered "youre" to "you're". 
         */
        public static final int auto_punctuate=0x7f0805af;
        /**  On Text & language settings screen, setting summary for the Auto-punctuate setting. 
         */
        public static final int auto_punctuate_summary=0x7f0805b1;
        /**  On Text & language settings screen, setting option name. title of the setting to enable autoreplace of entered text. auto replace is a feature that will automatically correct mistyped words. 
         */
        public static final int auto_replace=0x7f0805ab;
        /**  On Text & language settings screen, setting summary.  This is the summary for the "Auto-replace" setting. 
         */
        public static final int auto_replace_summary=0x7f0805ac;
        /**  Summary text of the "automatic restore" setting 
         */
        public static final int auto_restore_summary=0x7f08079e;
        /**  Auto-restore menu title 
         */
        public static final int auto_restore_title=0x7f08079d;
        /**  Sound & display settings screen, setting option name to change whether the screen adjusts automatically based on lighting conditions 
         */
        public static final int automatic_brightness=0x7f08037a;
        /**  Status message of Wi-Fi when network has matching passpoint credentials. [CHAR LIMIT=NONE] 
         */
        public static final int available_via_passpoint=0x7f080019;
        /**  Label for average memory use section [CHAR LIMIT=30] 
         */
        public static final int average_memory_use=0x7f080af6;
        /**  Label for average memory usage of device [CHAR LIMIT=25] 
         */
        public static final int average_used=0x7f080b01;
        /**  CPU awake time title 
         */
        public static final int awake=0x7f0806b8;
        /**  Data synchronization settings screen, title of setting that controls whether background data should be used [CHAR LIMIT=30] 
         */
        public static final int background_data=0x7f0807e8;
        /**  Data synchronization settings screen, message of dialog that confirms the user's unchecking of background data [CHAR LIMIT=200] 
         */
        public static final int background_data_dialog_message=0x7f0807eb;
        /**  Data synchronization settings screen, title of dialog that confirms the user's unchecking of background data [CHAR LIMIT=20] 
         */
        public static final int background_data_dialog_title=0x7f0807ea;
        /**  Data synchronization settings screen, summary of setting that controls whether background data should be used [CHAR LIMIT=60] 
         */
        public static final int background_data_summary=0x7f0807e9;
        /**  Running service details, description for background process. 
         */
        public static final int background_process_stop_description=0x7f08059e;
        /**  Default summary text of the "Configure backup account" setting [CHAR LIMIT=80]
         */
        public static final int backup_configure_account_default_summary=0x7f0807a0;
        /**  Configure backup account options menu title [CHAR LIMIT=25]
         */
        public static final int backup_configure_account_title=0x7f08079b;
        /**  Summary text of the "back up data" setting 
         */
        public static final int backup_data_summary=0x7f08079a;
        /**  Backup data menu title 
         */
        public static final int backup_data_title=0x7f080799;
        /**  Dialog title for confirmation to erase backup data from server 
         */
        public static final int backup_erase_dialog_message=0x7f0807a8;
        /**  Dialog title for confirmation to erase backup data from server 
         */
        public static final int backup_erase_dialog_title=0x7f0807a7;
        /**  Title of the preference informing the user about the backup service being inactive [CHAR LIMIT=50]
         */
        public static final int backup_inactive_title=0x7f08079f;
        /**  Button label for cancelling the new-password operation and retaining the user's previous full-backup password 
         */
        public static final int backup_pw_cancel_button_text=0x7f0808dd;
        /**  Button label for setting the user's new full-backup password 
         */
        public static final int backup_pw_set_button_text=0x7f0808dc;
        /**  Backup section title 
         */
        public static final int backup_section_title=0x7f080797;
        /**  Band mode screen. Status message when unsuccessful. 
         */
        public static final int band_mode_failed=0x7f080121;
        /**  Band mode screen.  Loading message. 
         */
        public static final int band_mode_loading=0x7f08011f;
        /**  Band mode screen. Button caption to set the bandmode. 
         */
        public static final int band_mode_set=0x7f080120;
        /**  Band mode screen. Statusm essage when successful. 
         */
        public static final int band_mode_succeeded=0x7f080122;
        /**  Band Mode Selection 
 Band mode screen.  Title of activity. 
         */
        public static final int band_mode_title=0x7f08011e;
        /**  About phone screen,  setting option name  [CHAR LIMIT=40] 
         */
        public static final int baseband_version=0x7f0803a5;
        /**  Label for app details action 
         */
        public static final int battery_action_app_details=0x7f0806df;
        /**  Label for app settings action 
         */
        public static final int battery_action_app_settings=0x7f0806e0;
        /**  Label for bluetooth settings 
         */
        public static final int battery_action_bluetooth=0x7f0806e3;
        /**  Label for display settings 
         */
        public static final int battery_action_display=0x7f0806e1;
        /**  Label for force stop action 
         */
        public static final int battery_action_stop=0x7f0806de;
        /**  Label for wifi settings 
         */
        public static final int battery_action_wifi=0x7f0806e2;
        /**  [CHAR LIMIT=50] Description for power consumed by applications 
         */
        public static final int battery_desc_apps=0x7f0806f1;
        /**  Description for bluetooth power consumption detail 
         */
        public static final int battery_desc_bluetooth=0x7f0806ee;
        /**  [CHAR_LIMIT=NONE] Description for power consumed by the camera 
         */
        public static final int battery_desc_camera=0x7f0806e9;
        /**  Description for power consumed by display 
         */
        public static final int battery_desc_display=0x7f0806ea;
        /**  [CHAR_LIMIT=NONE] Description for power consumed by the flashlight 
         */
        public static final int battery_desc_flashlight=0x7f0806e8;
        /**  [CHAR LIMIT=50] Description for over-counted power use 
         */
        public static final int battery_desc_overcounted=0x7f0806f8;
        /**  Description for cell radio detail 
         */
        public static final int battery_desc_radio=0x7f0806e6;
        /**  Description for standby detail 
         */
        public static final int battery_desc_standby=0x7f0806e5;
        /**  [CHAR LIMIT=50] Description for unaccounted power use 
         */
        public static final int battery_desc_unaccounted=0x7f0806f6;
        /**  [CHAR LIMIT=50] Description for power consumed by users 
         */
        public static final int battery_desc_users=0x7f0806f5;
        /**  Description for voice call detail 
         */
        public static final int battery_desc_voice=0x7f0806e4;
        /**  Description for wifi connectivity 
         */
        public static final int battery_desc_wifi=0x7f0806ec;
        /**  Used to show an amount of time in the form "d days, h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_days=0x7f080625;
        /**  Used to show an amount of time in the form "d days, h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_days_no_seconds=0x7f080629;
        /**  Used to show an amount of time in the form "h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_hours=0x7f080626;
        /**  Used to show an amount of time in the form "h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_hours_no_seconds=0x7f08062a;
        /**  Used to show an amount of time in the form "m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_minutes=0x7f080627;
        /**  Used to show an amount of time in the form "m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_minutes_no_seconds=0x7f08062b;
        /**  Used to show an amount of time in the form "s seconds" in BatteryHistory 
         */
        public static final int battery_history_seconds=0x7f080628;
        /**  [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging from an unknown source.  
         */
        public static final int battery_info_status_charging=0x7f0800a0;
        /**  [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging on AC.  
         */
        public static final int battery_info_status_charging_ac=0x7f0800a1;
        /**  [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging over USB.  
         */
        public static final int battery_info_status_charging_usb=0x7f0800a2;
        /**  [CHAR_LIMIT=20] Battery use screen.  Battery status shown in chart label when charging over a wireless connection.  
         */
        public static final int battery_info_status_charging_wireless=0x7f0800a3;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_discharging=0x7f0800a4;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_full=0x7f0800a6;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_not_charging=0x7f0800a5;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_unknown=0x7f08009f;
        /**  Phone info screen, section titles: 
         */
        public static final int battery_level_title=0x7f080436;
        /**  [CHAR LIMIT=NONE] Description for unaccounted power use 
         */
        public static final int battery_msg_unaccounted=0x7f0806f7;
        /**  [CHAR_LIMIT=40] Battery saver: Label for feature, title + menu item 
         */
        public static final int battery_saver=0x7f080701;
        /**  [CHAR_LIMIT=40] Battery saver: Value for automatic entry option: Never 
         */
        public static final int battery_saver_turn_on_automatically_never=0x7f080703;
        /**  [CHAR_LIMIT=40] Battery saver: Value for automatic entry option: pct% battery 
         */
        public static final int battery_saver_turn_on_automatically_pct=0x7f080704;
        /**  [CHAR_LIMIT=40] Battery saver: Title for automatic entry option 
         */
        public static final int battery_saver_turn_on_automatically_title=0x7f080702;
        /**  Battery usage since user reset the stats 
         */
        public static final int battery_since_reset=0x7f0806ac;
        /**  Battery usage since unplugged 
         */
        public static final int battery_since_unplugged=0x7f0806ab;
        /**  [CHAR LIMIT=25] Label for battery stats camera on state graph 
         */
        public static final int battery_stats_camera_on_label=0x7f0806b2;
        /**  [CHAR LIMIT=25] Label for battery stats charging state graph 
         */
        public static final int battery_stats_charging_label=0x7f0806af;
        /**  Battery usage duration 
         */
        public static final int battery_stats_duration=0x7f0806ae;
        /**  [CHAR LIMIT=25] Label for battery stats flashlight on state graph 
         */
        public static final int battery_stats_flashlight_on_label=0x7f0806b3;
        /**  [CHAR LIMIT=25] Label for battery stats gps on state graph 
         */
        public static final int battery_stats_gps_on_label=0x7f0806b1;
        /**  Battery usage during last unplugged period 
         */
        public static final int battery_stats_last_duration=0x7f0806b7;
        /**  Battery usage on battery duration 
         */
        public static final int battery_stats_on_battery=0x7f0806ad;
        /**  [CHAR LIMIT=25] Label for battery stats phone signal strength graph 
         */
        public static final int battery_stats_phone_signal_label=0x7f0806b6;
        /**  [CHAR LIMIT=25] Label for battery stats screen on state graph 
         */
        public static final int battery_stats_screen_on_label=0x7f0806b0;
        /**  [CHAR LIMIT=25] Label for battery stats wake lock state graph 
         */
        public static final int battery_stats_wake_lock_label=0x7f0806b5;
        /**  [CHAR LIMIT=25] Label for battery stats wifi running state graph 
         */
        public static final int battery_stats_wifi_running_label=0x7f0806b4;
        /**  Phone info screen, section titles: 
         */
        public static final int battery_status_title=0x7f080435;
        /**  [CHAR LIMIT=100] Suggestion for getting apps to consume less power due to GPS
         */
        public static final int battery_sugg_apps_gps=0x7f0806f3;
        /**  Suggestion for exploring application info to stop or uninstall 
         */
        public static final int battery_sugg_apps_info=0x7f0806f2;
        /**  Suggestion for getting apps to consume less power 
         */
        public static final int battery_sugg_apps_settings=0x7f0806f4;
        /**  Suggestion for bluetooth 
         */
        public static final int battery_sugg_bluetooth_basic=0x7f0806ef;
        /**  Suggestion for bluetooth headset 
         */
        public static final int battery_sugg_bluetooth_headset=0x7f0806f0;
        /**  Suggestion for reducing display power 
         */
        public static final int battery_sugg_display=0x7f0806eb;
        /**  Suggestion to switch to airplane mode to save power 
         */
        public static final int battery_sugg_radio=0x7f0806e7;
        /**  Suggestion for wifi connectivity power drain 
         */
        public static final int battery_sugg_wifi=0x7f0806ed;
        /**  Summary of power usage for an app [CHAR LIMIT=NONE] 
         */
        public static final int battery_summary=0x7f080add;
        /**  Edit Beaerer Info of APN 
         */
        public static final int bearer=0x7f080453;
        /**  Message to describe "BLE scan always available feature" when Bluetooth is off. The
      place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They mark a link to bring
      the user to "scanning settings" screen. 
         */
        public static final int ble_scan_notify_text=0x7f08022f;
        /**  Used as setting title (for checkbox) on second screen after selecting Bluetooth settings 
         */
        public static final int bluetooth=0x7f0800a7;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
         */
        public static final int bluetooth_a2dp_profile_summary_connected=0x7f080031;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
         */
        public static final int bluetooth_a2dp_profile_summary_use_for=0x7f08003e;
        /**  Bluetooth settings. Title of the advanced bluetooth settings screen [CHAR LIMIT=30]
         */
        public static final int bluetooth_advanced_titlebar=0x7f08022d;
        /**  Strings for asking to the user whether to allow an app to enable discovery mode 
         */
        public static final int bluetooth_ask_discovery=0x7f0800ca;
        /**  This string asks the user whether or not to allow an app to enable bluetooth. [CHAR LIMIT=100] 
         */
        public static final int bluetooth_ask_enablement=0x7f0800c9;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode 
         */
        public static final int bluetooth_ask_enablement_and_discovery=0x7f0800cf;
        public static final int bluetooth_ask_enablement_and_lasting_discovery=0x7f0800d0;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth and start broadcasting 
         */
        public static final int bluetooth_ask_enablement_and_start_broadcast=0x7f0800cd;
        public static final int bluetooth_ask_lasting_discovery=0x7f0800cb;
        /**  Strings for asking to the user whether to allow an app to start broadcasting 
         */
        public static final int bluetooth_ask_start_broadcast=0x7f0800cc;
        /**  Strings for device profile auto connect setting 
         */
        public static final int bluetooth_auto_connect=0x7f0800d3;
        /**  Bluetooth broadcasting settings, option to enable/disable broadcasting 
         */
        public static final int bluetooth_broadcasting=0x7f0800bc;
        /**  Strings for bluetooth broadcasting explanation 
         */
        public static final int bluetooth_broadcasting_explaination=0x7f0800ce;
        /**  Message for confirmation of passkey to complete pairing. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_confirm_passkey_msg=0x7f080210;
        /**  Bluetooth settings.  The title of the screen to pick which profiles to connect to on the device.  For example, headphones may have both A2DP and headset, this allows the user to choose which one he wants to connect to. 
         */
        public static final int bluetooth_connect_specific_profiles_title=0x7f080230;
        /**  Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected=0x7f080020;
        /**  Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_a2dp=0x7f080023;
        /**  Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_headset=0x7f080022;
        /**  Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_headset_no_a2dp=0x7f080025;
        /**  Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_map=0x7f080024;
        /**  Bluetooth settings.  Message when connecting to a device 
         */
        public static final int bluetooth_connecting=0x7f08001f;
        /**  Message for the error dialog when BT connecting operation fails generically. 
         */
        public static final int bluetooth_connecting_error_message=0x7f080215;
        /**  Bluetooth connection permission Alert Activity text [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_dialog_text=0x7f0800d6;
        /**  Notification message when a remote Bluetooth device wants to connect to a Bluetooth profile [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_notif_message=0x7f0800d5;
        /**  Activity label of BluetoothPermissionActivity [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_permission_request=0x7f0800d4;
        /** Bluetooth settings screen, summary text for Bluetooth device with no name 
         */
        public static final int bluetooth_device=0x7f0800c0;
        /**  Bluetooth settings. Connection options screen. Title for checkbox to enable incoming file transfers [CHAR LIMIT=30] 
         */
        public static final int bluetooth_device_advanced_enable_opp_title=0x7f08023b;
        /**  Bluetooth settings.  Connection options screen.  The summary of the online mode checkbox.  This describes what the setting does in the context of the screen. 
         */
        public static final int bluetooth_device_advanced_online_mode_summary=0x7f080238;
        /**  Bluetooth settings.  Connection options screen.  The title of the checkbox that controls whether the device is in "online" mode or "offline" mode.  This essentially is the checkbox that controls whether any checks / unchecks on a profile should be applied immediately, or next time the device is connected. 
         */
        public static final int bluetooth_device_advanced_online_mode_title=0x7f080237;
        /**  Bluetooth settings.  Connection options screen.  The title of the header that is above all of the profiles.
         When a user decides what Bluetooth capabilities to use with the device.  
         */
        public static final int bluetooth_device_advanced_profile_header_title=0x7f080239;
        /**  Bluetooth settings. Connection options screen. Title for option to rename the device. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_device_advanced_rename_device=0x7f08023a;
        /**  Bluetooth settings.  Connection options screen.  The title of the screen. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_device_advanced_title=0x7f080236;
        /**  Bluetooth settings.  Context menu item for a device.  Action will connect to all profiles on the device. 
         */
        public static final int bluetooth_device_context_connect=0x7f080226;
        /**  Bluetooth settings.  Context menu item for a device.  Action will take the user to another screen where they can choose exactly which profiles to connect to. 
         */
        public static final int bluetooth_device_context_connect_advanced=0x7f08022b;
        /**  Bluetooth settings.  Context menu item for a device.  Action will disconnect from all profiles on the device. 
         */
        public static final int bluetooth_device_context_disconnect=0x7f080227;
        /**  Bluetooth settings.  Context menu item for a device.  Action will disconnect and remove pairing with the device. 
         */
        public static final int bluetooth_device_context_disconnect_unpair=0x7f08022a;
        /**  Bluetooth settings.  Context menu item for a device.  Action will first pair, and then connect to all profiles on the device. 
         */
        public static final int bluetooth_device_context_pair_connect=0x7f080228;
        /**  Bluetooth settings.  Context menu item for a device.  Action will remove pairing with the device. 
         */
        public static final int bluetooth_device_context_unpair=0x7f080229;
        /**  Bluetooth settings screen, image description for device details button. This opens the screen to rename, unpair, etc. a single device. 
         */
        public static final int bluetooth_device_details=0x7f0800b1;
        /**  Bluetooth settings screen, title for the current bluetooth name setting 
         */
        public static final int bluetooth_device_name=0x7f0800b0;
        /**  Bluetooth settings screen, heading above the list of nearby bluetooth devices 
         */
        public static final int bluetooth_devices=0x7f0800af;
        /**  Bluetooth settings.  Message for disabling a profile of a bluetooth device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_disable_profile_message=0x7f0800be;
        /**  Bluetooth settings.  Dialog title to disable a single profile of a device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_disable_profile_title=0x7f0800bd;
        /**  Bluetooth settings.  Message for disconnecting from the A2DP profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_a2dp_profile=0x7f080231;
        /**  Bluetooth settings.  Message for disconnecting from all profiles of a bluetooth device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_disconnect_all_profiles=0x7f0800b8;
        /**  Bluetooth settings.  Message for disconnecting from the headset profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_headset_profile=0x7f080232;
        /**  Bluetooth settings.  Message for disconnecting from the HID profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_hid_profile=0x7f080233;
        /**  Bluetooth settings.  Message for disconnecting from the PAN profile (NAP role). [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_pan_nap_profile=0x7f080235;
        /**  Bluetooth settings.  Message for disconnecting from the PAN profile (user role). [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_pan_user_profile=0x7f080234;
        /**  Bluetooth settings.  Dialog title to confirm disconnecting from all profiles of a device. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_disconnect_title=0x7f0800b7;
        /**  Bluetooth settings.  Message when a device is disconnected 
         */
        public static final int bluetooth_disconnected=0x7f08001d;
        /**  Bluetooth settings.  Message when disconnecting from a device 
         */
        public static final int bluetooth_disconnecting=0x7f08001e;
        /**  Message when bluetooth dialog when passkey or pin needs to be displayed. 
         */
        public static final int bluetooth_display_passkey_pin_msg=0x7f080212;
        /**  Bluetooth settings.  Dock Setting Title 
         */
        public static final int bluetooth_dock_settings=0x7f08023c;
        /**  Bluetooth settings.  Dock Setting Dialog - Checkbox selection 2: Use dock for media audio 
         */
        public static final int bluetooth_dock_settings_a2dp=0x7f08023f;
        /**  Bluetooth settings.  Dock Setting Dialog - Checkbox selection 1: Use dock as speaker phone 
         */
        public static final int bluetooth_dock_settings_headset=0x7f08023e;
        /**  Bluetooth settings.  Dock Setting Dialog - Remember setting and don't ask user again 
         */
        public static final int bluetooth_dock_settings_remember=0x7f080240;
        /**  Bluetooth settings.  Dock Setting Dialog Title 
         */
        public static final int bluetooth_dock_settings_title=0x7f08023d;
        /**  Bluetooth settings.  Connection options screen.  The summary for the DUN checkbox preference when DUN is connected. 
         */
        public static final int bluetooth_dun_profile_summary_connected=0x7f08003a;
        /**  Bluetooth settings. Connection options screen.  The summary for the dun checkbox preference that describes how checking it will set the dun profile as preferred. 
         */
        public static final int bluetooth_dun_profile_summary_use_for=0x7f080042;
        /**  Bluetooth settings. Text displayed when Bluetooth is off and device list is empty [CHAR LIMIT=50]
         */
        public static final int bluetooth_empty_list_bluetooth_off=0x7f08022e;
        /**  Bluetooth Settings. text displayed when user has restriction DISALLOW_CONFIG_BLUETOOTH [CHAR LIMIT=NONE]
         */
        public static final int bluetooth_empty_list_user_restricted=0x7f0800b9;
        /**  Checkbox label for alphanumeric PIN entry (default is numeric PIN). [CHAR LIMIT=50] 
         */
        public static final int bluetooth_enable_alphanumeric_pin=0x7f08020b;
        /**  Message when bluetooth dialog for passkey entry is showing. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_passkey_msg=0x7f08020a;
        /**  Pairing dialog text to remind user to enter the passkey on the other device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_passkey_other_device=0x7f08020f;
        /**  Pairing dialog text to remind user to enter the PIN on the other device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_pin_other_device=0x7f08020e;
        /**  Title for BT error dialogs. 
         */
        public static final int bluetooth_error_title=0x7f080214;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
         */
        public static final int bluetooth_headset_profile_summary_connected=0x7f080032;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
         */
        public static final int bluetooth_headset_profile_summary_use_for=0x7f08003f;
        /**  Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. 
         */
        public static final int bluetooth_hid_profile_summary_connected=0x7f080037;
        /**  Bluetooth settings. Connection options screen. The summary
         for the HID checkbox preference that describes how checking it
         will set the HID profile as preferred. 
         */
        public static final int bluetooth_hid_profile_summary_use_for=0x7f080041;
        /**  Message when bluetooth incoming pairing request for (2.1 devices) dialog is showing 
         */
        public static final int bluetooth_incoming_pairing_msg=0x7f080211;
        /**  Bluetooth Visibility discoonect question.  Asks the user if they wish to disconnect a paired bluetooth device.  [CHAR LIMIT=50] 
         */
        public static final int bluetooth_is_disconnect_question=0x7f0800bb;
        /**  Bluetooth settings screen, summary after selecting Discoverable check box [CHAR LIMIT=50] 
         */
        public static final int bluetooth_is_discoverable=0x7f0800a8;
        /**  Bluetooth settings screen, summary when Discoverable duration is set to "forever" [CHAR LIMIT=50] 
         */
        public static final int bluetooth_is_discoverable_always=0x7f0800a9;
        /**  Bluetooth Visibility message.  This message informs the user that their device is now visible to other bluetooth devices.  [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_is_visible_message=0x7f0800ba;
        /**  Bluetooth settings screen, check box label whether or not to allow
        bluetooth voice dialing when lock screen is up
         */
        public static final int bluetooth_lock_voice_dialing=0x7f0800ad;
        /**  Bluetooth settings screen, lock voice dialing checkbox summary text 
         */
        public static final int bluetooth_lock_voice_dialing_summary=0x7f0800ae;
        /**  Bluetooth message permission Alert Activity text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_map_acceptance_dialog_text=0x7f0800dc;
        /**  Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. 
         */
        public static final int bluetooth_map_profile_summary_connected=0x7f080034;
        /**  Bluetooth settings. Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. 
         */
        public static final int bluetooth_map_profile_summary_use_for=0x7f08003c;
        /**  Activity label of BluetoothMessagePermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none] 
         */
        public static final int bluetooth_map_request=0x7f0800db;
        /**  Bluetooth settings.  Menu option to Bluetooth advanced settings [CHAR LIMIT=20]
         */
        public static final int bluetooth_menu_advanced=0x7f08022c;
        /**  Bluetooth settings screen, summary text when there isn't a name set (for the name setting) 
         */
        public static final int bluetooth_name_not_set=0x7f0800b3;
        /** Bluetooth settings screen, text that appears when scanning for devices is finished and no nearby bluetooth device was found [CHAR LIMIT=40]
         */
        public static final int bluetooth_no_devices_found=0x7f0800c2;
        /**  Bluetooth settings screen, summary text when not discoverable and no paired devices [CHAR LIMIT=50] 
         */
        public static final int bluetooth_not_visible_to_other_devices=0x7f0800aa;
        /**  Notification message when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_message=0x7f0800c5;
        /**  Notification ticker text (shown in the status bar) when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_ticker=0x7f0800c3;
        /**  Notification title when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_title=0x7f0800c4;
        /**  Bluetooth on time 
         */
        public static final int bluetooth_on_time=0x7f0806ba;
        /**  Bluetooth settings screen, summary text when not discoverable with paired devices [CHAR LIMIT=50] 
         */
        public static final int bluetooth_only_visible_to_paired_devices=0x7f0800ab;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
         */
        public static final int bluetooth_opp_profile_summary_connected=0x7f080033;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
         */
        public static final int bluetooth_opp_profile_summary_not_connected=0x7f080036;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
         */
        public static final int bluetooth_opp_profile_summary_use_for=0x7f080040;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
         */
        public static final int bluetooth_pairing=0x7f080021;
        /**  Button text for accepting an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_accept=0x7f080043;
        /**  Button text for accepting an incoming pairing request in all caps. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_accept_all_caps=0x7f080044;
        /**  Button text for declining an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_decline=0x7f080045;
        /**  Message for the error dialog when BT pairing fails because the other device is down. 
         */
        public static final int bluetooth_pairing_device_down_error_message=0x7f080049;
        /**  Bluetooth settings: Message informing user that a bluetooth wants to access contant and call history.  [CHAR LIMIT=100] 
         */
        public static final int bluetooth_pairing_dialog_contants_request=0x7f080221;
        /**  Bluetooth settings: paring permission message.  [CHAR LIMIT=100] 
         */
        public static final int bluetooth_pairing_dialog_paring_request=0x7f080222;
        /**  Bluetooth settings: share phone book title.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_pairing_dialog_sharing_phonebook_title=0x7f080220;
        /**  Bluetooth settings: pairing dialog title.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_pairing_dialog_title=0x7f08021f;
        /**  Message for the error dialog when BT pairing fails generically. 
         */
        public static final int bluetooth_pairing_error_message=0x7f080047;
        /**  Message when bluetooth is informing the user of the pairing key. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_pairing_key_msg=0x7f080209;
        /**  Message for the error dialog when BT pairing fails because the PIN /
    Passkey entered is incorrect. 
         */
        public static final int bluetooth_pairing_pin_error_message=0x7f080048;
        /**  Message for the error dialog when BT pairing fails because the other device rejected the pairing. 
         */
        public static final int bluetooth_pairing_rejected_error_message=0x7f08004a;
        /**  ======================================================================================= 
 Note: The opening brackets of HTML style tags are escaped (e.g. "<b>" is "&lt;b>") in   
   the following resources to enable formatting followed by HTML styling, as described   
   here:  http://developer.android.com/guide/topics/resources/string-resource.html       
 ======================================================================================= 
 Title for the dialog to enter PIN. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_pairing_request=0x7f080208;
        /**  Checkbox message in pairing dialogs.  [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_pairing_shares_phonebook=0x7f080213;
        /**  Message in pairing dialogs.  [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_pairing_will_share_phonebook=0x7f080046;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
         */
        public static final int bluetooth_pan_nap_profile_summary_connected=0x7f080039;
        /**  Bluetooth settings. Connection options screen. The summary
         for the PAN checkbox preference that describes how checking it
         will set the PAN profile as preferred. 
         */
        public static final int bluetooth_pan_profile_summary_use_for=0x7f08003b;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
 Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
         */
        public static final int bluetooth_pan_user_profile_summary_connected=0x7f080038;
        /**  Bluetooth phone book permission Alert Activity text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_pb_acceptance_dialog_text=0x7f0800d8;
        /** FIXME SHOULD BE REMOVED AND ALL LANG VERSIONS FIXED TO ABOVE NAME 
         */
        public static final int bluetooth_pb_remember_choice=0x7f0800da;
        /**  Strings for dialog title when asking to the user whether to allow an app to enable discovery mode 
         */
        public static final int bluetooth_permission_request=0x7f0800c8;
        /**  Activity label of BluetoothPbPermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none] 
         */
        public static final int bluetooth_phonebook_request=0x7f0800d7;
        /**  Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30] 
         */
        public static final int bluetooth_pin_values_hint=0x7f08020c;
        /**  Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30] 
         */
        public static final int bluetooth_pin_values_hint_16_digits=0x7f08020d;
        /**  Bluetooth settings: The sub heading for device settings. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_preference_device_settings=0x7f080219;
        /**  Bluetooth settings: The sub heading for available devices during and after scanning. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_found_devices=0x7f080224;
        /**  Bluetooth settings: The message displayed if no Bluetooth devices were found. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_no_found_devices=0x7f080225;
        /**  Bluetooth settings: The sub heading for devices which have already been paired with this device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_devices=0x7f080223;
        /**  Bluetooth settings: Checkbox label for enable/disable contacts connection.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_contacts_option=0x7f08021e;
        /**  Bluetooth settings: Checkbox label for enable/disable internet connection.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_internet_option=0x7f08021c;
        /**  Bluetooth settings: Checkbox label for enable/disable keyboard connection.  [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_keyboard_option=0x7f08021d;
        /**  Bluetooth settings: Name label [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_name_label=0x7f08021b;
        /**  Bluetooth settings: Paired dialog title [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_dialog_title=0x7f08021a;
        /**  Bluetooth settings: The title of the preference (list item) that initiates a scan for devices 
         */
        public static final int bluetooth_preference_scan_title=0x7f080216;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
         */
        public static final int bluetooth_profile_a2dp=0x7f080026;
        /**  Bluetooth settings screen, image description for profile of a device details button. 
         */
        public static final int bluetooth_profile_details=0x7f0800b2;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the dun profile. 
         */
        public static final int bluetooth_profile_dun=0x7f080030;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
         */
        public static final int bluetooth_profile_headset=0x7f080027;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. 
         */
        public static final int bluetooth_profile_hid=0x7f080029;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the map profile. 
         */
        public static final int bluetooth_profile_map=0x7f08002e;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
         */
        public static final int bluetooth_profile_opp=0x7f080028;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pan=0x7f08002a;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pan_nap=0x7f08002d;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PBAP profile. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_profile_pbap=0x7f08002b;
        /**  Bluetooth settings. The user-visible summary string that is used whenever referring to the PBAP profile (sharing contacts). [CHAR LIMIT=60] 
         */
        public static final int bluetooth_profile_pbap_summary=0x7f08002c;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the SAP profile (sharing SIM card). 
         */
        public static final int bluetooth_profile_sap=0x7f08002f;
        /**  Bluetooth settings check box summary for turning on bluetooth 
         */
        public static final int bluetooth_quick_toggle_summary=0x7f080204;
        /**  Bluetooth settings 
 Bluetooth settings check box title on Main Settings screen 
         */
        public static final int bluetooth_quick_toggle_title=0x7f080203;
        /**  Bluetooth phone book permission Alert Activity checkbox text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_remember_choice=0x7f0800d9;
        /**  Bluetooth settings screen, confirmation button for rename device dialog. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_rename_button=0x7f0800b6;
        /**  Bluetooth settings screen, menu item to change this device's Bluetooth name. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_rename_device=0x7f0800b5;
        /**  Bluetooth SIM access permission Alert Activity text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_sap_acceptance_dialog_text=0x7f0800de;
        /**  Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference when SAP is connected. 
         */
        public static final int bluetooth_sap_profile_summary_connected=0x7f080035;
        /**  Bluetooth settings.  Connection options screen.  The summary for the sap checkbox preference that describes how checking it will set the sap profile as preferred. 
         */
        public static final int bluetooth_sap_profile_summary_use_for=0x7f08003d;
        /**  Activity label of BluetoothMessagePermissionActivity for SIM access profile. Also used as Strings in the permission dialog [CHAR LIMIT=none] 
         */
        public static final int bluetooth_sap_request=0x7f0800dd;
        /**  Bluetooth settings screen, menu item to scan for nearby bluetooth devices 
         */
        public static final int bluetooth_scan_for_devices=0x7f0800b4;
        /**  Bluetooth settings: The title of the action button that initiates a search for nearby devices [CHAR LIMIT=20] 
         */
        public static final int bluetooth_search_for_devices=0x7f080217;
        /**  Bluetooth settings: The title of the action button while a search for nearby devices is in progress [CHAR LIMIT=20] 
         */
        public static final int bluetooth_searching_for_devices=0x7f080218;
        /** Used as title on second screen after selecting Bluetooth settings 
         */
        public static final int bluetooth_settings=0x7f080205;
        /** Wireless controls screen, settings summary for the item tot ake you to the bluetooth settings screen 
         */
        public static final int bluetooth_settings_summary=0x7f080207;
        /** Wireless controls screen, settings title for the item to take you to the bluetooth settings screen 
         */
        public static final int bluetooth_settings_title=0x7f080206;
        /**  Bluetooth settings screen, menu to show the list of received files [CHAR LIMIT=30] 
         */
        public static final int bluetooth_show_received_files=0x7f0800c6;
        /**  Bluetooth Tethering settings
 Label for bluetooth tether checkbox [CHAR LIMIT=25]
         */
        public static final int bluetooth_tether_checkbox_text=0x7f08048a;
        /**  Bluetooth available subtext - shown when Bluetooth tethering is turned on but it is not currently tethered to any devices [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_available_subtext=0x7f08048b;
        /**  Bluetooth connected subtext - shown when a device is tethered over Bluetooth [CHAR LIMIT=60]
         */
        public static final int bluetooth_tethering_device_connected_subtext=0x7f08048c;
        /**  Bluetooth connected subtext - shown when multiple devices are tethered over Bluetooth [CHAR LIMIT=60]
         */
        public static final int bluetooth_tethering_devices_connected_subtext=0x7f08048d;
        /**  Bluetooth errored subtext - shown when Bluetooth is broken for some reason [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_errored_subtext=0x7f080490;
        /**  Bluetooth tethering off subtext - shown when Bluetooth Tethering is turned off [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_off_subtext=0x7f08048f;
        /**  Bluetooth tethering off subtext - shown when Bluetooth Tethering is turned off [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_off_subtext_config=0x7f08048e;
        /**  Bluetooth Tethering settings. Error message shown when trying to connect an 8th device [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_overflow_error=0x7f080491;
        /**  Strings for msg to display to user while bluetooth is turning off [CHAR LIMIT=60] 
         */
        public static final int bluetooth_turning_off=0x7f0800d2;
        /**  Strings for msg to display to user while bluetooth is turning on [CHAR LIMIT=60] 
         */
        public static final int bluetooth_turning_on=0x7f0800d1;
        /**  Bluetooth settings.  Message when the device state is unknown 
         */
        public static final int bluetooth_unknown=0x7f0800bf;
        /**  Bluetooth Tethering settings.  Message for untethering from a bluetooth device [CHAR LIMIT=50]
         */
        public static final int bluetooth_untether_blank=0x7f080492;
        /**  Bluetooth settings screen, option name to pick discoverability timeout duration (a list dialog comes up) 
         */
        public static final int bluetooth_visibility_timeout=0x7f0800ac;
        /**  Sound & display settings screen, setting option name to change brightness level 
         */
        public static final int brightness=0x7f080361;
        /**  Sound & display settings screen, setting option summary to change brightness level 
         */
        public static final int brightness_summary=0x7f080363;
        /**  Sound & display settings screen, setting option name to change brightness level [CHAR LIMIT=30] 
         */
        public static final int brightness_title=0x7f080362;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int bssid_label=0x7f080316;
        /**  Setting Checkbox title whether to enable bluetooth HCI snoop log 
         */
        public static final int bt_hci_snoop_log=0x7f0805f6;
        /**  setting Checkbox summary whether to capture all bluetooth HCI packets in a file 
         */
        public static final int bt_hci_snoop_log_summary=0x7f0805f7;
        /**  [CHAR LIMIT=NONE] Setting checkbox title for Whether to include bug report item in power menu. 
         */
        public static final int bugreport_in_power=0x7f0805f2;
        /**  [CHAR LIMIT=NONE] Setting checkbox summary for Whether to include bug report item in power 
         */
        public static final int bugreport_in_power_summary=0x7f0805f3;
        /**  About phone screen,  setting option name  [CHAR LIMIT=40] 
         */
        public static final int build_number=0x7f0803a7;
        /**  Summary for built-in keyboard settings 
         */
        public static final int builtin_keyboard_settings_summary=0x7f0805e8;
        /**  Title for built-in keyboard settings 
         */
        public static final int builtin_keyboard_settings_title=0x7f0805e7;
        /**  Manage applications, Header name used for cache information 
         */
        public static final int cache_header_label=0x7f080519;
        /**  Manage applications, label that appears next to the cache size 
         */
        public static final int cache_size_label=0x7f08051b;
        /**  Label for a process item representing a background process 
         */
        public static final int cached=0x7f080580;
        /**  Call Manager enable settings summary.  [CHAR LIMIT=80] 
         */
        public static final int call_manager_enable_summary=0x7f080967;
        /**  Call Manager enable settings title.  [CHAR LIMIT=50] 
         */
        public static final int call_manager_enable_title=0x7f080966;
        /**  Call Manager settings summary.  [CHAR LIMIT=50] 
         */
        public static final int call_manager_summary=0x7f080969;
        /**  Call Manager settings title.  [CHAR LIMIT=50] 
         */
        public static final int call_manager_title=0x7f080968;
        /**  Main settings screen, Call settings summary for item to go into call settings 
         */
        public static final int call_settings_summary=0x7f08047c;
        /**  Main settings screen, Call settings title for item to go into the call settings 
         */
        public static final int call_settings_title=0x7f08047b;
        /**  check box Calls title [CHAR LIMIT=30] 
         */
        public static final int calls_title=0x7f080145;
        /**  Description of setting that controls gesture to open camera by double tapping the power button [CHAR LIMIT=NONE] 
         */
        public static final int camera_double_tap_power_gesture_desc=0x7f080b47;
        /**  Title of setting that controls gesture to open camera by double tapping the power button [CHAR LIMIT=40] 
         */
        public static final int camera_double_tap_power_gesture_title=0x7f080b46;
        /**  Description of setting that controls gesture to open camera [CHAR LIMIT=NONE] 
         */
        public static final int camera_gesture_desc=0x7f080b45;
        /**  Title of setting that controls gesture to open camera [CHAR LIMIT=40] 
         */
        public static final int camera_gesture_title=0x7f080b44;
        /**  ======================================================================================= 
 NEW STUFF 
 ======================================================================================= 
 Button label for generic cancel action [CHAR LIMIT=20] 
         */
        public static final int cancel=0x7f080138;
        /**  Messaage shown in dialog when you can't manually sync 
         */
        public static final int cant_sync_dialog_message=0x7f080808;
        /**  Title of dialog shown when you can't manually sync an item because it's disabled 
         */
        public static final int cant_sync_dialog_title=0x7f080807;
        /**  Title for the list of capabilities of an accessibility service. 
         */
        public static final int capabilities_list_title=0x7f080676;
        /**  Description for the capability of an accessibility service to receive events and keys. 
         */
        public static final int capability_desc_receiveAccessibilityEvents=0x7f08067e;
        /**  Title for the capability of an accessibility service to receive events and keys. 
         */
        public static final int capability_title_receiveAccessibilityEvents=0x7f08067d;
        /**  Title for the preference to change video caption background color. [CHAR LIMIT=35] 
         */
        public static final int captioning_background_color=0x7f08065c;
        /**  Title for the preference to change video caption background opacity. [CHAR LIMIT=35] 
         */
        public static final int captioning_background_opacity=0x7f08065d;
        /**  Title for the preference catgeory containing custom video caption properties. [CHAR LIMIT=35] 
         */
        public static final int captioning_custom_options_title=0x7f08065b;
        /**  Title for the preference to change video caption edge color. [CHAR LIMIT=35] 
         */
        public static final int captioning_edge_color=0x7f080662;
        /**  Title for the preference to change video caption edge type. [CHAR LIMIT=35] 
         */
        public static final int captioning_edge_type=0x7f080663;
        /**  Title for the preference to change video caption text color. [CHAR LIMIT=35] 
         */
        public static final int captioning_foreground_color=0x7f080660;
        /**  Title for the preference to change video caption text opacity. [CHAR LIMIT=35] 
         */
        public static final int captioning_foreground_opacity=0x7f080661;
        /**  Title for the preference to change video caption locale. [CHAR LIMIT=35] 
         */
        public static final int captioning_locale=0x7f080658;
        /**  Title for the preference category containing video caption property presets. [CHAR LIMIT=35] 
         */
        public static final int captioning_preset=0x7f08065a;
        /**  Sample characters for previewing video caption preferences. [CHAR LIMIT=2] 
         */
        public static final int captioning_preview_characters=0x7f080666;
        /**  Sample text for previewing video caption preferences. [CHAR LIMIT=NONE] 
         */
        public static final int captioning_preview_text=0x7f080665;
        /**  Title for the preference category containing the video caption preview. [CHAR LIMIT=35] 
         */
        public static final int captioning_preview_title=0x7f080656;
        /**  Title for the preference catgeory containing standard video caption options. [CHAR LIMIT=35] 
         */
        public static final int captioning_standard_options_title=0x7f080657;
        /**  Title for the preference to change video caption text size. [CHAR LIMIT=35] 
         */
        public static final int captioning_text_size=0x7f080659;
        /**  Title for the preference to change video caption font family (ex. monospace, sans-serif). [CHAR LIMIT=35] 
         */
        public static final int captioning_typeface=0x7f080664;
        /**  Title for the preference to change video caption window color. [CHAR LIMIT=35] 
         */
        public static final int captioning_window_color=0x7f08065e;
        /**  Title for the preference to change video caption window opacity. [CHAR LIMIT=35] 
         */
        public static final int captioning_window_opacity=0x7f08065f;
        /**  Edit enable/disable of APN 
         */
        public static final int carrier_enabled=0x7f080450;
        public static final int carrier_enabled_summaryOff=0x7f080452;
        public static final int carrier_enabled_summaryOn=0x7f080451;
        /**  Header for items under the personal user [CHAR LIMIT=30] 
         */
        public static final int category_personal=0x7f080355;
        /**  Header for items under the work user [CHAR LIMIT=30] 
         */
        public static final int category_work=0x7f080356;
        /**  Main Settings screen setting option summary text for the item to take you to the CDMA security and location screen 
         */
        public static final int cdma_security_settings_summary=0x7f08017b;
        /**  Cell Broadcast settings title.  [CHAR LIMIT=50] 
         */
        public static final int cell_broadcast_settings=0x7f08096a;
        /**  check box cellular data summary [CHAR LIMIT=41] 
         */
        public static final int cellular_data_summary=0x7f080147;
        /**  check box cellular data title [CHAR LIMIT=30] 
         */
        public static final int cellular_data_title=0x7f080144;
        /**  Package name for Certinstaller app
         */
        public static final int certinstaller_package=0x7f08001b;
        /**  Title of button to change storage [CHAR LIMIT=25] 
         */
        public static final int change=0x7f080a8e;
        /**  Title of dialog to change storage [CHAR LIMIT=25] 
         */
        public static final int change_storage=0x7f080a8f;
        /**  Sound & notification > Other sounds: Title for the option enabling charging sounds. [CHAR LIMIT=30] 
         */
        public static final int charging_sounds_title=0x7f0809ff;
        /**  Sound settings screen, the caption of the checkbox for having the notification volume be
         the same as the incoming call volume. 
         */
        public static final int checkbox_notification_same_as_incoming_call=0x7f080334;
        /**  Shown when a password has been entered, and we're checking it 
         */
        public static final int checking_decryption=0x7f080811;
        /**  Title for Choose Assist dialog [CHAR LIMIT=35] 
         */
        public static final int choose_assist_title=0x7f080abb;
        /**  Title for profile selection dialog [CHAR LIMIT=30] 
         */
        public static final int choose_profile=0x7f080aa9;
        /**  The title of the activity to pick a time zone. 
         */
        public static final int choose_timezone=0x7f0800e0;
        /**  Title for Choose voice input dialog [CHAR LIMIT=30] 
         */
        public static final int choose_voice_input_title=0x7f080ac0;
        /**  Manage applications, individual application screen, button label under Launch by default heading.  This is used to clear any default actions that may be assigned to this app.  
         */
        public static final int clear_activities=0x7f08052d;
        /**  Setting title to revoke secure USB debugging authorizations 
         */
        public static final int clear_adb_keys=0x7f0805f1;
        /**  Manage applications, text label for button 
         */
        public static final int clear_cache_btn_text=0x7f08051a;
        /**  Manage applications, individual application screen, confirmation dialog message. Displays when user selects to "Clear data". It warns the user of the consequences of clearing the data for an app. 
         */
        public static final int clear_data_dlg_text=0x7f08054b;
        /**  Manage applications, individual application screen, confirmation dialog title. Displays when user selects to "Clear data". 
         */
        public static final int clear_data_dlg_title=0x7f08054a;
        /**  Manage applications, individual application dialog box message. Shown when there was an error trying to clear the data. 
         */
        public static final int clear_data_failed=0x7f080550;
        /**  Manage applications, text for dialog if clear data fails
         */
        public static final int clear_failed_dlg_text=0x7f080554;
        /**  Manage applications, title for dialog if clear data fails
         */
        public static final int clear_failed_dlg_title=0x7f080553;
        /**  Manage applications, individual application info screen, button label under Storage heading. Button to clear all data associated with tis app (for exampel, remove all cached emails for an Email app) 
         */
        public static final int clear_user_data_text=0x7f080528;
        /**  Label for the color black. [CHAR LIMIT=35] 
         */
        public static final int color_black=0x7f08066d;
        /**  Label for the color blue. [CHAR LIMIT=35] 
         */
        public static final int color_blue=0x7f080670;
        /**  Label for custom colors, formats as a HTML color. 
         */
        public static final int color_custom=0x7f080674;
        /**  Label for the color cyan. [CHAR LIMIT=35] 
         */
        public static final int color_cyan=0x7f080671;
        /**  Label for the color gray. [CHAR LIMIT=35] 
         */
        public static final int color_gray=0x7f08066c;
        /**  Label for the color green. [CHAR LIMIT=35] 
         */
        public static final int color_green=0x7f08066f;
        /**  Label for the color magenta. [CHAR LIMIT=35] 
         */
        public static final int color_magenta=0x7f080673;
        /**  Label for no color (transparent). [CHAR LIMIT=35] 
         */
        public static final int color_none=0x7f08066a;
        /**  Orange label.  [CHAR LIMIT=40] 
         */
        public static final int color_orange=0x7f08099d;
        /**  Purple label.  [CHAR LIMIT=40] 
         */
        public static final int color_purple=0x7f08099e;
        /**  Label for the color red. [CHAR LIMIT=35] 
         */
        public static final int color_red=0x7f08066e;
        /**  Label for color selection title in sim settings [CHAR LIMIT=35] 
         */
        public static final int color_title=0x7f080668;
        /**  Label for default color. This lets the app pick the color. [CHAR LIMIT=35] 
         */
        public static final int color_unspecified=0x7f080669;
        /**  Label for the color white. [CHAR LIMIT=35] 
         */
        public static final int color_white=0x7f08066b;
        /**  Label for the color yellow. [CHAR LIMIT=35] 
         */
        public static final int color_yellow=0x7f080672;
        public static final int computing_size=0x7f08055d;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Configuration screen
         */
        public static final int config_list_label=0x7f080324;
        /**  Title for application configuration settings [CHAR LIMIT=30] 
         */
        public static final int configure_apps=0x7f080aa7;
        /**  Title for configuring input method settings [CHAR LIMIT=35] 
         */
        public static final int configure_input_method=0x7f0805df;
        /**  Warning dialog message to confirm user wishes to enable experimental multi-window mode feature 
         */
        public static final int confirm_enable_multi_window_text=0x7f08084d;
        public static final int confirm_enable_multi_window_title=0x7f08084c;
        /**  Warning dialog message to confirm user wishes to enable OEM unlock and disable theft protection features 
         */
        public static final int confirm_enable_oem_unlock_text=0x7f0805fb;
        /**  Confirmation dialog title to ensure user wishes to enable OEM unlock and disable theft protection features 
         */
        public static final int confirm_enable_oem_unlock_title=0x7f0805fa;
        /**  Content description for the fingerprint icon when the user is prompted to enter his credentials. Not shown on the screen. [CHAR LIMIT=NONE] 
         */
        public static final int confirm_fingerprint_icon_content_description=0x7f0801ad;
        /**  Prompt for the user to confirm the new full-backup password by re-entering it 
         */
        public static final int confirm_new_backup_pw_prompt=0x7f0808db;
        /**  Status message of Wi-Fi when it is connected by Passpoint configuration. [CHAR LIMIT=NONE] 
         */
        public static final int connected_via_passpoint=0x7f080018;
        /**  Status message of Wi-Fi when it is connected by a Wi-Fi assistant application. [CHAR LIMIT=NONE] 
         */
        public static final int connected_via_wfa=0x7f080017;
        /**  About phone settings screen, setting option name to see a list of contributors 
         */
        public static final int contributors_title=0x7f0804c9;
        /**  Manage applications, Header name used for other controls 
         */
        public static final int controls_label=0x7f08051c;
        /**  Subtitle for possible options 
         */
        public static final int controls_subtitle=0x7f0806be;
        /**  About phone settings screen, setting option name to see copyright-related info 
         */
        public static final int copyright_title=0x7f0804cc;
        /**  Strings for Dialog create button 
         */
        public static final int create=0x7f080067;
        /**  Title of preference of what type of credential storage this device has: hardware or software [CHAR LIMIT=30] 
         */
        public static final int credential_storage_type=0x7f080782;
        /**  Summary text for preference showing what type of credential storage this device has when it is stored in a hardware-backed storage (as opposed to "software only") [CHAR LIMIT=NONE] 
         */
        public static final int credential_storage_type_hardware=0x7f080783;
        /**  Summary text for preference showing what type of credential storage this device has when it is stored in software only (as opposed to "hardware-backed") [CHAR LIMIT=NONE] 
         */
        public static final int credential_storage_type_software=0x7f080784;
        /**  Description of dialog to explain that a lock screen password is required to use credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_configure_lock_screen_hint=0x7f080791;
        /**  Toast message [CHAR LIMIT=30] 
         */
        public static final int credentials_enabled=0x7f080790;
        /**  Toast message [CHAR LIMIT=30] 
         */
        public static final int credentials_erased=0x7f08078e;
        /**  Title of preference to install certificates from SD card [CHAR LIMIT=30] 
         */
        public static final int credentials_install=0x7f08077b;
        /**  Summary of preference to install certificates from SD card [CHAR LIMIT=NONE] 
         */
        public static final int credentials_install_summary=0x7f08077c;
        /**  Toast message [CHAR LIMIT=30] when credential storage containing private keys and certificates could not be erased (opposite of string credentials_erased) 
         */
        public static final int credentials_not_erased=0x7f08078f;
        /**  Description of the input box for the old password [CHAR LIMIT=30] 
         */
        public static final int credentials_old_password=0x7f080788;
        public static final int credentials_password_too_short=0x7f08078a;
        /**  Title of preference to reset credential storage [CHAR LIMIT=30] 
         */
        public static final int credentials_reset=0x7f08077d;
        /**  Description of dialog to reset credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_hint=0x7f080789;
        /**  Summary of preference to reset credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_summary=0x7f08077e;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_warning=0x7f08078c;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_warning_plural=0x7f08078d;
        /**  Error message for users that aren't allowed to see or modify credentials [CHAR LIMIT=none] 
         */
        public static final int credentials_settings_not_available=0x7f080785;
        /**  Title of preference group for credential storage settings [CHAR LIMIT=30] 
         */
        public static final int credentials_title=0x7f08077a;
        /**  Title of dialog to enable credential storage [CHAR LIMIT=30] 
         */
        public static final int credentials_unlock=0x7f080786;
        /**  Description of dialog to enable credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_unlock_hint=0x7f080787;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_wrong_password=0x7f08078b;
        /**  Button text to start encryption process 
         */
        public static final int crypt_keeper_button_text=0x7f0801b2;
        /**  Title of the final confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_confirm_title=0x7f0801b7;
        /**  Informational text when encryption fails 
         */
        public static final int crypt_keeper_data_corrupt_summary=0x7f0801c2;
        /**  Title of the encryption screen when decrypting the device failed 
         */
        public static final int crypt_keeper_data_corrupt_title=0x7f0801c1;
        /**  Informational text in the first confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_desc=0x7f0801b1;
        /**  Dialog message, shown when encryption cannot proceed because a PIN/Password is needed 
         */
        public static final int crypt_keeper_dialog_need_password_message=0x7f0801b6;
        /**  Dialog title, shown when encryption cannot proceed because a PIN/Password is needed 
         */
        public static final int crypt_keeper_dialog_need_password_title=0x7f0801b5;
        /**  Title of the preferences item to control encryption 
         */
        public static final int crypt_keeper_encrypt_title=0x7f0801af;
        /**  Summary of the preferences item to control encryption, when encryption is active 
         */
        public static final int crypt_keeper_encrypted_summary=0x7f0801b0;
        /**  Informational text on the password entry screen prompting the user for their password 
         */
        public static final int crypt_keeper_enter_password=0x7f0801be;
        /**  Informational text when encryption fails 
         */
        public static final int crypt_keeper_failed_summary=0x7f0801c0;
        /**  Title of the encryption screen when encrypting the device failed 
         */
        public static final int crypt_keeper_failed_title=0x7f0801bf;
        /**  Warning text in the final confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_final_desc=0x7f0801b8;
        public static final int crypt_keeper_force_power_cycle=0x7f0801bc;
        /**  Warning string that will be displayed when encryption cannot be started 
         */
        public static final int crypt_keeper_low_charge_text=0x7f0801b3;
        /**  Title of the preferences category for preference items to control encryption 
         */
        public static final int crypt_keeper_settings_title=0x7f0801ae;
        /**  Informational text on the progress screen while encrypting the device 
         */
        public static final int crypt_keeper_setup_description=0x7f0801ba;
        public static final int crypt_keeper_setup_time_remaining=0x7f0801bb;
        /**  Title of the progress screen while encrypting the device 
         */
        public static final int crypt_keeper_setup_title=0x7f0801b9;
        /**  Image button description to switch input method 
         */
        public static final int crypt_keeper_switch_input_method=0x7f0801c3;
        /**  Warning string that will be displayed when encryption cannot be started 
         */
        public static final int crypt_keeper_unplugged_text=0x7f0801b4;
        /**  Warn user their device will be wiped if they make x more failed attempts 
         */
        public static final int crypt_keeper_warn_wipe=0x7f0801bd;
        /**  Button at the bottom of the CryptKeeper screen to make an emergency call. 
         */
        public static final int cryptkeeper_emergency_call=0x7f0808a6;
        /**  Button at the bottom of the CryptKeeper screen that lets the user return to a call 
         */
        public static final int cryptkeeper_return_to_call=0x7f0808a7;
        /**  Message shown when user enters wrong password 
         */
        public static final int cryptkeeper_wrong_password=0x7f08080f;
        /**  Message shown when user enters wrong pattern 
         */
        public static final int cryptkeeper_wrong_pattern=0x7f08080e;
        /**  Message shown when user enters wrong PIN 
         */
        public static final int cryptkeeper_wrong_pin=0x7f080810;
        /**  Prompt for the user to enter their current full-backup password 
         */
        public static final int current_backup_pw_prompt=0x7f0808d9;
        /**  Title for the option to press to choose the current keyboard, also known as input method [CHAR LIMIT=35] 
         */
        public static final int current_input_method=0x7f0805da;
        /**  Summary specifying that this is the current screen lock setting [CHAR LIMIT=45] 
         */
        public static final int current_screen_lock=0x7f0801d4;
        /**  Label for deuteranomaly (red-green color blindness) [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_deuteranomaly=0x7f08064f;
        /**  Label for disabling color space adjustment [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_disabled=0x7f08064d;
        /**  Label for converting display colors to grayscale, which simulates monochromacy (complete color blindness). [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_monochromacy=0x7f08064e;
        /**  Label for protanomaly (red-green color blindness) [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_protanomaly=0x7f080650;
        /**  Label for tritanomaly (blue-yellow color blindness) [CHAR LIMIT=45] 
         */
        public static final int daltonizer_mode_tritanomaly=0x7f080651;
        /**  Title for the preference to configure the type of color space correction to apply. [CHAR LIMIT=NONE] 
         */
        public static final int daltonizer_type=0x7f08064b;
        /**  Summary shown for color space correction preference when its value is overridden by another preference [CHAR LIMIT=35] 
         */
        public static final int daltonizer_type_overridden=0x7f08064c;
        /** Dashboard strings
 Text to describe the dashboard fragment title [CHAR LIMIT=16] 
         */
        public static final int dashboard_title=0x7f0809af;
        /**  Manage applications, individual application info screen, label under Storage heading.  The amount of sapce taken up by the app's data (for example, downloaded emails or something like that) 
         */
        public static final int data_size_label=0x7f080521;
        /**  Summary for data usage preference [CHAR LIMIT=15] 
         */
        public static final int data_summary_format=0x7f080a8c;
        /**  Message for switching data SIM; switching takes a while 
         */
        public static final int data_switch_started=0x7f080991;
        public static final int data_switch_warning_text=0x7f080a7f;
        public static final int data_switch_warning_title=0x7f080a7e;
        /**  Message about carrier data accounting.  [CHAR LIMIT=100] 
         */
        public static final int data_usage_accounting=0x7f080856;
        /**  Title for app usage. [CHAR LIMIT=40] 
         */
        public static final int data_usage_app=0x7f080857;
        /**  Title for app usage. [CHAR LIMIT=40] 
         */
        public static final int data_usage_app_info_label=0x7f080858;
        /**  Title for application data usage separator in data usage list. [CHAR LIMIT=25] 
         */
        public static final int data_usage_app_items_header_text=0x7f08085c;
        /**  Checkbox label that restricts background data usage of a specific application. [CHAR LIMIT=40] 
         */
        public static final int data_usage_app_restrict_background=0x7f080885;
        /**  Summary message for checkbox that restricts background data usage of a specific application. [CHAR LIMIT=64] 
         */
        public static final int data_usage_app_restrict_background_summary=0x7f080886;
        /**  Summary message for checkbox that restricts background data usage of a specific application when no networks have been limited. [CHAR LIMIT=84] 
         */
        public static final int data_usage_app_restrict_background_summary_disabled=0x7f080887;
        /**  Body of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_app_restrict_dialog=0x7f080889;
        /**  Title of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=48] 
         */
        public static final int data_usage_app_restrict_dialog_title=0x7f080888;
        /**  Label for application which has its data usage restricted. [CHAR LIMIT=16] 
         */
        public static final int data_usage_app_restricted=0x7f080872;
        /**  Button title for launching application-specific data usage settings. [CHAR LIMIT=32] 
         */
        public static final int data_usage_app_settings=0x7f080884;
        /**  Activity title for Appk data usage summary. [CHAR LIMIT=25] 
         */
        public static final int data_usage_app_summary_title=0x7f080855;
        /**   Body of dialog shown when user disables global auto sync [CHAR LIMIT=none] 
         */
        public static final int data_usage_auto_sync_off_dialog=0x7f08088e;
        /**   Title of dialog shown when user disables global auto sync [CHAR LIMIT=32] 
         */
        public static final int data_usage_auto_sync_off_dialog_title=0x7f08088d;
        /**   Body of dialog shown when user enables global auto sync [CHAR LIMIT=none] 
         */
        public static final int data_usage_auto_sync_on_dialog=0x7f08088c;
        /**   Title of dialog shown when user enables global auto sync [CHAR LIMIT=32] 
         */
        public static final int data_usage_auto_sync_on_dialog_title=0x7f08088b;
        /**  Data Usage Background label.  [CHAR LIMIT=40] 
         */
        public static final int data_usage_background_label=0x7f080883;
        /**  Title for cellular data usage. [CHAR LIMIT=40] 
         */
        public static final int data_usage_cellular_data=0x7f080859;
        /**  Summary String for Cellular data enable toggle. [CHAR LIMIT=33] 
         */
        public static final int data_usage_cellular_data_summary=0x7f080869;
        /**  Title for option to change data usage cycle day. [CHAR LIMIT=32] 
         */
        public static final int data_usage_change_cycle=0x7f08086d;
        /**  Title for option to pick visible time range from a list available usage periods. [CHAR LIMIT=25] 
         */
        public static final int data_usage_cycle=0x7f08085b;
        /**  Positive button title for data usage cycle editor, confirming that changes should be saved. [CHAR LIMIT=32] 
         */
        public static final int data_usage_cycle_editor_positive=0x7f080891;
        /**  Subtitle of dialog for editing data usage cycle reset date. [CHAR LIMIT=32] 
         */
        public static final int data_usage_cycle_editor_subtitle=0x7f080890;
        /**  Title of dialog for editing data usage cycle reset date. [CHAR LIMIT=48] 
         */
        public static final int data_usage_cycle_editor_title=0x7f08088f;
        /**  Title for setting data limit. [CHAR LIMIT=40] 
         */
        public static final int data_usage_data_limit=0x7f08085a;
        /**  Checkbox label that will disable 2G-3G network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_3g_limit=0x7f080876;
        /**  Checkbox label that will disable 4G network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_4g_limit=0x7f080875;
        /**  Body of dialog shown to request confirmation that mobile data will be disabled. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_disable_mobile=0x7f080873;
        /**  Checkbox label that will disable mobile network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_mobile_limit=0x7f080874;
        /**  Checkbox label that will disable Wi-Fi network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_wifi_limit=0x7f080877;
        /**  Disclaimer string for data usage measured by device. [CHAR LIMIT=80] 
         */
        public static final int data_usage_disclaimer=0x7f0808a5;
        /**  Label shown when no applications used data during selected time period. [CHAR LIMIT=48] 
         */
        public static final int data_usage_empty=0x7f08086f;
        /**  Toggle switch title for enabling 2G and 3G data network connections. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_3g=0x7f080880;
        /**  Toggle switch title for enabling 4G data network connection. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_4g=0x7f080881;
        /**  Toggle switch title for enabling all mobile data network connections. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_mobile=0x7f08087f;
        /**  Data Usage Foreground label.  [CHAR LIMIT=40] 
         */
        public static final int data_usage_forground_label=0x7f080882;
        /**  Label for data usage occuring while application in background. [CHAR LIMIT=48] 
         */
        public static final int data_usage_label_background=0x7f080871;
        /**  Label for data usage occuring while application in foreground. [CHAR LIMIT=48] 
         */
        public static final int data_usage_label_foreground=0x7f080870;
        /**  Body of dialog shown before user limits mobile data usage. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_limit_dialog_mobile=0x7f080895;
        /**  Title of dialog shown before user limits data usage. [CHAR LIMIT=48] 
         */
        public static final int data_usage_limit_dialog_title=0x7f080894;
        /**  Title of dialog for editing data usage limit in bytes. [CHAR LIMIT=48] 
         */
        public static final int data_usage_limit_editor_title=0x7f080893;
        /**  Title shown when current operation applies to mobile networks. [CHAR LIMIT=20] 
         */
        public static final int data_usage_list_mobile=0x7f08087d;
        /**  Title shown when current operation applies to no networks. [CHAR LIMIT=20] 
         */
        public static final int data_usage_list_none=0x7f08087e;
        /**  Title for menu option to allow background data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_allow_background=0x7f08085f;
        /**  Title for menu option to enable global auto-sync of account data 
         */
        public static final int data_usage_menu_auto_sync=0x7f080866;
        /**  Title for menu option to show details for all cellular networks. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_cellular_networks=0x7f080868;
        /**  Title for menu option to hide Ethernet data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_hide_ethernet=0x7f080864;
        /**  Title for menu option to hide Wi-Fi data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_hide_wifi=0x7f080862;
        /**  Title for menu option to configure metered networks. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_metered=0x7f080865;
        /**  Title for menu option to restrict background data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_restrict_background=0x7f08085e;
        /**  Title for menu option to enable mobile data when roaming. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_roaming=0x7f08085d;
        /**  Title for menu option to show Ethernet data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_show_ethernet=0x7f080863;
        /**  Title for menu option to show Wi-Fi data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_show_wifi=0x7f080861;
        /**  Title for menu option to show details for all SIM cards. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_sim_cards=0x7f080867;
        /**  Title for menu option to show 4G mobile data usage separate from other mobile data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_split_4g=0x7f080860;
        /**  Dialog body for selecting paid networks. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_metered_body=0x7f0808a1;
        /**  Header for list of mobile networks. [CHAR LIMIT=32] 
         */
        public static final int data_usage_metered_mobile=0x7f0808a2;
        /**  Dialog title for selecting metered networks. [CHAR LIMIT=25] 
         */
        public static final int data_usage_metered_title=0x7f0808a0;
        /**  Header for list of Wi-Fi networks. [CHAR LIMIT=32] 
         */
        public static final int data_usage_metered_wifi=0x7f0808a3;
        /**  Body text prompting user to enable Wi-Fi to configure metered networks. [CHAR LIMIT=64] 
         */
        public static final int data_usage_metered_wifi_disabled=0x7f0808a4;
        /**  Body of dialog prompting user to change numerical day of month that data usage cycle should reset. [CHAR LIMIT=64] 
         */
        public static final int data_usage_pick_cycle_day=0x7f08086e;
        /**  Combination of total network bytes sent and received by an application. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_received_sent=0x7f08089d;
        /**  Body of dialog shown before user restricts background data usage. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_background=0x7f080897;
        /**  Body of dialog shown before user restricts background data usage. This is for multiuser phones. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_background_multiuser=0x7f080898;
        /**  Title of dialog shown before user restricts background data usage. [CHAR LIMIT=48] 
         */
        public static final int data_usage_restrict_background_title=0x7f080896;
        /**  Body of dialog shown when user attempts to restrict background data before a network data limit has been set. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_denied_dialog=0x7f08088a;
        /**  Activity title for network data usage summary. [CHAR LIMIT=25] 
         */
        public static final int data_usage_summary_title=0x7f080854;
        /**  Label displaying current network data usage limit threshold. [CHAR LIMIT=18] 
         */
        public static final int data_usage_sweep_limit=0x7f08089a;
        /**  Label displaying current network data usage warning threshold. [CHAR LIMIT=18] 
         */
        public static final int data_usage_sweep_warning=0x7f080899;
        /**  Tab title for showing 2G and 3G data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_3g=0x7f08087c;
        /**  Tab title for showing 4G data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_4g=0x7f08087b;
        /**  Tab title for showing Ethernet data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_ethernet=0x7f080879;
        /**  Tab title for showing combined mobile data usage. [CHAR LIMIT=20] 
         */
        public static final int data_usage_tab_mobile=0x7f08087a;
        /**  Tab title for showing Wi-Fi data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_wifi=0x7f080878;
        /**  Label displaying total network data transferred during a specific time period. [CHAR LIMIT=64] 
         */
        public static final int data_usage_total_during_range=0x7f08089e;
        /**  Label displaying total network data transferred during a specific time period, including a disclaimer that contrasts device versus carrier reporting. [CHAR LIMIT=80] 
         */
        public static final int data_usage_total_during_range_mobile=0x7f08089f;
        /**  Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48] 
         */
        public static final int data_usage_uninstalled_apps=0x7f08089b;
        /**  Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48] 
         */
        public static final int data_usage_uninstalled_apps_users=0x7f08089c;
        /**  Title of dialog for editing data usage warning in bytes. [CHAR LIMIT=48] 
         */
        public static final int data_usage_warning_editor_title=0x7f080892;
        /**  Date & time settings screen title 
         */
        public static final int date_and_time=0x7f0800df;
        /**  Main Settings screen setting option summary text for the item to go into the date and time settings. 
         */
        public static final int date_and_time_settings_summary=0x7f080155;
        /**  Main Settings screen setting option name to go into the date and time settings
         */
        public static final int date_and_time_settings_title=0x7f080153;
        /**  Title for Date & Time settings screen in SetupWizard [CHAR LIMIT=40] 
         */
        public static final int date_and_time_settings_title_setup_wizard=0x7f080154;
        /**  Title string shown above DatePicker, letting a user select system date
         [CHAR LIMIT=20] 
         */
        public static final int date_picker_title=0x7f080166;
        /**  Date & time setting screen setting check box title 
         */
        public static final int date_time_24hour=0x7f08015d;
        /**  Date & time setting screen setting check box title [CHAR LIMIT=30] 
         */
        public static final int date_time_24hour_title=0x7f08015c;
        /**  Date & time setting screen setting check box title if the date and time should be determined automatically [CHAR LIMIT=30] 
         */
        public static final int date_time_auto=0x7f080156;
        /**  Date & time setting screen setting option summary text when Automatic check box is clear
        [CHAR LIMIT=100] 
         */
        public static final int date_time_auto_summaryOff=0x7f080158;
        /**  Date & time setting screen setting option summary text when Automatic check box is selected
        (that is, when date and time should be determined automatically) [CHAR LIMIT=100] 
         */
        public static final int date_time_auto_summaryOn=0x7f080157;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_date=0x7f080163;
        /**  Date & time setting screen setting option title [CHAR LIMIT=30] 
         */
        public static final int date_time_set_date_title=0x7f080162;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_time=0x7f08015f;
        /**  Date & time setting screen setting option title [CHAR LIMIT=30] 
         */
        public static final int date_time_set_time_title=0x7f08015e;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_timezone=0x7f080161;
        /**  Date & time setting screen setting option title [CHAR LIMIT=30] 
         */
        public static final int date_time_set_timezone_title=0x7f080160;
        /**  UI debug setting: select current app to debug [CHAR LIMIT=50] 
         */
        public static final int debug_app=0x7f08081b;
        /**  UI debug setting: no debug app has been set [CHAR LIMIT=50] 
         */
        public static final int debug_app_not_set=0x7f08081c;
        /**  UI debug setting: debug app has been set [CHAR LIMIT=50] 
         */
        public static final int debug_app_set=0x7f08081d;
        /**  Preference category for application debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_applications_category=0x7f08084e;
        /**  Preference category for app debugging development settings. [CHAR LIMIT=50] 
         */
        public static final int debug_debugging_category=0x7f08081a;
        /**  Preference category for drawing debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_drawing_category=0x7f080823;
        /**  Preference category for hardware accelerated drawing debugging development settings. [CHAR LIMIT=50] 
         */
        public static final int debug_hw_drawing_category=0x7f080824;
        /**  UI debug setting: show the amount of overdraw in apps using the GPU [CHAR LIMIT=25] 
         */
        public static final int debug_hw_overdraw=0x7f080833;
        /**  Preference category for input debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_input_category=0x7f080822;
        /**  Do not translate. 
         */
        public static final int debug_intent_sender_label=0x7f080132;
        /**  UI debug setting: show layout bounds information [CHAR LIMIT=25] 
         */
        public static final int debug_layout=0x7f08083a;
        /**  UI debug setting: show layout bounds information summary [CHAR LIMIT=50] 
         */
        public static final int debug_layout_summary=0x7f08083b;
        /**  Preference category for monitoring debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_monitoring_category=0x7f080826;
        /**  Title of warning dialog about the implications of enabling USB debugging 
 Preference category for networking debugging development settings. [CHAR LIMIT=50] 
         */
        public static final int debug_networking_category=0x7f080601;
        /**  Setting Checkbox title whether to enable view attribute inspection 
         */
        public static final int debug_view_attributes=0x7f080600;
        /**  Label of default app for current setting [CHAR LIMIT=40] 
         */
        public static final int default_app=0x7f080ac4;
        /**  Title for Default Apps settings [CHAR LIMIT=30] 
         */
        public static final int default_apps_title=0x7f080ab7;
        /**  Summary for No Default Assist settings [CHAR LIMIT=45] 
         */
        public static final int default_assist_none=0x7f080aba;
        /**  Title for Default Assist settings [CHAR LIMIT=30] 
         */
        public static final int default_assist_title=0x7f080ab9;
        /**  Title for Default Browser settings [CHAR LIMIT=30] 
         */
        public static final int default_browser_title=0x7f080ac1;
        /**  Summary for No Default Browser settings [CHAR LIMIT=45] 
         */
        public static final int default_browser_title_none=0x7f080ac2;
        /**  [CHAR LIMIT=NONE] Advanced applications screen, preference title.  Choose the emergency application. 
         */
        public static final int default_emergency_app=0x7f080536;
        /**   Title for Default Phone app settings [CHAR LIMIT=30] 
         */
        public static final int default_phone_title=0x7f080ac3;
        /**  Option title for the default sound, context based on screen 
         */
        public static final int default_sound=0x7f0809e2;
        /**  the following are for Settings Storage screen 
 Menu item/button 'delete' 
         */
        public static final int delete=0x7f080813;
        /**  Strings for Dialog deny button 
         */
        public static final int deny=0x7f080069;
        /**  Subtitle for application/subsystem details 
         */
        public static final int details_subtitle=0x7f0806bd;
        /**  Activity title for battery usage details for an app. or power consumer 
         */
        public static final int details_title=0x7f0806bc;
        /**  Warning text to user about the implications of enabling USB debugging 
         */
        public static final int dev_settings_warning_message=0x7f080617;
        /**  Title of warning dialog about the implications of enabling developer settings 
         */
        public static final int dev_settings_warning_title=0x7f080616;
        /**  Setting checkbox title for Whether to enable USB debugging support on the phone. 
 Error message for users that aren't allowed to modify developer options [CHAR LIMIT=none] 
         */
        public static final int development_settings_not_available=0x7f0805eb;
        /**  Development Settings summary.  The summary of the item to take the user to Development settings.  Development settings are settings meant for application developers. 
         */
        public static final int development_settings_summary=0x7f0805ea;
        /**  Development Settings.  the title for the item to take the user to Development settings.  Development settings are settings meant for application developers.  
         */
        public static final int development_settings_title=0x7f0805e9;
        /**  Device admin add activity title 
         */
        public static final int device_admin_add_title=0x7f0807b6;
        /**  Device admin settings activity title 
         */
        public static final int device_admin_settings_title=0x7f0807ab;
        /**  Device admin warning message about policies an admin can use 
         */
        public static final int device_admin_status=0x7f0807b8;
        /**  In the security screen, the header title for settings related to device admins 
         */
        public static final int device_admin_title=0x7f0801fd;
        /**  Device admin warning message about policies an admin can use 
         */
        public static final int device_admin_warning=0x7f0807b7;
        /**  [CHAR LIMIT=35] Feedback on the device 
         */
        public static final int device_feedback=0x7f080a55;
        /**  Device Info screen. Used for a status item's value when the proper value is not known 
         */
        public static final int device_info_default=0x7f08006c;
        /**  The title of the activity to see random device info. 
         */
        public static final int device_info_label=0x7f080133;
        /**  About phone screen, show when a value of some status item is unavailable. 
         */
        public static final int device_info_not_available=0x7f0803a9;
        /**  Advanced (used for diagnostics) device info activity title [CHAR LIMIT=40] 
         */
        public static final int device_info_settings=0x7f08039e;
        /**  Strings for BluetoothDevicePicker [CHAR LIMIT=40]
         */
        public static final int device_picker=0x7f0800c7;
        /**  Master Clear 
 SD card & phone storage settings screen, setting option name under Internal phone storage heading [CHAR LIMIT=30] 
         */
        public static final int device_reset_title=0x7f08046a;
        /**  About phone screen, title of the item to go into the Phone status screen 
         */
        public static final int device_status=0x7f0803ab;
        /**  About phone screen, phone status screen title 
         */
        public static final int device_status_activity_title=0x7f0803aa;
        /**  About phone screen, summary of the item to go into the phone status screen 
         */
        public static final int device_status_summary=0x7f0803ac;
        /**  Sound & notification > Other sounds: Title for the option enabling touch sounds for dial pad tones. [CHAR LIMIT=30] 
         */
        public static final int dial_pad_tones_title=0x7f0809fd;
        /**  [CHAR LIMIT=40] Sound & display settings screen, title of dialog for picking font size 
         */
        public static final int dialog_title_font_size=0x7f080380;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager disableNetwork API
         */
        public static final int disableNetwork=0x7f08030a;
        /**  UI debug setting: disable use of overlays? [CHAR LIMIT=25] 
         */
        public static final int disable_overlays=0x7f080834;
        /**  UI debug setting: disable use of overlays summary [CHAR LIMIT=50] 
         */
        public static final int disable_overlays_summary=0x7f080835;
        /**  Message for a warning about disabling accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int disable_service_message=0x7f080680;
        /**  Title for a warning about disabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int disable_service_title=0x7f08067f;
        /**  [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to disable an existing application. 
         */
        public static final int disable_text=0x7f080526;
        /**  [CHAR LIMIT=25] Manage applications, text telling using an application is disabled. 
         */
        public static final int disabled=0x7f080543;
        /**  Summary shown when trust agent settings is disabled because the user hasn't set up primary security 
         */
        public static final int disabled_because_no_backup_security=0x7f080201;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager disconnect API
         */
        public static final int disconnect=0x7f08030c;
        /**  [CHAR LIMIT=70] Rotate when screen is turned option 
         */
        public static final int display_auto_rotate_rotate=0x7f080a65;
        /**  [CHAR LIMIT=70] Don't rotate when screen is turned option 
         */
        public static final int display_auto_rotate_stay_in_current=0x7f080a68;
        /**  [CHAR LIMIT=70] Keep the screen in landscape when rotated 
         */
        public static final int display_auto_rotate_stay_in_landscape=0x7f080a67;
        /**  [CHAR LIMIT=70] Keep the screen in portrait when rotated 
         */
        public static final int display_auto_rotate_stay_in_portrait=0x7f080a66;
        /**  [CHAR LIMIT=45] Auto-rotate setting title 
         */
        public static final int display_auto_rotate_title=0x7f080a64;
        /**  Label for chosen font size 
         */
        public static final int display_font_size_label=0x7f0800e2;
        /**  The title of the activity to adjust display settings 
         */
        public static final int display_label=0x7f080134;
        /**  label for text to indicate sort options 
         */
        public static final int display_order_text=0x7f08062e;
        /**  Label of preview text when tweaking font size 
         */
        public static final int display_preview_label=0x7f0800e1;
        /**  Sound & display settings screen, section header for settings related to display 
         */
        public static final int display_settings=0x7f08035d;
        public static final int display_settings_title=0x7f08032a;
        /**  Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". 
         */
        public static final int dlg_cancel=0x7f08054d;
        /**  Strings for Dialog close button [CHAR LIMIT=20] 
         */
        public static final int dlg_close=0x7f08006a;
        /**  SD card eject confirmation dialog  
         */
        public static final int dlg_confirm_unmount_text=0x7f0803de;
        /**  SD card eject confirmation dialog title   
         */
        public static final int dlg_confirm_unmount_title=0x7f0803dd;
        /**  SD card eject error dialog text   
         */
        public static final int dlg_error_unmount_text=0x7f0803e0;
        /**  SD card eject error dialog title   
         */
        public static final int dlg_error_unmount_title=0x7f0803df;
        /**  Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". Goes through with the clearing of the data. 
         */
        public static final int dlg_ok=0x7f08054c;
        /**  Strings for Dialog switch button [CHAR LIMIT=20] 
         */
        public static final int dlg_switch=0x7f08006b;
        /**  Sound & notification > Other sounds: Value for the dock audio media with value 0: disabled. [CHAR LIMIT=30] 
         */
        public static final int dock_audio_media_disabled=0x7f080a04;
        /**  Sound & notification > Other sounds: Value for the dock audio media with value 1: enabled. [CHAR LIMIT=30] 
         */
        public static final int dock_audio_media_enabled=0x7f080a05;
        /**  Sound & notification > Other sounds: Title for the option enabling dock audio media. [CHAR LIMIT=50] 
         */
        public static final int dock_audio_media_title=0x7f080a03;
        /**  Dock audio settings 
         */
        public static final int dock_audio_settings_title=0x7f08034a;
        /**  Dock audio summary for docked to car dock 
         */
        public static final int dock_audio_summary_car=0x7f08034c;
        /**  Dock audio summary for docked to desk dock 
         */
        public static final int dock_audio_summary_desk=0x7f08034b;
        /**  Dock audio summary for undocked 
         */
        public static final int dock_audio_summary_none=0x7f08034d;
        /**  Dock audio summary for docked to unknown 
         */
        public static final int dock_audio_summary_unknown=0x7f08034e;
        /**  Dock not found dialog text 
         */
        public static final int dock_not_found_text=0x7f080350;
        /**  Dock not found dialog title 
         */
        public static final int dock_not_found_title=0x7f08034f;
        /**  Dock settings title, top level 
         */
        public static final int dock_settings=0x7f080348;
        /**  Sound settings screen, dock settings summary
         */
        public static final int dock_settings_summary=0x7f08033a;
        /**  Dock settings title 
         */
        public static final int dock_settings_title=0x7f080349;
        /**  Sound settings screen, setting option summary text when check box is clear 
         */
        public static final int dock_sounds_enable_summary_off=0x7f080353;
        /**  Dock settings screen, setting option summary text when check box is selected 
         */
        public static final int dock_sounds_enable_summary_on=0x7f080352;
        /**  Dock settings screen, dock events SFX setting check box label 
         */
        public static final int dock_sounds_enable_title=0x7f080351;
        /**  Sound & notification > Other sounds: Title for the option enabling docking sounds. [CHAR LIMIT=30] 
         */
        public static final int docking_sounds_title=0x7f080a00;
        public static final int does_not_exist=0x7f080566;
        /**  Summary for an App that dont open any domain URLs [CHAR LIMIT=45] 
         */
        public static final int domain_urls_summary_none=0x7f080ab0;
        /**  Summary of number of App that can open one and only one domain URLs [CHAR LIMIT=45] 
         */
        public static final int domain_urls_summary_one=0x7f080ab1;
        /**  Summary of number of App that can open several domain URLs [CHAR LIMIT=45] 
         */
        public static final int domain_urls_summary_some=0x7f080ab2;
        /**  Label for the Domain URLs list that shows domain urls per App [CHAR LIMIT=30] 
         */
        public static final int domain_urls_title=0x7f080aaf;
        /**  Button label for generic done action [CHAR LIMIT=20] 
         */
        public static final int done=0x7f08013c;
        /**  Button to close the SSL CA cert warning dialog box, meaning the user is done reading.  [CHAR LIMIT=NONE] 
         */
        public static final int done_button=0x7f0808e3;
        /**  [CHAR LIMIT=NONE] Display settings screen, setting description for the ambient display feature. 
         */
        public static final int doze_summary=0x7f08037d;
        /**  [CHAR LIMIT=30] Display settings screen, setting option name to change whether the ambient display feature is enabled. 
         */
        public static final int doze_title=0x7f08037c;
        /**  Title of draw overlay screen [CHAR LIMIT=30] 
         */
        public static final int draw_overlay=0x7f080b12;
        /**  System Alert Window settings 
 Title of Draw Overlay preference item [CHAR LIMIT=55] 
         */
        public static final int draw_overlay_title=0x7f080b11;
        /**  Sound settings screen, setting check box label 
         */
        public static final int dtmf_tone_enable_title=0x7f08033b;
        /**  Sound & notification > Other sounds: Value for the emergency tone option with value 1: alert. [CHAR LIMIT=30] 
         */
        public static final int emergency_tone_alert=0x7f080a07;
        /**  Sound & notification > Other sounds: Value for the emergency tone option with value 0: silent. [CHAR LIMIT=30] 
         */
        public static final int emergency_tone_silent=0x7f080a06;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int emergency_tone_summary=0x7f080794;
        /**  Sound settings screen, setting check box label 
         */
        public static final int emergency_tone_title=0x7f080793;
        /**  Sound & notification > Other sounds: Value for the emergency tone option with value 2: vibrate. [CHAR LIMIT=30] 
         */
        public static final int emergency_tone_vibrate=0x7f080a08;
        /**  String displayed when list is empty 
         */
        public static final int empty_list_msg=0x7f08055f;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager enableNetwork API
         */
        public static final int enableNetwork=0x7f08030b;
        public static final int enable_adb=0x7f0805ef;
        /**  Setting checkbox summary for Whether to enable USB debugging support on the phone 
         */
        public static final int enable_adb_summary=0x7f0805f0;
        /**  Manage applications, individual application screen, checkbox to control compatibility mode.  
         */
        public static final int enable_compatibility=0x7f080530;
        /**  UI debug setting: enable/disable debug multi-window ui [CHAR LIMIT=25] 
         */
        public static final int enable_multi_window=0x7f08084a;
        /**  setting Checkbox summary whether to enable debug multi-window ui [CHAR_LIMIT=50] 
         */
        public static final int enable_multi_window_summary=0x7f08084b;
        /**  UI debug setting: enable various types of OpenGL traces [CHAR LIMIT=25] 
         */
        public static final int enable_opengl_traces_title=0x7f080837;
        /**  Title for the preference to show a tile for a particular feature in the Quick Settings pane. [CHAR LIMIT=NONE] 
         */
        public static final int enable_quick_setting=0x7f08064a;
        /**  Warning that the device data will not be encrypted with password or PIN if
        enabling an accessibility service and there is a secure lock setup. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_encryption_warning=0x7f080678;
        /**  Message to the user to enter his password before enabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_password_reason=0x7f08067c;
        /**  Message to the user to enter his pattern before enabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_pattern_reason=0x7f08067a;
        /**  Message to the user to enter his PIN before enabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_pin_reason=0x7f08067b;
        /**  Title for a warning about security implications of enabling an accessibility
         service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_title=0x7f080675;
        /**  Summary of checkbox setting that enables the terminal app. [CHAR LIMIT=64] 
         */
        public static final int enable_terminal_summary=0x7f08061f;
        /**  Title of checkbox setting that enables the terminal app. [CHAR LIMIT=32] 
         */
        public static final int enable_terminal_title=0x7f08061e;
        /**  [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to re-enable an existing application. 
         */
        public static final int enable_text=0x7f080527;
        /**  Radio button text that doesn't require a password to decrypt [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_dont_require_password=0x7f080a77;
        /**  Radio button text that doesn't require a pattern to decrypt [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_dont_require_pattern=0x7f080a76;
        /**  Radio button text that doesn't require a PIN to decrypt [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_dont_require_pin=0x7f080a75;
        /**  Radio button text that require a password to start device [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_require_password=0x7f080a74;
        /**  Radio button text that require a pattern to start device [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_require_pattern=0x7f080a73;
        /**  Radio button text that require a PIN to start device [CHAR LIMIT=NONE] 
         */
        public static final int encrypt_require_pin=0x7f080a72;
        /**  Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled. 
         */
        public static final int encrypt_talkback_dialog_message_password=0x7f080a7d;
        /**  Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled. 
         */
        public static final int encrypt_talkback_dialog_message_pattern=0x7f080a7c;
        /**  Message for encryption dialog telling the user that Talkback and other accessibility services will be disabled. 
         */
        public static final int encrypt_talkback_dialog_message_pin=0x7f080a7b;
        /**  Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25] 
         */
        public static final int encrypt_talkback_dialog_require_password=0x7f080a7a;
        /**  Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25] 
         */
        public static final int encrypt_talkback_dialog_require_pattern=0x7f080a79;
        /**  Title for encryption dialog that disables TalkBack. [CHAR_LIMIT=25] 
         */
        public static final int encrypt_talkback_dialog_require_pin=0x7f080a78;
        /**  Encryption interstitial button to continue with the shown setting.  Appears on screen that asks the user to opt in/out of encrypting device with a pin/pattern/password. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_continue_button=0x7f080a6b;
        /**  Encryption interstitial title. This screen asks the user whether the device will ask for a PIN / pattern / password before the device starts up. [CHAR LIMIT=30] 
         */
        public static final int encryption_interstitial_header=0x7f080a6a;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_password=0x7f080a6e;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a password to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_password_for_fingerprint=0x7f080a71;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_pattern=0x7f080a6d;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a pattern to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_pattern_for_fingerprint=0x7f080a70;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_pin=0x7f080a6c;
        /**  Message shown on encryption interstitial to ask the user whether or not they want to use a PIN to encrypt the device while setting up fingerprint unlock. [CHAR LIMIT=NONE] 
         */
        public static final int encryption_interstitial_message_pin_for_fingerprint=0x7f080a6f;
        /**  Message of dialog confirming that user wants to protect external storage. [CHAR LIMIT=NONE] 
         */
        public static final int enforce_read_external_confirm_message=0x7f08061d;
        /**  Title of dialog confirming that user wants to protect external storage. [CHAR LIMIT=32] 
         */
        public static final int enforce_read_external_confirm_title=0x7f08061c;
        /**  Summary of checkbox setting that protects external storage. [CHAR LIMIT=64] 
         */
        public static final int enforce_read_external_summary=0x7f08061b;
        /**  Title of checkbox setting that protects external storage. [CHAR LIMIT=32] 
         */
        public static final int enforce_read_external_title=0x7f08061a;
        /**  Enhaced 4G LTE Mode summary.  [CHAR LIMIT=100] 
         */
        public static final int enhanced_4g_lte_mode_summary=0x7f08096e;
        /**  Enhaced 4G LTE Mode title.  [CHAR LIMIT=50] 
         */
        public static final int enhanced_4g_lte_mode_title=0x7f08096d;
        /**  This is displayed to the user when the device needs to be decrypted 
         */
        public static final int enter_password=0x7f08080b;
        /**  Informational text on the pattern entry screen prompting the user for their pattern 
         */
        public static final int enter_pattern=0x7f08080d;
        /**  Informational text on the pin entry screen prompting the user for their pin 
         */
        public static final int enter_pin=0x7f08080c;
        /**  SD card & phone storage settings screen, label for check box to erase SD card [CHAR LIMIT=30] 
         */
        public static final int erase_external_storage=0x7f080471;
        /**  SD card & phone storage settings screen, description for check box to erase USB storage [CHAR LIMIT=NONE] 
         */
        public static final int erase_external_storage_description=0x7f080472;
        /**  APN error dialog messages: 
         */
        public static final int error_apn_empty=0x7f08045c;
        /**  APN error dialog messages: 
         */
        public static final int error_mcc_not3=0x7f08045d;
        /**  APN error dialog messages: 
         */
        public static final int error_mnc_not23=0x7f08045e;
        /**  APN error dialog messages: 
         */
        public static final int error_name_empty=0x7f08045b;
        /**  APN error dialog title 
         */
        public static final int error_title=0x7f08045a;
        /**  Summary Title for saying that the preference is experimental and will evolve over time due to User feedback. [CHAR LIMIT=NONE] 
         */
        public static final int experimental_preference=0x7f080a63;
        /**   Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's code on USB storage [CHARSIZE=40] 
         */
        public static final int external_code_size_label=0x7f080520;
        /**   Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's data on the SD card [CHARSIZE=40] 
         */
        public static final int external_data_size_label=0x7f080522;
        /**  Extreme threats summary.  [CHAR LIMIT=62] 
         */
        public static final int extreme_threats_summary=0x7f080960;
        /**  Extreme threats title.  [CHAR LIMIT=30] 
         */
        public static final int extreme_threats_title=0x7f08095f;
        /**  Toast that settings for an application is failed to open. 
         */
        public static final int failed_to_open_app_settings_toast=0x7f0805b7;
        /**  About phone screen, fcc equipment id label  [CHAR LIMIT=40] 
         */
        public static final int fcc_equipment_id=0x7f0803a4;
        /**  Text for menu option in ManageApps screen to present various menu options 
         */
        public static final int filter=0x7f08053c;
        /**  Label for showing all apps in list [CHAR LIMIT=30] 
         */
        public static final int filter_all_apps=0x7f080a9c;
        /**  Text for filter option in ManageApps screen to display all installed
    applications 
         */
        public static final int filter_apps_all=0x7f08053e;
        /**  [CHAR LIMIT=NONE] Text for filter option in ManageApps screen to display disabled apps 
         */
        public static final int filter_apps_disabled=0x7f08053f;
        /**  Text for filter option in ManageApps screen to display list of
    packages installed on sdcard. 
         */
        public static final int filter_apps_onsdcard=0x7f080542;
        /**  Text for filter option in ManageApps screen to display list of running
    packages only. 
         */
        public static final int filter_apps_running=0x7f080541;
        /**  Text for filter option in ManageApps screen to display third party
    applications only 
         */
        public static final int filter_apps_third_party=0x7f080540;
        /**  Title of dialog for presenting filter options 
         */
        public static final int filter_dlg_title=0x7f08053d;
        /**  Label for showing enabled apps in list [CHAR LIMIT=30] 
         */
        public static final int filter_enabled_apps=0x7f080a9d;
        /**  Label for showing apps with blocked notifications in list [CHAR LIMIT=30] 
         */
        public static final int filter_notif_blocked_apps=0x7f080aa0;
        /**  Label for showing apps with peeking disabled in list [CHAR LIMIT=30] 
         */
        public static final int filter_notif_no_peeking=0x7f080aa3;
        /**  Label for showing apps with priority notifications in list [CHAR LIMIT=30] 
         */
        public static final int filter_notif_priority_apps=0x7f080aa1;
        /**  Label for showing apps with sensitive notifications in list [CHAR LIMIT=30] 
         */
        public static final int filter_notif_sensitive_apps=0x7f080aa2;
        /**  Label for showing apps that can draw overlays [CHAR LIMIT=45] 
         */
        public static final int filter_overlay_apps=0x7f080b1c;
        /**  Label for showing personal apps in list [CHAR LIMIT=30] 
         */
        public static final int filter_personal_apps=0x7f080a9e;
        /**  Label for showing apps with domain URLs (data URI with http or https) in list [CHAR LIMIT=30] 
         */
        public static final int filter_with_domain_urls_apps=0x7f080aa4;
        /**  Label for showing work apps in list [CHAR LIMIT=30] 
         */
        public static final int filter_work_apps=0x7f080a9f;
        /**  Label for showing apps that can write system settings [CHAR LIMIT=45] 
         */
        public static final int filter_write_settings_apps=0x7f080b22;
        /**  Text shown when "Add fingerprint" button is disabled 
         */
        public static final int fingerprint_add_max=0x7f0801a9;
        /**  Preference to add another fingerprint 
         */
        public static final int fingerprint_add_title=0x7f080180;
        /**  switch for allowing fingerprint to be used for keyguard 
         */
        public static final int fingerprint_enable_keyguard_toggle_title=0x7f080181;
        /**  Button text shown at the end of enrollment that allows the user to add another fingerprint 
         */
        public static final int fingerprint_enroll_button_add=0x7f0801a4;
        /**  Button text shown at the end of enrollment that allows the user to move to the next step 
         */
        public static final int fingerprint_enroll_button_next=0x7f0801a5;
        /**  Button to confirm the last removing the last fingerprint. [CHAR LIMIT=20]
         */
        public static final int fingerprint_last_delete_confirm=0x7f0801ac;
        /**  Message shown in a dialog which asks the user to confirm when the last fingerprint gets deleted by him. [CHAR LIMIT=NONE]
         */
        public static final int fingerprint_last_delete_message=0x7f0801ab;
        /**  Title shown in a dialog which asks the user to confirm when the last fingerprint gets deleted by him. [CHAR LIMIT=35]
         */
        public static final int fingerprint_last_delete_title=0x7f0801aa;
        /**  Fingerprint managment category title - configuration options for managing enrolled fingerprints [CHAR LIMIT=22] 
         */
        public static final int fingerprint_manage_category_title=0x7f08017e;
        /**  Fingerprint hint message when finger was not recognized.
         */
        public static final int fingerprint_not_recognized=0x7f080ab6;
        /**  Fingerprint category title - configuration options for managing fingerprint enrollment [CHAR LIMIT=22] 
         */
        public static final int fingerprint_usage_category_title=0x7f08017f;
        /**  Button shown when this activity is run from SetupWizard 
         */
        public static final int finish_button_label=0x7f080801;
        /**  About phone screen, status item label  [CHAR LIMIT=40] 
         */
        public static final int firmware_version=0x7f0803a1;
        /**  Do not translate. label for font size preview.  Does not need to be translated. 
         */
        public static final int font_size_preview_text=0x7f08009c;
        /**  Button. Chosen when they want to save the chosen text size. 
         */
        public static final int font_size_save=0x7f08009d;
        /**  UI debug setting: force hardware acceleration to render apps [CHAR LIMIT=25] 
         */
        public static final int force_hw_ui=0x7f080840;
        /**  UI debug setting: force hardware acceleration summary [CHAR LIMIT=50] 
         */
        public static final int force_hw_ui_summary=0x7f080841;
        /**  UI debug setting: force anti-aliasing to render apps [CHAR LIMIT=25] 
         */
        public static final int force_msaa=0x7f080842;
        /**  UI debug setting: force anti-aliasing summary [CHAR LIMIT=50] 
         */
        public static final int force_msaa_summary=0x7f080843;
        /**  UI debug setting: force right to left layout [CHAR LIMIT=37] 
         */
        public static final int force_rtl_layout_all_locales=0x7f08083c;
        /**  UI debug setting: force right to left layout summary [CHAR LIMIT=100] 
         */
        public static final int force_rtl_layout_all_locales_summary=0x7f08083d;
        /**  Manage applications, text label for button to kill / force stop an application 
         */
        public static final int force_stop=0x7f08051d;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when killing persistent apps
         */
        public static final int force_stop_dlg_text=0x7f08056b;
        public static final int force_stop_dlg_title=0x7f08056a;
        /**  Button label for generic forget action [CHAR LIMIT=20] 
         */
        public static final int forget=0x7f08013a;
        /**  Label for free memory of device [CHAR LIMIT=25] 
         */
        public static final int free_memory=0x7f080b02;
        /**  Summary for explanation of what full app data backup means. Manufacturers may wish to overlay this resource with their own text  
         */
        public static final int fullbackup_data_summary=0x7f0807aa;
        /**  Dialog title for confirmation to erase full backup data from server 
         */
        public static final int fullbackup_erase_dialog_message=0x7f0807a9;
        /**  Spoken description for the Bluetooth power control gadget. 
         */
        public static final int gadget_bluetooth=0x7f080771;
        /**  Brightness gadget value used to describe automatic brightness state. 
         */
        public static final int gadget_brightness_state_auto=0x7f080775;
        /**  Brightness gadget value used to describe maximum brightness state. 
         */
        public static final int gadget_brightness_state_full=0x7f080776;
        /**  Brightness gadget value used to describe half brightness state. 
         */
        public static final int gadget_brightness_state_half=0x7f080777;
        /**  Brightness gadget value used to describe minimum brightness state. 
         */
        public static final int gadget_brightness_state_off=0x7f080778;
        /**  Template for brightness gadget toggle button description. 
         */
        public static final int gadget_brightness_template=0x7f080774;
        /**  Spoken description for the Location power control gadget. 
         */
        public static final int gadget_location=0x7f080772;
        /**  Title for the screen that lets the user choose a gadget to add to the home screen
         (or other screens that can host gadgets).  Note to translators: we're still determining
         the final name for Gadgets/Widgets, so please translate both for now. 
         */
        public static final int gadget_picker_title=0x7f080620;
        /**  Gadget value used to describe off state. 
         */
        public static final int gadget_state_off=0x7f08076d;
        /**  Gadget value used to describe on state. 
         */
        public static final int gadget_state_on=0x7f08076c;
        /**  Template for gadget toggle button description. Populated examples are "Wi-Fi off" or "Wi-Fi turning on". 
         */
        public static final int gadget_state_template=0x7f08076b;
        /**  Gadget value used to describe turning off state. 
         */
        public static final int gadget_state_turning_off=0x7f08076f;
        /**  Gadget value used to describe turning on state. 
         */
        public static final int gadget_state_turning_on=0x7f08076e;
        /**  Spoken description for the data synchronization gadget. 
         */
        public static final int gadget_sync=0x7f080773;
        /**  Power Control Widget 
         */
        public static final int gadget_title=0x7f080768;
        public static final int gadget_toggle_bluetooth=0x7f08076a;
        public static final int gadget_toggle_wifi=0x7f080769;
        /**  Spoken description for the Wi-Fi power control gadget. 
         */
        public static final int gadget_wifi=0x7f080770;
        /**  On Language & input settings screen, heading. Inside the "Language & input settings" screen, this is the header for settings that relate to game controller devices. [CHAR LIMIT=40] 
         */
        public static final int game_controller_settings_category=0x7f0805ba;
        public static final int gestures_wake_up_preference=0x7f080b4a;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager getConfiguredNetworks API
         */
        public static final int getConfiguredNetworks=0x7f08030d;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager getConnectionInfo API
         */
        public static final int getConnectionInfo=0x7f08030e;
        /**  Warning message when changing a global setting for a phone.[CHAR LIMIT=none] 
         */
        public static final int global_change_warning=0x7f080925;
        /**  Warning message title for global font change [CHAR LIMIT=40] 
         */
        public static final int global_font_change_title=0x7f080927;
        /**  Warning message title for global locale change [CHAR LIMIT=40] 
         */
        public static final int global_locale_change_title=0x7f080926;
        /**  Sound settings screen, setting check box label 
         */
        public static final int haptic_feedback_enable_title=0x7f08033e;
        /**  On Text & language settings screen, category for physical keyboard text entry options. 
         */
        public static final int hardkeyboard_category=0x7f0805b0;
        /**  HDCP checking dialog title, used for debug purposes only. [CHAR LIMIT=25] 
         */
        public static final int hdcp_checking_dialog_title=0x7f080819;
        /**  HDCP checking title, used for debug purposes only. [CHAR LIMIT=25] 
         */
        public static final int hdcp_checking_title=0x7f080818;
        /**  Header that appears at the top of Account Settings screen 
         */
        public static final int header_account_settings=0x7f0807fe;
        /**  Title shown in AddAccount 
         */
        public static final int header_add_an_account=0x7f080800;
        /**  Header title for those settings relating to application syncing. 
         */
        public static final int header_application_sync_settings=0x7f0807fb;
        /**  Settings main menu category heading. Personal (Accounts, security, language, backup...). [CHAR LIMIT=40] 
         */
        public static final int header_category_access=0x7f080073;
        /**  Settings main menu category heading. Wireless and networks (Wi-Fi, Bluetooth, data usage...). [CHAR LIMIT=40] 
         */
        public static final int header_category_connections=0x7f080070;
        /**  Settings main menu category heading. Device (Sound, display, battery, applications...). [CHAR LIMIT=40] 
         */
        public static final int header_category_device=0x7f080071;
        /**  Settings main menu category heading. Personal (Accounts, security, language, backup...). [CHAR LIMIT=40] 
         */
        public static final int header_category_personal=0x7f080072;
        /**  Settings main menu category heading. System (Updates, data, accessibility, about phone). [CHAR LIMIT=40] 
         */
        public static final int header_category_system=0x7f080074;
        /**  Settings main menu category heading. Wireless and networks (Wi-Fi, Bluetooth, data usage...). [CHAR LIMIT=40] 
         */
        public static final int header_category_wireless_networks=0x7f08006f;
        /**  Header for data and synchronization 
         */
        public static final int header_data_and_synchronization=0x7f0807fc;
        /**  Running service details, description for running heavy-weight process. 
         */
        public static final int heavy_weight_stop_description=0x7f08059d;
        /**  Help menu label [CHAR LIMIT=20] 
         */
        public static final int help_label=0x7f08093d;
        /**  Help URI, About phone [DO NOT TRANSLATE] 
         */
        public static final int help_uri_about=0x7f08094a;
        /**  Help URI, Accessibility [DO NOT TRANSLATE] 
         */
        public static final int help_uri_accessibility=0x7f080948;
        /**  Help URI, Apps [DO NOT TRANSLATE] 
         */
        public static final int help_uri_apps=0x7f080946;
        /**  Help URI, Android beam [DO NOT TRANSLATE] 
         */
        public static final int help_uri_beam=0x7f080940;
        /**  Help URI, Dashboard [DO NOT TRANSLATE] 
         */
        public static final int help_uri_dashboard=0x7f08093f;
        /**  Help URI, Default [DO NOT TRANSLATE] 
         */
        public static final int help_uri_default=0x7f08093e;
        /**  Help URI, Display [DO NOT TRANSLATE] 
         */
        public static final int help_uri_display=0x7f080941;
        /**  Help URI, Interruptions [DO NOT TRANSLATE] 
         */
        public static final int help_uri_interruptions=0x7f080943;
        /**  Help URI, Notifications [DO NOT TRANSLATE] 
         */
        public static final int help_uri_notifications=0x7f080945;
        /**  Help URI, Other sounds [DO NOT TRANSLATE] 
         */
        public static final int help_uri_other_sounds=0x7f080944;
        /**  Help URI, Printing [DO NOT TRANSLATE] 
         */
        public static final int help_uri_printing=0x7f080949;
        /**  Help URI, Storage [DO NOT TRANSLATE] 
         */
        public static final int help_uri_storage=0x7f080947;
        /**  Help URI, Wallpaper [DO NOT TRANSLATE] 
         */
        public static final int help_uri_wallpaper=0x7f080942;
        /**  Help URL, Accounts [DO NOT TRANSLATE] 
         */
        public static final int help_url_accounts=0x7f080952;
        /**  Help URL, Backup & reset [DO NOT TRANSLATE] 
         */
        public static final int help_url_backup_reset=0x7f080954;
        /**  Help URL, Battery [DO NOT TRANSLATE] 
         */
        public static final int help_url_battery=0x7f080951;
        /**  Help URL, Bluetooth [DO NOT TRANSLATE] 
         */
        public static final int help_url_bluetooth=0x7f08094c;
        /**  Help URL, Choose lockscreen [DO NOT TRANSLATE] 
         */
        public static final int help_url_choose_lockscreen=0x7f080953;
        /**  Help URL, Data usage [DO NOT TRANSLATE] 
         */
        public static final int help_url_data_usage=0x7f08094d;
        /**  Help URL, Dreams [DO NOT TRANSLATE] 
         */
        public static final int help_url_dreams=0x7f080956;
        /**  Help URL, Fingerprint [DO NOT TRANSLATE] 
         */
        public static final int help_url_fingerprint=0x7f08095c;
        /**  Help URL, Location access [DO NOT TRANSLATE] 
         */
        public static final int help_url_location_access=0x7f080958;
        /**  Help URL, More [DO NOT TRANSLATE] 
         */
        public static final int help_url_more_networks=0x7f08094e;
        /**  Help URL, Tap & pay [DO NOT TRANSLATE] 
         */
        public static final int help_url_nfc_payment=0x7f08095a;
        /**  Help URL, Remote display [DO NOT TRANSLATE] 
         */
        public static final int help_url_remote_display=0x7f08095b;
        /**  Help URL, Security settings [DO NOT TRANSLATE] 
         */
        public static final int help_url_security=0x7f080959;
        /**  Help URL, Sound [DO NOT TRANSLATE] 
         */
        public static final int help_url_sound=0x7f080950;
        /**  Help URL, Tethering [DO NOT TRANSLATE] 
         */
        public static final int help_url_tether=0x7f080955;
        /**  Help URL, User settings [DO NOT TRANSLATE] 
         */
        public static final int help_url_users=0x7f080957;
        /**  Help URL, Vpn [DO NOT TRANSLATE] 
         */
        public static final int help_url_vpn=0x7f08094f;
        /**  Help URL, WiFi [DO NOT TRANSLATE] 
         */
        public static final int help_url_wifi=0x7f08094b;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int hidden_ssid_label=0x7f080318;
        /**  Label for list to control apps that ignore battery saving restrictions [CHAR LIMIT=27]
         */
        public static final int high_power_apps=0x7f080ad5;
        /**  Description of high power switch [CHAR LIMIT=NONE] 
         */
        public static final int high_power_desc=0x7f080ada;
        /**  Filter for apps allowed to use a lot of power [CHAR LIMIT=25] 
         */
        public static final int high_power_filter_on=0x7f080ad6;
        /**  Summary of app not allowed to use a lot of power [CHAR LIMIT=60] 
         */
        public static final int high_power_off=0x7f080ad8;
        /**  Summary of app allowed to use a lot of power [CHAR LIMIT=60] 
         */
        public static final int high_power_on=0x7f080ad7;
        /**  Body text of prompt dialog app can invoke to turn off optimization [CHAR LIMIT=NONE] 
         */
        public static final int high_power_prompt_body=0x7f080adc;
        /**  Title of prompt dialog app can invoke to turn off optimization [CHAR LIMIT=NONE] 
         */
        public static final int high_power_prompt_title=0x7f080adb;
        /**  Summary of app which doesn't have a battery optimization setting [CHAR LIMIT=60] 
         */
        public static final int high_power_system=0x7f080ad9;
        /**  Activity title for battery usage history details 
         */
        public static final int history_details_title=0x7f0806bb;
        /**  Home application selection - uninstall button [CHAR LIMIT=80] 
         */
        public static final int home_app_uninstall_button=0x7f080923;
        /**  Main Settings screen setting option name to go into the display settings screen 
         */
        public static final int home_settings=0x7f080329;
        /**  Home settings screen, text indicating that a launcer does not support work profiles [CHAR LIMIT=100] 
         */
        public static final int home_work_profile_not_supported=0x7f080335;
        /**  Ignore battery optimizations off label [CHAR LIMIT=30] 
         */
        public static final int ignore_optimizations_off=0x7f080b0a;
        /**  Ignore battery optimizations off description [CHAR LIMIT=NONE] 
         */
        public static final int ignore_optimizations_off_desc=0x7f080b0c;
        /**  Ignore battery optimizations on label [CHAR LIMIT=30] 
         */
        public static final int ignore_optimizations_on=0x7f080b09;
        /**  Ignore battery optimizations on description [CHAR LIMIT=NONE] 
         */
        public static final int ignore_optimizations_on_desc=0x7f080b0b;
        /**  Ignore battery optimizations dialog title [CHAR LIMIT=NONE] 
         */
        public static final int ignore_optimizations_title=0x7f080b0d;
        /**  Warning message about security implications of enabling an input method, displayed as a dialog
         message when the user selects to enable an IME. 
         */
        public static final int ime_security_warning=0x7f0805b3;
        /**  Title and summary for SIM Status 
         */
        public static final int imei_information_summary=0x7f080a80;
        /**  Title and summary for SIM Status 
 Title for IMEI preference [CHAR LIMIT=30] 
         */
        public static final int imei_information_title=0x7f080a69;
        /**  UI debug setting: immediately destroy activities? [CHAR LIMIT=25] 
         */
        public static final int immediately_destroy_activities=0x7f08084f;
        /**  UI debug setting: immediately destroy activities summary [CHAR LIMIT=50] 
         */
        public static final int immediately_destroy_activities_summary=0x7f080850;
        /**  Phone IMS registration required off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int ims_reg_required_off=0x7f08007a;
        /**  Phone SMS over IMS IMS registration required on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int ims_reg_required_on=0x7f080079;
        /**  Settings item summary for active app [CHAR LIMIT=100] 
         */
        public static final int inactive_app_active_summary=0x7f080af0;
        /**  Settings item summary for inactive app [CHAR LIMIT=100] 
         */
        public static final int inactive_app_inactive_summary=0x7f080aef;
        /**  Settings item title for inactive apps [CHAR LIMIT=35] 
         */
        public static final int inactive_apps_title=0x7f080aee;
        /**  Auto-restore menu title [CHAR LIMIT=30] 
         */
        public static final int include_app_data_title=0x7f08079c;
        /**  Sound settings screen, the title of the volume bar to adjust the incoming call volume 
         */
        public static final int incoming_call_volume_title=0x7f080332;
        /**  Setting name for Input Method chooser 
         */
        public static final int input_method=0x7f0805d9;
        /**  Title for setting the visibility of input method selector [CHAR LIMIT=35] 
         */
        public static final int input_method_selector=0x7f0805db;
        /**  An option to always hide input method selector [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_always_hide_title=0x7f0805de;
        /**  An option to always show input method selector [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_always_show_title=0x7f0805dd;
        /**  An option to always show input method selector automatically when needed [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_show_automatically_title=0x7f0805dc;
        /**  Title for settings of each IME [CHAR LIMIT=25] 
         */
        public static final int input_method_settings=0x7f0805e0;
        /**  Spoken description for IME settings image button [CHAR LIMIT=NONE] 
         */
        public static final int input_method_settings_button=0x7f0805e1;
        /**  Title for the settings of selecting active input methods of an IME [CHAR LIMIT=35] 
         */
        public static final int input_methods_and_subtype_enabler_title=0x7f0805e5;
        /**  Input Methods Settings localized format string for generating the appropriate "Foo settings" menu label for the Input Method named "Foo" [CHAR LIMIT=35] 
         */
        public static final int input_methods_settings_label_format=0x7f0805e4;
        /**  Input methods Settings 
         */
        public static final int input_methods_settings_title=0x7f0805d8;
        /**  Applications settings screen, message text of alert that appears if user selects the "Unknown sources" check box 
         */
        public static final int install_all_warning=0x7f080510;
        /**  Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.  
         */
        public static final int install_applications=0x7f08050c;
        /**  Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.  [CHAR LIMIT=30] 
         */
        public static final int install_applications_title=0x7f08050d;
        /**  [CHAR LIMIT=NONE] Manage applications, individual application info screen, button label under Storage heading. Button to install an application for the user. 
         */
        public static final int install_text=0x7f080525;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Unknown sources" checkbox  
         */
        public static final int install_unknown_applications=0x7f08050f;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Unknown sources" checkbox  [CHAR LIMIT=65] 
         */
        public static final int install_unknown_applications_title=0x7f08050e;
        /**  Manage applications, text for move error messages 
         */
        public static final int insufficient_storage=0x7f080565;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_account_label=0x7f0800e8;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_action_label=0x7f0800e5;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_data_label=0x7f0800e3;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_resource_label=0x7f0800e7;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_sendbroadcast_text=0x7f0800e4;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_startactivity_text=0x7f0800e6;
        /**  SD card & phone storage settings screen heading. This is displayed above items that pertain to the phone's internal storage  
         */
        public static final int internal_memory=0x7f0803c6;
        /**  [CHAR LIMIT=15] Manage applications, label for chart showing internal storage use. 
         */
        public static final int internal_storage=0x7f080546;
        /**  [CHAR LIMIT=30] Title for internal device storage that is capitalized for placement as a phrase into another sentence 
         */
        public static final int internal_storage_sentence=0x7f080547;
        public static final int invalid_location=0x7f080568;
        public static final int invalid_size_value=0x7f08055e;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int ipaddr_label=0x7f080319;
        /**  [CHAR_LIMIT=NONE] Format to put the first item at the start of a series of 3 or more items in a list 
         */
        public static final int join_many_items_first=0x7f080559;
        /**  [CHAR_LIMIT=NONE] Format to put the last item at the end of a series of 3 or more items in a list 
         */
        public static final int join_many_items_last=0x7f080558;
        /**  [CHAR_LIMIT=NONE] Format to put the middle items together in a series of 4 or more items in a list 
         */
        public static final int join_many_items_middle=0x7f08055a;
        /**  [CHAR_LIMIT=NONE] Format to put together two items in a list. 
         */
        public static final int join_two_items=0x7f080557;
        /**  Setting Checkbox title whether to keep the screen on when plugged in to a power source 
         */
        public static final int keep_screen_on=0x7f0805f4;
        /**  setting Checkbox summary whether to keep the screen on when plugged in  
         */
        public static final int keep_screen_on_summary=0x7f0805f5;
        /**  About phone screen,  setting option name  [CHAR LIMIT=40] 
         */
        public static final int kernel_version=0x7f0803a6;
        /**  Label of the default keyboard layout.  [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_default_label=0x7f0805c0;
        /**  Button to configure keyboard layouts.  [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_dialog_setup_button=0x7f0805be;
        /**  Hint describing how to switch keyboard layouts using the keyboard.  [CHAR LIMIT=48] 
         */
        public static final int keyboard_layout_dialog_switch_hint=0x7f0805bf;
        /**  Title for the keyboard layout preference dialog. [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_dialog_title=0x7f0805bd;
        /**  Title for the keyboard layout picker activity. [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_picker_title=0x7f0805c1;
        /**  On Language & keyboard settings screen, heading. Inside the "Language & keyboard settings" screen, this is the header for settings that relate to keyboard (enable/disable each keyboard, settings for each keyboard). 
         */
        public static final int keyboard_settings_category=0x7f0805a8;
        /**  Title of keyboard settings list item within voice input/output settings 
         */
        public static final int keyboard_settings_title=0x7f080730;
        public static final int keywords_accounts=0x7f0809cf;
        public static final int keywords_all_apps=0x7f0809d5;
        public static final int keywords_app=0x7f0809cc;
        public static final int keywords_app_permissions=0x7f0809d6;
        public static final int keywords_battery=0x7f0809c2;
        public static final int keywords_color_mode=0x7f0809d9;
        public static final int keywords_date_and_time=0x7f0809c6;
        public static final int keywords_default_apps=0x7f0809d7;
        public static final int keywords_default_phone_app=0x7f0809d4;
        public static final int keywords_display=0x7f0809ba;
        public static final int keywords_display_auto_brightness=0x7f0809bc;
        public static final int keywords_display_brightness_level=0x7f0809bb;
        public static final int keywords_display_cast_screen=0x7f0809c0;
        public static final int keywords_display_font_size=0x7f0809bf;
        /**  Search keywords for display light/dark theme: dark theme, night mode, dim screen, invert brightness [CHAR LIMIT=NONE] 
         */
        public static final int keywords_display_night_mode=0x7f0809bd;
        public static final int keywords_display_wallpaper=0x7f0809be;
        public static final int keywords_emergency_app=0x7f0809d3;
        public static final int keywords_factory_data_reset=0x7f0809c8;
        public static final int keywords_home=0x7f0809b9;
        public static final int keywords_ignore_optimizations=0x7f0809d8;
        public static final int keywords_keyboard_and_ime=0x7f0809d1;
        public static final int keywords_location=0x7f0809cd;
        public static final int keywords_location_mode=0x7f0809ce;
        /**  Search keywords for different screen unlock modes : slide to unlock, password, pattern and PIN [CHAR LIMIT=none] 
         */
        public static final int keywords_lockscreen=0x7f0809da;
        public static final int keywords_more_default_sms_app=0x7f0809b6;
        public static final int keywords_more_mobile_networks=0x7f0809b7;
        public static final int keywords_network_reset=0x7f0809c7;
        public static final int keywords_printing=0x7f0809c9;
        public static final int keywords_reset_apps=0x7f0809d2;
        public static final int keywords_sounds_and_notifications=0x7f0809ca;
        public static final int keywords_sounds_and_notifications_interruptions=0x7f0809cb;
        public static final int keywords_spell_checker=0x7f0809c3;
        public static final int keywords_storage=0x7f0809c1;
        /**  Keyword for SYSTEM_ALERT_WINDOW 
         */
        public static final int keywords_system_alert_window=0x7f080b19;
        public static final int keywords_text_to_speech_output=0x7f0809c5;
        public static final int keywords_users=0x7f0809d0;
        public static final int keywords_voice_input=0x7f0809c4;
        /** Search Keywords [CHAR LIMIT=NONE]
         */
        public static final int keywords_wifi=0x7f0809b5;
        public static final int keywords_wifi_calling=0x7f0809b8;
        /**  Keyword for WRITE_SETTINGS 
         */
        public static final int keywords_write_settings=0x7f080b20;
        /**  Title of Language and keyboard settings screen 
         */
        public static final int language_keyboard_settings_title=0x7f0805a6;
        /**  LocalePicker 
 Title for the locale picker activity 
         */
        public static final int language_picker_title=0x7f080130;
        /**  Title of setting on main settings screen.  This item will take the user to the screen to tweak settings realted to locale and text 
         */
        public static final int language_settings=0x7f0805a5;
        /**  On Language & keyboard settings screen, heading. Inside the "Language & keyboard settings" screen, this is the header for settings that relate to language (select the system language, user dictionary for the language). 
         */
        public static final int language_settings_category=0x7f0805a7;
        /**  choice for the font size spinner 
         */
        public static final int large_font=0x7f08009b;
        /**  Last synced date/time for accounts that synced [CHAR LIMIT=none] 
         */
        public static final int last_synced=0x7f0807f0;
        /**  label for last time used 
         */
        public static final int last_time_used_label=0x7f080630;
        /**  New strings needed for App Info 2 
 Preference label for app default launch settings [CHAR LIMIT=35]
         */
        public static final int launch_by_default=0x7f080a82;
        /**  Launch defaults preference summary with none set [CHAR LIMIT=40] 
         */
        public static final int launch_defaults_none=0x7f080a9b;
        /**  Launch defaults preference summary with some set [CHAR LIMIT=40] 
         */
        public static final int launch_defaults_some=0x7f080a9a;
        /**  Setting Checkbox title whether to enable WiFi Scanning in the presence of traffic. [CHAR LIMIT=80] 
         */
        public static final int legacy_dhcp_client=0x7f080606;
        /**  Title of warning dialog about the implications of enabling USB debugging 
 Setting Checkbox summary whether to use DHCP client from Lollipop (Android 5.0) [CHAR LIMIT=130] 
         */
        public static final int legacy_dhcp_client_summary=0x7f080611;
        /**  About phone settings screen, setting option name to go to dialog that shows legal info 
         */
        public static final int legal_information=0x7f0804c8;
        /**  About phone settings screen, setting option name to see licensing info 
         */
        public static final int license_title=0x7f0804cd;
        /**  [CHAR LIMIT=40] Display settings screen, setting option name to change whether the device wakes up when a lift gesture is detected. 
         */
        public static final int lift_to_wake_title=0x7f08037b;
        /**  Link speed on Wifi Status screen 
         */
        public static final int link_speed=0x7f080259;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int link_speed_label=0x7f08031c;
        /**  [CHAR LIMIT=NONE] Text when loading app list in notification settings 
         */
        public static final int loading_notification_apps=0x7f080a10;
        /**  Summary text of the "local backup password" setting when the user has already supplied a password 
         */
        public static final int local_backup_password_summary_change=0x7f0807a3;
        /**  Summary text of the "local backup password" setting when the user has not supplied a password 
         */
        public static final int local_backup_password_summary_none=0x7f0807a2;
        /**  Local (desktop) backup password menu title [CHAR LIMIT=25] 
         */
        public static final int local_backup_password_title=0x7f0807a1;
        /**  Toast message shown when setting a new local backup password fails due to the user not correctly typing the password again for confirmation [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_confirmation_mismatch=0x7f0807a5;
        /**  Toast message shown when the user successfully sets a new local backup password [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_success=0x7f0807a4;
        /**  Toast message shown when setting a new local backup password fails due to the user not supplying the correct existing password. The phrasing here is deliberately quite general. [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_validation_failure=0x7f0807a6;
        /**  Label for the default device locale. [CHAR LIMIT=35] 
         */
        public static final int locale_default=0x7f080667;
        /**  [CHAR LIMIT=none] Description text for location access switch 
         */
        public static final int location_access_summary=0x7f0804c4;
        /**  [CHAR LIMIT=45] Label for turning on/off location access completely. 
         */
        public static final int location_access_title=0x7f0804c3;
        /**  [CHAR LIMIT=30] Location settings screen, sub category for location services 
         */
        public static final int location_category_location_services=0x7f0804ac;
        /**  [CHAR LIMIT=30] Location settings screen, sub category for recent location requests 
         */
        public static final int location_category_recent_location_requests=0x7f0804aa;
        /**  [CHAR LIMIT=30] Security & location settings screen, setting check box label for GPS satellites 
         */
        public static final int location_gps=0x7f0804bc;
        /**  [CHAR LIMIT=30] Location settings screen, recent location requests high battery use
         */
        public static final int location_high_battery_use=0x7f0804ad;
        /**  [CHAR LIMIT=30] Location settings screen, recent location requests low battery use
         */
        public static final int location_low_battery_use=0x7f0804ae;
        /**  Help menu label [CHAR LIMIT=20] Location settings screen, overflow menu that takes the user
      to scanning settings activity 
         */
        public static final int location_menu_scanning=0x7f0804b3;
        /**  [CHAR LIMIT=130] Location mode screen, description for battery saving mode 
         */
        public static final int location_mode_battery_saving_description=0x7f0804b1;
        /**  [CHAR LIMIT=30] Location settings screen, battery saving location mode 
         */
        public static final int location_mode_battery_saving_title=0x7f0804a7;
        /**  [CHAR LIMIT=130] Location mode screen, description for high accuracy mode 
         */
        public static final int location_mode_high_accuracy_description=0x7f0804b0;
        /**  [CHAR LIMIT=30] Location settings screen, high accuracy location mode 
         */
        public static final int location_mode_high_accuracy_title=0x7f0804a6;
        /**  [CHAR LIMIT=30] Location settings screen, location off mode 
         */
        public static final int location_mode_location_off_title=0x7f0804a9;
        /**  [CHAR LIMIT=30] Location mode screen, screen title 
         */
        public static final int location_mode_screen_title=0x7f0804af;
        /**  [CHAR LIMIT=130] Location mode screen, description for sensors only mode 
         */
        public static final int location_mode_sensors_only_description=0x7f0804b2;
        /**  [CHAR LIMIT=30] Location settings screen, device only location mode 
         */
        public static final int location_mode_sensors_only_title=0x7f0804a8;
        /**  [CHAR LIMIT=30] Location settings screen, setting preference screen box label for location mode 
         */
        public static final int location_mode_title=0x7f0804a5;
        /**  [CHAR LIMIT=130] Security & location settings screen, setting summary for Google location service check box
         */
        public static final int location_neighborhood_level=0x7f0804ba;
        /**  [CHAR LIMIT=130] Security & location settings screen, setting summary when Use wireless networks check box is selected, for wifi-only devices 
         */
        public static final int location_neighborhood_level_wifi=0x7f0804bb;
        /**  [CHAR LIMIT=30] Security & location settings screen, setting check box label for Google location service (cell ID, wifi, etc.) 
         */
        public static final int location_network_based=0x7f0804b9;
        /**  Location settings screen, displayed when there's no recent app accessing location 
         */
        public static final int location_no_recent_apps=0x7f0804ab;
        /**  Description text for Bluetooth always scanning 
         */
        public static final int location_scanning_bluetooth_always_scanning_description=0x7f0804b8;
        /**  [CHAR LIMIT=130] Description text for Bluetooth always scanning 
         */
        public static final int location_scanning_bluetooth_always_scanning_title=0x7f0804b7;
        /**  [CHAR LIMIT=30] Wireless background scanning settings screen, screen title 
         */
        public static final int location_scanning_screen_title=0x7f0804b4;
        /**  Preference description text for Wi-Fi always scanning 
         */
        public static final int location_scanning_wifi_always_scanning_description=0x7f0804b6;
        /**  [CHAR LIMIT=130] Preference title for Wi-Fi always scanning 
         */
        public static final int location_scanning_wifi_always_scanning_title=0x7f0804b5;
        /**  Main Settings screen setting option title for the item to take you to the location screen 
         */
        public static final int location_settings_title=0x7f080177;
        /**  [CHAR LIMIT=45] Section heading for location sources 
         */
        public static final int location_sources_heading=0x7f0804c5;
        /**  [CHAR LIMIT=100] Security & location settings screen, setting check box summary for GPS satellites on a phone 
         */
        public static final int location_street_level=0x7f0804bd;
        /**  Security & location settings screen, section header for settings relating to location 
         */
        public static final int location_title=0x7f0804a1;
        /**  Security settings screen, setting option name to change screen timeout 
         */
        public static final int lock_after_timeout=0x7f080168;
        /**  Security settings screen, setting option summary to change screen timeout 
         */
        public static final int lock_after_timeout_summary=0x7f080169;
        /**  Security settings screen, setting option summary to change screen timeout, with additional explanation
         */
        public static final int lock_after_timeout_summary_with_exception=0x7f08016b;
        /**  Security settings screen, setting option summary to change screen timeout, with additional explanation
         */
        public static final int lock_immediately_summary_with_exception=0x7f08016a;
        /**  Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Message asking the user how they want their notifications to appear when the device is locked [CHAR LIMIT=NONE] 
         */
        public static final int lock_screen_notifications_interstitial_message=0x7f0809f9;
        /**  Security > Choose PIN/PW/Pattern > Notification redaction interstitial: Title for the screen asking the user how they want their notifications to appear when the device is locked [CHAR LIMIT=30] 
         */
        public static final int lock_screen_notifications_interstitial_title=0x7f0809fa;
        /**  Sound & notification > Notification section: Value for lockscreen notifications: notifications will not appear on a secure lock screen
         [CHAR LIMIT=50] 
         */
        public static final int lock_screen_notifications_summary_disable=0x7f0809f8;
        /**  Sound & notification > Notification section: Value for lockscreen notifications: sensitive information will be
         hidden or redacted from notifications shown on a secure lock screen
         [CHAR LIMIT=50] 
         */
        public static final int lock_screen_notifications_summary_hide=0x7f0809f7;
        /**  Sound & notification > Notification section: Value for lockscreen notifications:  all information will be
         shown in notifications shown on a secure lock screen
         [CHAR LIMIT=50] 
         */
        public static final int lock_screen_notifications_summary_show=0x7f0809f6;
        /**  Sound & notification > Notification section: Title for the option controlling notifications on the lockscreen. [CHAR LIMIT=30] 
         */
        public static final int lock_screen_notifications_title=0x7f0809f5;
        /**  Message shown in screen lock picker while setting up the backup/fallback screen lock method for fingerprint. Users can choose to use this method to unlock the screen instead of fingerprint, or when fingerprint is not accepted. [CHAR LIMIT=80] [BACKUP_MESSAGE_ID=2799884038398627882] 
         */
        public static final int lock_settings_picker_fingerprint_message=0x7f0801c5;
        /**   Title for security picker to choose the unlock method: None/Pattern/PIN/Password [CHAR LIMIT=22] 
         */
        public static final int lock_settings_picker_title=0x7f0801c4;
        /**  Lock Pattern settings 
 Security & location settings screen, header 
         */
        public static final int lock_settings_title=0x7f0804ed;
        /**  Toast shown when lock pattern or password successfully setup. [CHAR LIMIT=64] 
         */
        public static final int lock_setup=0x7f0801fc;
        /**  Sound settings screen, setting check box label 
         */
        public static final int lock_sounds_enable_title=0x7f08033d;
        /**  Label for ChoosePassword/PIN OK button 
         */
        public static final int lockpassword_cancel_label=0x7f0801f9;
        /**  Header shown to ask the user to select an unlock method [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_lock_generic_header=0x7f0804e3;
        /**  Lock Pattern settings 
 Header on first screen of choose password/PIN flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_password_header=0x7f0804db;
        /**  Header on first screen of choose pattern flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_pattern_header=0x7f0804dc;
        /**  Header on first screen of choose password/PIN flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_pin_header=0x7f0804dd;
        /**  Header on password confirm screen if second password doesn't match the first. [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_passwords_dont_match=0x7f0804e1;
        /**  Header on pin confirm screen if second pin doesn't match the first. [CHAR LIMIT=30]
         */
        public static final int lockpassword_confirm_pins_dont_match=0x7f0804e2;
        /**  Message to be used to explain the user that he needs to enter his password to continue a
         particular operation. [CHAR LIMIT=70]
         */
        public static final int lockpassword_confirm_your_password_generic=0x7f0804e9;
        /**  Header on password confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_password_header=0x7f0804de;
        /**  Message to be used to explain the user that he needs to enter his pattern to continue a
         particular operation. [CHAR LIMIT=70]
         */
        public static final int lockpassword_confirm_your_pattern_generic=0x7f0804e7;
        /**  Header on pattern confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_pattern_header=0x7f0804df;
        /**  Message to be used to explain the user that he needs to enter his PIN to continue a
         particular operation. [CHAR LIMIT=70]
         */
        public static final int lockpassword_confirm_your_pin_generic=0x7f0804e8;
        /**  Header on password confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_pin_header=0x7f0804e0;
        /**  Hint shown after minimum password criteria is met 
         */
        public static final int lockpassword_continue_label=0x7f0801ed;
        /**  Error shown when in PASSWORD mode and user enters an invalid character 
         */
        public static final int lockpassword_illegal_character=0x7f0801f2;
        /**  Security & location settings screen, change security method screen instruction if user
         enters incorrect password [CHAR LIMIT=30] 
         */
        public static final int lockpassword_invalid_password=0x7f0804eb;
        /**  Security & location settings screen, change security method screen instruction if user
         enters incorrect PIN [CHAR LIMIT=30] 
         */
        public static final int lockpassword_invalid_pin=0x7f0804ea;
        /**  Label for ChoosePassword/PIN OK button 
         */
        public static final int lockpassword_ok_label=0x7f0801f8;
        /**  Error shown when in PASSWORD mode and password has been used recently. Please keep this string short! 
         */
        public static final int lockpassword_password_recently_used=0x7f0801f6;
        /**  Error shown when in PASSWORD mode and password is all digits 
         */
        public static final int lockpassword_password_requires_alpha=0x7f0801f3;
        /**  Error shown when in PASSWORD mode and password doesn't contain any digits 
         */
        public static final int lockpassword_password_requires_digit=0x7f0801f4;
        /**  Error shown when in PASSWORD mode and password doesn't contain any symbols 
         */
        public static final int lockpassword_password_requires_symbol=0x7f0801f5;
        /**  Toast shown if setting password was successful 
         */
        public static final int lockpassword_password_set_toast=0x7f0804e4;
        /**  Error shown in popup when password is too long 
         */
        public static final int lockpassword_password_too_long=0x7f0801ee;
        /**  Hint shown in dialog screen when password is too short 
         */
        public static final int lockpassword_password_too_short=0x7f0801ea;
        /**  Toast shown if setting pattern was successful 
         */
        public static final int lockpassword_pattern_set_toast=0x7f0804e6;
        /**  Error shown when in PIN mode and user enters a non-digit 
         */
        public static final int lockpassword_pin_contains_non_digits=0x7f0801f0;
        /**  [CHAR_LIMIT=NONE] Error shown when the user tries to set an ascending or descending sequence of digits 
         */
        public static final int lockpassword_pin_no_sequential_digits=0x7f0801f7;
        /**  Error shown when in PIN mode and PIN has been used recently. Please keep this string short! 
         */
        public static final int lockpassword_pin_recently_used=0x7f0801f1;
        /**  Toast shown if setting PIN was successful 
         */
        public static final int lockpassword_pin_set_toast=0x7f0804e5;
        /**  Error shown in popup when PIN is too long 
         */
        public static final int lockpassword_pin_too_long=0x7f0801ef;
        /**  Hint shown in dialog screen when PIN is too short 
         */
        public static final int lockpassword_pin_too_short=0x7f0801eb;
        /**  Hint shown after minimum password criteria is met 
         */
        public static final int lockpassword_press_continue=0x7f0801ec;
        /**  Security & location settings screen, setting option name 
         */
        public static final int lockpattern_change_lock_pattern_label=0x7f0804ee;
        /**  Security & location settings screen, change unlock pattern screen instruction when the user chooses "Change unlock pattern".  We first ask the user toe nter the current pattern, and this is the message seen 
         */
        public static final int lockpattern_change_lock_pin_label=0x7f0804ef;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  When they are ready to draw it once again to confirm it, they press this button. 
         */
        public static final int lockpattern_confirm_button_text=0x7f0804f7;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen. Once they draw a new pattern and confirm it by drawing it again, they press this button to exit 
         */
        public static final int lockpattern_continue_button_text=0x7f0804fa;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen to confirm pattern 
         */
        public static final int lockpattern_need_to_confirm=0x7f0804f5;
        /**  Security & location settings screen, change unlock pattern screen instruction if user
         draws incorrect pattern [CHAR LIMIT=30] 
         */
        public static final int lockpattern_need_to_unlock_wrong=0x7f0804ec;
        public static final int lockpattern_pattern_confirmed_header=0x7f0804f6;
        /**  Security & location settings screen, change unlock pattern screen message on top of screen after drawing pattern 
         */
        public static final int lockpattern_pattern_entered_header=0x7f0804f4;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen if user doesn't connect enough dots 
         */
        public static final int lockpattern_recording_incorrect_too_short=0x7f0804f3;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen while drawing pattern 
         */
        public static final int lockpattern_recording_inprogress=0x7f0804f2;
        /**  Security & location settings screen, change unlock pattern screen hint on bottom of screen.  We are telling them to press the menu button to see more options or help. 
         */
        public static final int lockpattern_recording_intro_footer=0x7f0804f1;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen.  This si when they are supposed to draw a new unlock pattern (for example, if they are changing their unlock patterns)..
         */
        public static final int lockpattern_recording_intro_header=0x7f0804f0;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  If they are nto satisfied with this pattern, they click this button to redraw the pattern. 
         */
        public static final int lockpattern_restart_button_text=0x7f0804f8;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen. If they are supposed to enter their current pattern before being able to draw another one, and they screw up, they hit this button to try again 
         */
        public static final int lockpattern_retry_button_text=0x7f0804f9;
        /**  Security & location settings screen, setting option name when user has previously set an unlock pattern and wants to change to a new pattern 
         */
        public static final int lockpattern_settings_change_lock_pattern=0x7f080503;
        /**  Security & location settings screen, setting option name when user has never set an unlock pattern 
         */
        public static final int lockpattern_settings_choose_lock_pattern=0x7f080502;
        /**  Security & location settings screen, setting check box title. This controls whether the device locks immediately when the power button is pressed. [CHAR LIMIT=28]
         */
        public static final int lockpattern_settings_enable_power_button_instantly_locks=0x7f080500;
        /**  Security & location settings screen, setting summary for the checkbox "Require pattern" 
         */
        public static final int lockpattern_settings_enable_summary=0x7f0804fd;
        /**  Security & location settings screen, setting check box title. This setting controls whether tactile feedback will be produced when the user draws the pattern.
         */
        public static final int lockpattern_settings_enable_tactile_feedback_title=0x7f0804ff;
        /**  Security & location settings screen, setting check box title if the unlock pattern MUST be drawn everytime they turn on the screen 
         */
        public static final int lockpattern_settings_enable_title=0x7f0804fc;
        /**  Security & location settings screen, setting check box title. This setting controls whether a visible green line is drawn as the user moves his finger around while drawing the unlock pattern.  If checked, this line is drawn.  If unchecked, there is nothing drawn so the user does not reveal his pattern while he unlocks the phone.
         */
        public static final int lockpattern_settings_enable_visible_pattern_title=0x7f0804fe;
        /**  Security & location settings screen, the help instructions (an animation) caption 
         */
        public static final int lockpattern_settings_help_how_to_record=0x7f080504;
        /**  Security & location settings screen, setting optional summary when a trust agent is enabled
         */
        public static final int lockpattern_settings_power_button_instantly_locks_summary=0x7f080501;
        /**  Security & location settings screen, unlock screen activity title 
         */
        public static final int lockpattern_settings_title=0x7f0804fb;
        /**  Security & location settings screen, confirm unlock pattern screen hint at the bottom after
         too many incorrect attempts [CHAR LIMIT=120]
         */
        public static final int lockpattern_too_many_failed_confirmation_attempts=0x7f080505;
        /**  Label for LockPatternTutorial Cancel button 
         */
        public static final int lockpattern_tutorial_cancel_label=0x7f0801fa;
        /**  Label for LockPatternTutorial Continue button 
         */
        public static final int lockpattern_tutorial_continue_label=0x7f0801fb;
        /**  Phone ram dump off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int lte_ram_dump_off=0x7f08007e;
        /**  Phone ram dump on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int lte_ram_dump_on=0x7f08007d;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int macaddr_label=0x7f08031a;
        /**  Representation of a mAh value. [CHAR LIMIT=NONE] 
         */
        public static final int mah=0x7f0806f9;
        /**  Description of the main process in the details. 
         */
        public static final int main_running_process_description=0x7f0805a0;
        /**  Title of preference to manage device admins 
         */
        public static final int manage_device_admin=0x7f0801fe;
        /**  Summary of preference to manage device policies 
         */
        public static final int manage_device_admin_summary=0x7f0801ff;
        /**  Mobile plan [CHAR LIMIT=35]
         */
        public static final int manage_mobile_plan_title=0x7f080495;
        /**  Summary of preference to manage notification listeners, when none are enabled 
         */
        public static final int manage_notification_access_summary_zero=0x7f080a0a;
        /**  Sound & notification > Advanced section: Title for managing notification listeners option. [CHAR LIMIT=30] 
         */
        public static final int manage_notification_access_title=0x7f080a09;
        /**  Manage applications screen, individual app screen, button label when the user wants to manage the space taken up by an app. 
         */
        public static final int manage_space_text=0x7f08053b;
        /**  Title of preference to manage trust agents 
         */
        public static final int manage_trust_agents=0x7f080200;
        /**  Summary of preference to manage device policies 
         */
        public static final int manage_trust_agents_summary=0x7f080202;
        /**  Sound & notification > Advanced section: Title for managing Do Not Disturb access option. [CHAR LIMIT=40] 
         */
        public static final int manage_zen_access_title=0x7f080a0e;
        /**  Applications settings screen, setting option summary for the user to go to the screen to manage installed applications  
         */
        public static final int manageapplications_settings_summary=0x7f080508;
        /**  Applications settings screen, setting option name for the user to go to the screen to manage installed applications  
         */
        public static final int manageapplications_settings_title=0x7f080507;
        /**  Title for managed device admins on the list [CHAR_LIMIT=25] 
         */
        public static final int managed_device_admin_title=0x7f0807b2;
        /**  Message displayed when the device admin can only be disabled by deleting the work profile [CHAR_LIMIT=120] 
         */
        public static final int managed_profile_device_admin_info=0x7f0807b0;
        /**  Title for managed profile preference category [CHAR_LIMIT=25] 
         */
        public static final int managed_profile_location_category=0x7f0804a2;
        /**  [CHAR LIMIT=30] Text to show on managed profile location switch if MDM has locked down location access for managed profile
         */
        public static final int managed_profile_location_switch_lockdown=0x7f0804a4;
        /**  [CHAR LIMIT=30] Title for managed profile location switch  
         */
        public static final int managed_profile_location_switch_title=0x7f0804a3;
        /**  Label for the state of the work profile [CHAR LIMIT=80] 
         */
        public static final int managed_profile_not_available_label=0x7f0807e6;
        /**  Title for a work profile. [CHAR LIMIT=25] 
         */
        public static final int managed_user_title=0x7f080a60;
        /**  Summary for work profile accounts group. [CHAR LIMIT=25] 
         */
        public static final int managing_admin=0x7f080a62;
        /**  About phone settings screen, setting option name to show Manual [CHAR LIMIT=25] 
         */
        public static final int manual=0x7f0804ca;
        /**  SD card & phone storage settings screen, instructions and list of current accounts.  The list of accounts follows this text[CHAR LIMIT=NONE] 
         */
        public static final int master_clear_accounts=0x7f08046d;
        /**  SD card & phone storage settings screen, button on screen after user selects Factory data reset 
         */
        public static final int master_clear_button_text=0x7f080473;
        /**  Master clear confirmation screen title [CHAR LIMIT=30] 
         */
        public static final int master_clear_confirm_title=0x7f080477;
        /**  SD card & phone storage settings screen, message on screen after user selects Factory data reset [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc=0x7f08046c;
        /**  SD card & phone storage settings screen, list of items in user data storage (USB storage or SD card) that will be erased during this operation [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc_also_erases_external=0x7f08046f;
        /**  SD card & phone storage settings screen, instructions about whether to also erase the external storage (SD card) when erasing the internal storage [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc_erase_external_storage=0x7f080470;
        /**  Master clear failed message 
         */
        public static final int master_clear_failed=0x7f080476;
        /**  SD card & phone storage settings screen, button on screen after user selects Reset phone button 
         */
        public static final int master_clear_final_button_text=0x7f080475;
        /**  SD card & phone storage settings screen, message on screen after user selects Reset phone button 
         */
        public static final int master_clear_final_desc=0x7f080474;
        /**  Error message for users that aren't allowed to factory reset [CHAR LIMIT=none] 
         */
        public static final int master_clear_not_available=0x7f080478;
        /**  SD card & phone storage settings screen, notification if other users are present on the device [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_other_users_present=0x7f08046e;
        /**  Master clear progress screen text [CHAR LIMIT=75] 
         */
        public static final int master_clear_progress_text=0x7f08047a;
        /**  Master clear progress screen title [CHAR LIMIT=30] 
         */
        public static final int master_clear_progress_title=0x7f080479;
        /**  SD card & phone storage settings screen, setting option name under Internal phone storage heading 
         */
        public static final int master_clear_title=0x7f08046b;
        /**  Label for maximum memory use section [CHAR LIMIT=30] 
         */
        public static final int maximum_memory_use=0x7f080af7;
        /**  Preference category for media development settings. [CHAR LIMIT=50] 
         */
        public static final int media_category=0x7f080825;
        /**  Sound & notification > Sound section: Title for the option managing media volume. [CHAR LIMIT=30] 
         */
        public static final int media_volume_option_title=0x7f0809e4;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int media_volume_summary=0x7f080338;
        /**  Sound settings screen, setting option name 
         */
        public static final int media_volume_title=0x7f080337;
        /**  choice for the font size spinner 
         */
        public static final int medium_font=0x7f08009a;
        /**  [CHAR LIMIT=NONE] Activity title for process stats details on overall memory state 
         */
        public static final int mem_details_title=0x7f080718;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats memory state details for list of memory states 
         */
        public static final int mem_state_subtitle=0x7f080719;
        /**  [CHAR LIMIT=NONE] Type of memory use that is available/free 
         */
        public static final int mem_use_free_type=0x7f08071f;
        /**  [CHAR LIMIT=NONE] Type of memory use associated with kernel caches 
         */
        public static final int mem_use_kernel_cache_type=0x7f08071d;
        /**  [CHAR LIMIT=NONE] Type of memory use associated with the kernel 
         */
        public static final int mem_use_kernel_type=0x7f08071b;
        /**  [CHAR LIMIT=NONE] Type of memory use associated with native processes 
         */
        public static final int mem_use_native_type=0x7f08071c;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats memory state details for list of memory use 
         */
        public static final int mem_use_subtitle=0x7f08071a;
        /**  [CHAR LIMIT=NONE] Total of all memory use 
         */
        public static final int mem_use_total=0x7f080720;
        /**  [CHAR LIMIT=NONE] Type of memory use associated with kernel zram swap 
         */
        public static final int mem_use_zram_type=0x7f08071e;
        /**  [CHAR LIMIT=10] Running services, label for chart showing memory use. 
         */
        public static final int memory=0x7f080586;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of applications installed. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_apps_usage=0x7f0803cc;
        /**  SD card & phone storage settings title. The amount of free space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section. 
         */
        public static final int memory_available=0x7f0803c8;
        /**  SD card & phone storage settings title. The amount of free space for some storage partition when the volume is read-only. [CHAR LIMIT=64] 
         */
        public static final int memory_available_read_only=0x7f0803c9;
        /**  Average memory used by an app [CHAR LIMIT=25] 
         */
        public static final int memory_avg_desc=0x7f080ad2;
        /**  Average memory usage key [CHAR LIMIT=25] 
         */
        public static final int memory_avg_use=0x7f080ad0;
        /**  SD card & phone storage settings summary. Displayed when the total memory usage is being calculated. Will be replaced with a number like "12.3 GB" when finished calucating. [CHAR LIMIT=30] 
         */
        public static final int memory_calculating_size=0x7f0803cb;
        /**  Message of dialog asking user to confirm before clearing all caches. [CHAR LIMIT=48] 
         */
        public static final int memory_clear_cache_message=0x7f0803db;
        /**  SD card status when it is mounted as read only. Will be appended to size, starts with an unbreakable space 
 Title of dialog asking user to confirm before clearing all caches. [CHAR LIMIT=48] 
         */
        public static final int memory_clear_cache_title=0x7f0803da;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of all pictures, videos in /sdcard/DCIM, /sdcard/Pictures folders on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_dcim_usage=0x7f0803cf;
        /**  Label for details about an app's memory use [CHAR LIMIT=30] 
         */
        public static final int memory_details=0x7f080afa;
        /**  Title for screen showing recent memory usage of specific app [CHAR LIMIT=30]
         */
        public static final int memory_details_title=0x7f080acb;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of /sdcard/Download on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_downloads_usage=0x7f0803ce;
        /**  Maximum memory used by an app [CHAR LIMIT=25] 
         */
        public static final int memory_max_desc=0x7f080ad1;
        /**  Maximum memory usage key [CHAR LIMIT=25] 
         */
        public static final int memory_max_use=0x7f080acf;
        /**  Label for maximum amount of memory app has used [CHAR LIMIT=25] 
         */
        public static final int memory_maximum_usage=0x7f080b05;
        /**  Storage item representing all cached data on device. [CHAR LIMIT=48] 
         */
        public static final int memory_media_cache_usage=0x7f0803d2;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of misc files on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_media_misc_usage=0x7f0803d1;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of media on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_media_usage=0x7f0803cd;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of audio files in /sdcard on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_music_usage=0x7f0803d0;
        /**  Label for the current performance of the device [CHAR LIMIT=25] 
         */
        public static final int memory_performance=0x7f080aff;
        /**  Title for screen showing recent memory usage of device [CHAR LIMIT=30]
         */
        public static final int memory_settings_title=0x7f080aca;
        /**  SD card & phone storage settings screen heading.  The total amount of storage space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section 
         */
        public static final int memory_size=0x7f0803ca;
        /**  Label for app list of memory use [CHAR LIMIT=30] 
         */
        public static final int memory_usage=0x7f080af8;
        /**  Label for button that leads to list of apps and their memory usage [CHAR LIMIT=40]
         */
        public static final int memory_usage_apps=0x7f080b03;
        /**  Formatting for memory description [CHAR LIMIT=25] 
         */
        public static final int memory_use_running_format=0x7f080ad3;
        /**  Summary for how much memory an app has used [CHAR LIMIT=NONE] 
         */
        public static final int memory_use_summary=0x7f080afb;
        /**  Edit access point screen menu option to discard the user's changes for this APN 
         */
        public static final int menu_cancel=0x7f080459;
        /**  Edit access point screen menu option to delete this APN 
         */
        public static final int menu_delete=0x7f080456;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_12h=0x7f080723;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_1d=0x7f080724;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_3h=0x7f080721;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_6h=0x7f080722;
        /**  [CHAR LIMIT=NONE] Menu for manage apps to control whether system processes are hidden 
         */
        public static final int menu_hide_system=0x7f080726;
        /**  APNs screen menu option to create a brand spanking new APN 
         */
        public static final int menu_new=0x7f080457;
        /**  [CHAR LIMIT=NONE] Menu for process stats to select duration of stats to show 
         */
        public static final int menu_proc_stats_duration=0x7f080717;
        /**  [CHAR LIMIT=NONE] Menu for process stats to select which type of stats to show 
         */
        public static final int menu_proc_stats_type=0x7f080729;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on background processes 
         */
        public static final int menu_proc_stats_type_background=0x7f08072a;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on cached processes 
         */
        public static final int menu_proc_stats_type_cached=0x7f08072c;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on foreground processes 
         */
        public static final int menu_proc_stats_type_foreground=0x7f08072b;
        /**  APNs screen menu option to reset default APN settings 
         */
        public static final int menu_restore=0x7f080460;
        /**  Edit access point screen menu option to save the user's changes for this APN to the persistent storage 
         */
        public static final int menu_save=0x7f080458;
        /**  [CHAR LIMIT=NONE] Menu for process stats to control whether stats are shown
         as percentages
         */
        public static final int menu_show_percentage=0x7f080727;
        /**  [CHAR LIMIT=NONE] Menu for manage apps to control whether system processes are shown 
         */
        public static final int menu_show_system=0x7f080725;
        /**  Menu label for viewing battery usage since unplugged 
         */
        public static final int menu_stats_last_unplugged=0x7f0806fb;
        /**  Menu label for refreshing with latest usage numbers 
         */
        public static final int menu_stats_refresh=0x7f0806fd;
        /**  Menu label for viewing battery usage total 
         */
        public static final int menu_stats_total=0x7f0806fc;
        /**  Menu label for viewing battery usage since unplugged 
         */
        public static final int menu_stats_unplugged=0x7f0806fa;
        /**  [CHAR LIMIT=NONE] Menu for process stats to control whether computation should be based
        on Uss (Unique Set Size) instead of Pss (Proportional Set Size) 
         */
        public static final int menu_use_uss=0x7f080728;
        /**  Misc files [CHAR LIMIT=25] 
         */
        public static final int misc_files=0x7f080814;
        /**  number of misc files selected [CHAR LIMIT=40] 
         */
        public static final int misc_files_selected_count=0x7f080815;
        /**  number of bytes represented by the selected misc files [CHAR LIMIT=40] 
         */
        public static final int misc_files_selected_count_bytes=0x7f080816;
        /**  Ask user to connect to the internet [CHAR_ LIMIT=50]
         */
        public static final int mobile_connect_to_internet=0x7f0804a0;
        /**  Setting Checkbox title whether to always keep cellular data active. [CHAR LIMIT=80] 
         */
        public static final int mobile_data_always_on=0x7f080607;
        public static final int mobile_data_always_on_summary=0x7f080612;
        /**  Ask user to insert a SIM card [CHAR_ LIMIT=50]
         */
        public static final int mobile_insert_sim_card=0x7f08049f;
        /**  There is no mobile provisiong website for the operator which is the firat parameter [CHAR_ LIMIT=50]
         */
        public static final int mobile_no_provisioning_url=0x7f08049e;
        /**  The SIM operator is not known [CHAR_ LIMIT=50]
         */
        public static final int mobile_unknown_sim_operator=0x7f08049d;
        /**  UI debug setting: select current app to mock location [CHAR LIMIT=50] 
         */
        public static final int mock_location_app=0x7f0805fd;
        /**  UI debug setting: no mock location app has been set [CHAR LIMIT=50] 
         */
        public static final int mock_location_app_not_set=0x7f0805fe;
        /**  UI debug setting: mock location app has been set [CHAR LIMIT=50] 
         */
        public static final int mock_location_app_set=0x7f0805ff;
        /**  About phone screen, status item label  [CHAR LIMIT=40] 
         */
        public static final int model_number=0x7f0803a3;
        /**  Manage applications, text for Move button 
         */
        public static final int move_app=0x7f080561;
        /**  Manage applications, text for dialog moving an app 
         */
        public static final int move_app_failed_dlg_text=0x7f08056d;
        /**  Manage applications, text for dialog when moving an app 
         */
        public static final int move_app_failed_dlg_title=0x7f08056c;
        /**  Manage applications, text for Move button to move app to internal storage 
         */
        public static final int move_app_to_internal=0x7f080562;
        /**  Manage applications, text for Move button  to move app to sdcard 
         */
        public static final int move_app_to_sdcard=0x7f080563;
        /**  Manage applications, title for dialog when killing persistent apps
 Manage applications, text for Move button when move is in progress 
         */
        public static final int moving=0x7f080564;
        /**  SD card & phone storage settings item summary that will result in the phone connected to PC and MTP/PTP enabled.   [CHAR LIMIT=80] 
         */
        public static final int mtp_ptp_mode_summary=0x7f0803dc;
        /**  Sound settings screen, music effects title [CHAR LIMIT=30]
         */
        public static final int musicfx_title=0x7f08032e;
        /**  Edit Mvno Match Data Info of APN 
         */
        public static final int mvno_match_data=0x7f080455;
        /**  Edit Mvno Type Info of APN 
         */
        public static final int mvno_type=0x7f080454;
        /**  Network operators settings title.  [CHAR LIMIT=50] 
         */
        public static final int network_operators_settings=0x7f08096b;
        /**  Error message for users that aren't allowed to reset network settings [CHAR LIMIT=none] 
         */
        public static final int network_reset_not_available=0x7f080468;
        /**  Wifi Assistant request message.  This message asks the user if it is okay for an app to become the Wifi Assistant instead of the current Wifi Assistant app. [CHAR LIMIT=100] 
         */
        public static final int network_scorer_change_active_dialog_text=0x7f08049b;
        /**  Wifi Assistant change wi-fi assistant title.  [CHAR LIMIT=40] 
         */
        public static final int network_scorer_change_active_dialog_title=0x7f08049a;
        /**  Wifi Assistant request message.  This message asks the user if it is okay for an app to become the Wifi Assistant. [CHAR LIMIT=100] 
         */
        public static final int network_scorer_change_active_no_previous_dialog_text=0x7f08049c;
        /**  Wireless controls, item title to go into the network settings 
         */
        public static final int network_settings_title=0x7f080494;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int network_state_label=0x7f080313;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int networkid_label=0x7f08031b;
        /**  mobile network settings screen, setting option name 
         */
        public static final int networks=0x7f080151;
        /**  Prompt for the user to enter a new full-backup password 
         */
        public static final int new_backup_pw_prompt=0x7f0808da;
        /**  Used in setup wizard Wi-Fi screen. The button label for going to the next screen and submitting. [CHAR LIMIT=20] 
         */
        public static final int next_label=0x7f08012f;
        /**  Content for text explaning how to pay at a payment terminal in a store 
         */
        public static final int nfc_how_it_works_content=0x7f080933;
        /**  Button the user can click to indicate he understood and dismiss the screen 
         */
        public static final int nfc_how_it_works_got_it=0x7f080934;
        /**  Header for text explaning how to pay at a payment terminal in a store 
         */
        public static final int nfc_how_it_works_title=0x7f080932;
        /**  NFC More... title.  [CHAR LIMIT=40] 
         */
        public static final int nfc_more_title=0x7f080935;
        public static final int nfc_nonpayment_contextual_hce_enough_title=0x7f080b3f;
        public static final int nfc_nonpayment_contextual_hce_full_title=0x7f080b40;
        public static final int nfc_nonpayment_contextual_sim_enough_title=0x7f080b3e;
        public static final int nfc_nonpayment_contextual_sim_full_title=0x7f080b3d;
        public static final int nfc_nonpayment_explanation_title=0x7f080b3c;
        public static final int nfc_nonpayment_service_space_summary=0x7f080b41;
        /** Add by Ji.Chen for FR  882779 begin
         */
        public static final int nfc_nonpayment_settings_title=0x7f080b3b;
        /**  String indicating the label of the default payment app and a description of its state; eg Google Wallet - MasterCard 1234 
         */
        public static final int nfc_payment_app_and_desc=0x7f08092d;
        /**  Header text that can be clicked on to change the default payment app 
         */
        public static final int nfc_payment_default=0x7f08092b;
        /**  Summary text that is shown when no default app is set 
         */
        public static final int nfc_payment_default_not_set=0x7f08092c;
        /**  Always use the default app (independent of what app is open) 
         */
        public static final int nfc_payment_favor_default=0x7f08092f;
        /**  If open app supports TapPay, use that app instead of the default 
         */
        public static final int nfc_payment_favor_open=0x7f080930;
        /**  Caption for button linking to a page explaining how Tap and Pay works
         */
        public static final int nfc_payment_how_it_works=0x7f080929;
        /**  String shown when there are no NFC payment applications installed 
         */
        public static final int nfc_payment_no_apps=0x7f08092a;
        /**  Header for a dialog asking the user which payment app to use 
         */
        public static final int nfc_payment_pay_with=0x7f080931;
        public static final int nfc_payment_set_default=0x7f080937;
        public static final int nfc_payment_set_default_instead_of=0x7f080938;
        /**  Label for the dialog that is shown when the user is asked to set a
         preferred payment application 
         */
        public static final int nfc_payment_set_default_label=0x7f080936;
        public static final int nfc_payment_settings_title=0x7f080928;
        /**  Header for what to do when the open app supports TapPay: use the default set app, or the open app 
         */
        public static final int nfc_payment_use_default=0x7f08092e;
        /**  Description of NFC in the 1st level settings screen, for a phone. [CHAR LIMIT=NONE] 
         */
        public static final int nfc_quick_toggle_summary=0x7f08025c;
        /**  NFC settings 
 Used in the 1st-level settings screen to turn on NFC 
         */
        public static final int nfc_quick_toggle_title=0x7f08025b;
        /**  Sound & display settings screen, theme setting value to automatically switch between a light- or dark-colored user interface [CHAR LIMIT=30] 
         */
        public static final int night_mode_auto=0x7f08036a;
        /**  Sound & display settings screen, theme setting value to prefer a light-colored user interface [CHAR LIMIT=30] 
         */
        public static final int night_mode_no=0x7f080368;
        /**  Sound & display settings screen, setting option summary to change the user interface theme [CHAR LIMIT=100] 
         */
        public static final int night_mode_summary=0x7f080367;
        /**  Sound & display settings screen, setting option name to change the user interface theme [CHAR LIMIT=30] 
         */
        public static final int night_mode_title=0x7f080366;
        /**  Sound & display settings screen, theme setting value to prefer a dark-colored user interface [CHAR LIMIT=30] 
         */
        public static final int night_mode_yes=0x7f080369;
        /**  Strings for Dialog no button 
         */
        public static final int no=0x7f080066;
        /**  UI debug setting: label for app picker to select no applicatiojn [CHAR LIMIT=50] 
         */
        public static final int no_application=0x7f08081f;
        /**  [CHAR LIMIT=25] Text shown when there are no applications to display. 
         */
        public static final int no_applications=0x7f080545;
        /**  Summary for app with no battery usage [CHAR LIMIT=NONE] 
         */
        public static final int no_battery_summary=0x7f080ade;
        /**  Summary of data item when no data usage [CHAR LIMIT=40] 
         */
        public static final int no_data_usage=0x7f080b06;
        /**  [CHAR LIMIT=25] Text shown when there are no default Apps 
         */
        public static final int no_default_apps=0x7f08057a;
        /**  Message when there are no available device admins to display 
         */
        public static final int no_device_admins=0x7f0807af;
        public static final int no_internet_access_remember=0x7f0802c9;
        /**  Dialog text to tell the user that the selected network does not have Internet access. 
         */
        public static final int no_internet_access_text=0x7f0802c8;
        /**  Summary for no memory use for an app [CHAR LIMIT=NONE] 
         */
        public static final int no_memory_use_summary=0x7f080afc;
        /**  String to show in the list of notification listeners, when none is installed 
         */
        public static final int no_notification_listeners=0x7f080a0b;
        /**  [CHAR LIMIT=25] Text shown when there are no services running 
         */
        public static final int no_running_services=0x7f080581;
        /**  Message displayed when there are no active services in a process. 
         */
        public static final int no_services=0x7f080597;
        /**  Message when there are no available trust agents to display 
         */
        public static final int no_trust_agents=0x7f0807b3;
        /**  [CHAR LIMIT=30] Manage applications, text telling using an application is not installed for the current user. The key part is that it's not installed. 
         */
        public static final int not_installed=0x7f080544;
        /**  [CHAR LIMIT=NONE] Content description for per-app notification
         settings button 
         */
        public static final int notification_app_settings_button=0x7f080a54;
        /**  Summary for a warning message about security implications of enabling a notification
          listener, displayed as a dialog message. [CHAR LIMIT=NONE] 
         */
        public static final int notification_listener_security_warning_summary=0x7f080a0d;
        /**  Title for a warning message about security implications of enabling a notification
          listener, displayed as a dialog message. [CHAR LIMIT=NONE] 
         */
        public static final int notification_listener_security_warning_title=0x7f080a0c;
        public static final int notification_log_title=0x7f0807bd;
        /**  Sound & notification > Notification section: Title for the pulse notification light option. [CHAR LIMIT=30] 
         */
        public static final int notification_pulse_title=0x7f0809f4;
        /**  Sound & notification > Sound section: Title for the option defining the default notification ringtone. [CHAR LIMIT=30] 
         */
        public static final int notification_ringtone_title=0x7f0809f0;
        /**  Sound & notification: Notification section header [CHAR LIMIT=30] 
         */
        public static final int notification_section_header=0x7f0809f2;
        /**  Sounds and Notification 
 Sound & notification: Settings header. [CHAR LIMIT=30] 
         */
        public static final int notification_settings=0x7f0809e3;
        /**  [CHAR LIMIT=20] Notifications settings: Apps section header 
         */
        public static final int notification_settings_apps_title=0x7f080a53;
        /**  Sound settings screen, setting option title
         */
        public static final int notification_sound_dialog_title=0x7f080336;
        /**  Sound settings screen, setting option name 
         */
        public static final int notification_sound_title=0x7f080331;
        /**  Sound & notification > Sound section: Title for the option managing notification volume. [CHAR LIMIT=30] 
         */
        public static final int notification_volume_option_title=0x7f0809e7;
        /**  Sound settings screen, the title of the volume bar to adjust the notification volume 
         */
        public static final int notification_volume_title=0x7f080333;
        /**  App notification summary with notifications disabled [CHAR LIMIT=40] 
         */
        public static final int notifications_disabled=0x7f080a92;
        /**  App notification summary with notifications enabled [CHAR LIMIT=40] 
         */
        public static final int notifications_enabled=0x7f080a91;
        /**  Label for notification settings for an specific app [CHAR LIMIT=40] 
         */
        public static final int notifications_label=0x7f080a90;
        /**  App notification summary with notification peeking disabled [CHAR LIMIT=40] 
         */
        public static final int notifications_no_peeking=0x7f080a95;
        /**  App notification summary with notifications priority [CHAR LIMIT=40] 
         */
        public static final int notifications_priority=0x7f080a94;
        /**  App notification summary with notifications sensitive [CHAR LIMIT=40] 
         */
        public static final int notifications_sensitive=0x7f080a93;
        /**  App notification summary with 3 items [CHAR LIMIT=15] 
         */
        public static final int notifications_three_items=0x7f080a97;
        /**  App notification summary with 2 items [CHAR LIMIT=15] 
         */
        public static final int notifications_two_items=0x7f080a96;
        /**  Description of NFC in the 1st level settings screen. [CHAR LIMIT=NONE] 
         */
        public static final int nsd_quick_toggle_summary=0x7f080264;
        /**  Network service discovery settings 
 Used in the 1st-level settings screen to turn on NSD 
         */
        public static final int nsd_quick_toggle_title=0x7f080263;
        /**  Full package name of OEM preferred device feedback reporter [DO NOT TRANSLATE] 
         */
        public static final int oem_preferred_feedback_reporter=0x7f080a56;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int oem_radio_info_label=0x7f08011d;
        /**  setting Checkbox title whether to enable OEM unlock [CHAR_LIMIT=35] 
         */
        public static final int oem_unlock_enable=0x7f0805f8;
        /**  setting Checkbox summary whether to enable OEM unlock [CHAR_LIMIT=50] 
         */
        public static final int oem_unlock_enable_summary=0x7f0805f9;
        /**  Button label for generic OK action [CHAR LIMIT=20] 
         */
        public static final int okay=0x7f080139;
        /**  Message to user that Home Settings will be hidden because there is now only one available home application 
         */
        public static final int only_one_home_message=0x7f080924;
        /**  Summary for on-screen keyboard settings 
         */
        public static final int onscreen_keyboard_settings_summary=0x7f0805e6;
        /**  Opening string on the dialog that prompts the user to confirm that they really want to delete their existing work profile. The administration app icon and name appear after the final colon. [CHAR LIMIT=NONE] 
         */
        public static final int opening_paragraph_delete_profile_unknown_company=0x7f080a61;
        /**  Sound & notification > Sound section: Title for the other sounds option and associated settings page. [CHAR LIMIT=30] 
         */
        public static final int other_sound_settings=0x7f0809fc;
        /**  UI debug setting: simulate secondary display devices using overlays [CHAR LIMIT=25] 
         */
        public static final int overlay_display_devices_title=0x7f080849;
        /**  Main settings screen item's title to go into the overlay settings screen [CHAR LIMIT=30] 
         */
        public static final int overlay_settings=0x7f080b1a;
        /**  Hint text shown in owner info edit text [CHAR LIMIT=50] 
         */
        public static final int owner_info_settings_edit_text_hint=0x7f080172;
        /**  Description of how many characters are used in owner info [CHAR LIMIT=40]
         */
        public static final int owner_info_settings_status=0x7f080171;
        /**  Text shown for summary of owner info setting (if none set) [CHAR LIMIT=40]
         */
        public static final int owner_info_settings_summary=0x7f080170;
        /**  Text shown for title of owner info setting [CHAR LIMIT=20]
         */
        public static final int owner_info_settings_title=0x7f08016d;
        /**  Subtitle for list of packages 
         */
        public static final int packages_subtitle=0x7f0806bf;
        /**  Content for Passpoint network 
         */
        public static final int passpoint_content=0x7f0802af;
        /**  Label for Passpoint network 
         */
        public static final int passpoint_label=0x7f0802ae;
        /**  Manage applications, individual application info screen, heading for settings related to the app's permissions. for example, it may list all the permissions the app has. 
         */
        public static final int permissions_label=0x7f080518;
        /**  Label for setting which controls whether app can draw overlays [CHAR LIMIT=45] 
         */
        public static final int permit_draw_overlay=0x7f080b16;
        /**  Label for setting which controls whether app has usage access [CHAR LIMIT=45] 
         */
        public static final int permit_usage_access=0x7f080ac7;
        /**  Label for setting which controls whether app can write system settings [CHAR LIMIT=45] 
         */
        public static final int permit_write_settings=0x7f080b26;
        /**  Personal data section title 
         */
        public static final int personal_data_section_title=0x7f080798;
        /**  Title for personal device admins on the list [CHAR_LIMIT=25] 
         */
        public static final int personal_device_admin_title=0x7f0807b1;
        /**  The title of the activity to see phone info 
         */
        public static final int phone_info_label=0x7f080135;
        /**  On Text & language settings screen, setting option name. title of the setting to take the user to a screen to select the locale. 
         */
        public static final int phone_language=0x7f0805a9;
        /**  On Text & language settings screen, setting option name. summary of the setting to take the user to a screen to select the locale. 
         */
        public static final int phone_language_summary=0x7f0805aa;
        /**  On Pico TTS Settings screen, text to mark a voice as installed 
         */
        public static final int pico_installed=0x7f08075f;
        /**  On Pico TTS Settings screen, text to mark the section for the various languages and voices that are available 
         */
        public static final int pico_languages_and_voices=0x7f08075e;
        /**  On Pico TTS Settings screen, text to mark a voice as not installed 
         */
        public static final int pico_not_installed=0x7f080760;
        /**  On Pico TTS Settings screen, summary text to indicate that a voice is female 
         */
        public static final int pico_voice_summary_female=0x7f080761;
        /**  On Pico TTS Settings screen, summary text to indicate that a voice is male 
         */
        public static final int pico_voice_summary_male=0x7f080762;
        /**  Name of feature to change color setting for the display [CHAR LIMIT=60] 
         */
        public static final int picture_color_mode=0x7f080b48;
        /**  Description of feature to change color setting for the display [CHAR LIMIT=NONE] 
         */
        public static final int picture_color_mode_desc=0x7f080b49;
        /**  Instructions telling the user that the operation to unlock the keyguard with SIM PIN failed. Displayed in one line in a large font.  [CHAR LIMIT=40] 
         */
        public static final int pin_failed=0x7f08039d;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int ping_test_label=0x7f080118;
        /**  Label for the phase2 
         */
        public static final int please_select_phase2=0x7f0802b1;
        /**  UI debug setting: show pointer location? [CHAR LIMIT=25] 
         */
        public static final int pointer_location=0x7f080829;
        /**  UI debug setting: show pointer location summary [CHAR LIMIT=50] 
         */
        public static final int pointer_location_summary=0x7f08082a;
        /**  On Language & input settings screen, heading. Inside the "Language & input settings" screen, this is the header for settings that relate to mouse and trackpad devices. [CHAR LIMIT=40] 
         */
        public static final int pointer_settings_category=0x7f0805b8;
        /**  On Language & input settings screen, setting summary.  Setting for mouse pointer speed. [CHAR LIMIT=35] 
         */
        public static final int pointer_speed=0x7f0805b9;
        /**  Label for power consumed by Bluetooth 
         */
        public static final int power_bluetooth=0x7f0806c4;
        /**  Label for power consumed by the camera 
         */
        public static final int power_camera=0x7f0806c2;
        /**  Label for power consumed by Cell idle 
         */
        public static final int power_cell=0x7f0806c5;
        /**  Display time remaining until battery is charged [CHAR_LIMIT=60] 
         */
        public static final int power_charge_remaining=0x7f0806a3;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging 
         */
        public static final int power_charging=0x7f0806a5;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging with duration 
         */
        public static final int power_charging_duration=0x7f0806a6;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging with duration 
         */
        public static final int power_charging_duration_ac=0x7f0806a7;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging with duration 
         */
        public static final int power_charging_duration_usb=0x7f0806a8;
        /**  [CHAR_LIMIT=40] Label for battery level chart when charging with duration 
         */
        public static final int power_charging_duration_wireless=0x7f0806a9;
        /**  Display time remaining until battery is discharged [CHAR_LIMIT=60] 
         */
        public static final int power_discharge_remaining=0x7f0806a2;
        /**  [CHAR_LIMIT=40] Label for battery level chart when discharging with duration 
         */
        public static final int power_discharging_duration=0x7f0806a4;
        /**  Label for power consumed by the flashlight 
         */
        public static final int power_flashlight=0x7f0806c1;
        /**  Label for power consumed when Idle 
         */
        public static final int power_idle=0x7f0806c7;
        /**  Label for power that we computed too much for 
         */
        public static final int power_overcounted=0x7f0806c9;
        /**  Label for power consumed by Calling 
         */
        public static final int power_phone=0x7f0806c6;
        /**  Label for power consumed by the screen 
         */
        public static final int power_screen=0x7f0806c0;
        /**  Label for power that we aren't able to account for 
         */
        public static final int power_unaccounted=0x7f0806c8;
        /**  Display the battery level and status [CHAR_LIMIT=60] 
         */
        public static final int power_usage_level_and_status=0x7f0806a1;
        /**  [CHAR_LIMIT=40] Label for list of apps using battery in power use UI 
         */
        public static final int power_usage_list_summary=0x7f0806aa;
        /**  Message to show when battery usage data is not available [CHAR LIMIT=30] 
         */
        public static final int power_usage_not_available=0x7f0806a0;
        /**  Activity title summary for App Fuel Gauge summary 
         */
        public static final int power_usage_summary=0x7f08069f;
        /**  Activity title for App Fuel Gauge summary 
         */
        public static final int power_usage_summary_title=0x7f08069e;
        /**  Label for power consumed by Wi-Fi 
         */
        public static final int power_wifi=0x7f0806c3;
        public static final int ppp_number=0x7f08044f;
        /**  Preference item that lets the user change password 
         */
        public static final int preference_change_password_title=0x7f0807fd;
        /**  Preferred Network offload Footer.  [CHAR LIMIT=100] 
         */
        public static final int preferred_network_offload_footer=0x7f0809a6;
        /**  Preferred Network offload Header.  [CHAR LIMIT=25] 
         */
        public static final int preferred_network_offload_header=0x7f0809a5;
        /**  Preferred Network offload Popup.  [CHAR LIMIT=100] 
         */
        public static final int preferred_network_offload_popup=0x7f0809a7;
        /**  Preferred Network offload title.  [CHAR LIMIT=25] 
         */
        public static final int preferred_network_offload_title=0x7f0809a4;
        /**  Preferred network type summary.  [CHAR LIMIT=100] 
         */
        public static final int preferred_network_type_summary=0x7f080970;
        /**  Preferred network type title.  [CHAR LIMIT=50] 
         */
        public static final int preferred_network_type_title=0x7f08096f;
        /** Add by Ji.Chen for FR  882779 end
         */
        public static final int primary_sub_select_title=0x7f080b42;
        /**  Template for the label of the state for a blocked print job. [CHAR LIMIT=25] 
         */
        public static final int print_blocked_state_title_template=0x7f08069b;
        /**  Title for the button to cancel a print job. [CHAR LIMIT=25] 
         */
        public static final int print_cancel=0x7f080696;
        /**  Template for the label for a cancelling print job. [CHAR LIMIT=25] 
         */
        public static final int print_cancelling_state_title_template=0x7f080699;
        /**  Template for the label of the state for a failed print job. [CHAR LIMIT=25] 
         */
        public static final int print_failed_state_title_template=0x7f08069a;
        /**  Summary for the disabled state of a print feature. [CHAR LIMIT=10] 
         */
        public static final int print_feature_state_off=0x7f08068d;
        /**  Summary for the enabled state of a print feature. [CHAR LIMIT=10] 
         */
        public static final int print_feature_state_on=0x7f08068c;
        /**  Template for the summary of a print job. [CHAR LIMIT=25] 
         */
        public static final int print_job_summary=0x7f080697;
        /**  Title of the action bar button to got to add a printer. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_printer=0x7f08068f;
        /**  Title for print menu item to launch the add printers activity. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_printers=0x7f08068b;
        /**  Title of the action bar button to got to Play Store to download a print service. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_service=0x7f08068e;
        /**  Title for the search action bar menu item. [CHAR LIMIT=20] 
         */
        public static final int print_menu_item_search=0x7f080690;
        /**  Title for print menu item to launch a settings activity. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_settings=0x7f08068a;
        /**  Title for the prompt shown as a placeholder if no printers are found while searching. [CHAR LIMIT=50] 
         */
        public static final int print_no_printers_found=0x7f080689;
        /**  Title for the prompt shown as a placeholder if no print serivices are installed. [CHAR LIMIT=50] 
         */
        public static final int print_no_services_installed=0x7f080688;
        /**  Title for the print job settings screen. [CHAR LIMIT=25] 
         */
        public static final int print_print_job=0x7f080694;
        /**  Title for the menu item to open the print jobs screen. [CHAR LIMIT=25] 
         */
        public static final int print_print_jobs=0x7f080693;
        /**  Template for the label of the state for a ongoing print job. [CHAR LIMIT=25] 
         */
        public static final int print_printing_state_title_template=0x7f080698;
        /**  Title for the button to restart a print job. [CHAR LIMIT=25] 
         */
        public static final int print_restart=0x7f080695;
        /**  Utterance to announce that the search box is hidden. This is spoken to a blind user. [CHAR LIMIT=none] 
         */
        public static final int print_search_box_hidden_utterance=0x7f08069d;
        /**  Utterance to announce that the search box is shown. This is spoken to a blind user. [CHAR LIMIT=none] 
         */
        public static final int print_search_box_shown_utterance=0x7f08069c;
        /**  Title for the prompt if no printers are available and the system is searching for such. [CHAR LIMIT=50] 
         */
        public static final int print_searching_for_printers=0x7f080691;
        /**  Title for the prompt if no printers are available because the print service is disabled. [CHAR LIMIT=50] 
         */
        public static final int print_service_disabled=0x7f080692;
        /**  Summary for a warning message about security implications of enabling a print service,
         displayed as a dialog message when the user selects to enable a print service. [CHAR LIMIT=NONE] 
         */
        public static final int print_service_security_warning_summary=0x7f080687;
        /**  Title for a warning message about security implications of enabling a print service,
         displayed as a dialog message when the user selects to enable a print service (tablet). [CHAR LIMIT=NONE] 
         */
        public static final int print_service_security_warning_title=0x7f080686;
        /**  Title in main settings screen for printing settings [CHAR LIMIT=15] 
         */
        public static final int print_settings=0x7f080684;
        /**  Title for print service settings screen [CHAR LIMIT=25] 
         */
        public static final int print_settings_title=0x7f080685;
        /**  Backup and reset settings menu title 
         */
        public static final int privacy_settings=0x7f080795;
        /**  Privacy settings activity title 
         */
        public static final int privacy_settings_title=0x7f080796;
        /**  Label for dex2oat process in battery usage used for the optimization of one or more apps 
         */
        public static final int process_dex2oat_label=0x7f080700;
        /**  Label for process [CHAR LIMIT=25] 
         */
        public static final int process_format=0x7f080ad4;
        /**  Label for kernel threads in battery usage 
         */
        public static final int process_kernel_label=0x7f0806fe;
        /**  Label for mediaserver process in battery usage 
         */
        public static final int process_mediaserver_label=0x7f0806ff;
        /**  Message that a process's provider is in use. 
         */
        public static final int process_provider_in_use_description=0x7f0805a2;
        /**  Message that a process's service is in use. 
         */
        public static final int process_service_in_use_description=0x7f0805a1;
        /**  [CHAR LIMIT=NONE] Label for item showing details of average RAM use 
         */
        public static final int process_stats_bg_ram_use=0x7f080713;
        /**  [CHAR LIMIT=NONE] Name of OS "process" for base memory needed for caches 
         */
        public static final int process_stats_os_cache=0x7f080711;
        /**  [CHAR LIMIT=NONE] Name of OS "process" for all kernel memory 
         */
        public static final int process_stats_os_kernel=0x7f08070f;
        /**  [CHAR LIMIT=NONE] Label OS "process" app 
         */
        public static final int process_stats_os_label=0x7f08070d;
        /**  [CHAR LIMIT=NONE] Name of OS "process" for all native processes 
         */
        public static final int process_stats_os_native=0x7f08070e;
        /**  [CHAR LIMIT=NONE] Name of OS "process" for all zram memory 
         */
        public static final int process_stats_os_zram=0x7f080710;
        /**  [CHAR LIMIT=NONE] Label for item showing details of average RAM use 
         */
        public static final int process_stats_ram_use=0x7f080712;
        /**  [CHAR LIMIT=NONE] Label for item showing percent of time spent running 
         */
        public static final int process_stats_run_time=0x7f080714;
        /**  [CHAR LIMIT=NONE] Activity title summary for Process Stats summary 
         */
        public static final int process_stats_summary=0x7f080706;
        /**  [CHAR LIMIT=NONE] Activity title for Process Stats summary 
         */
        public static final int process_stats_summary_title=0x7f080705;
        /**  [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over;
         timeDuration is a duration such as "1h 30m" 
         */
        public static final int process_stats_total_duration=0x7f080708;
        /**  [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over;
         timeDuration is a duration such as "1h 30m" 
         */
        public static final int process_stats_total_duration_percentage=0x7f080709;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_background=0x7f08070a;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_cached=0x7f08070c;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_foreground=0x7f08070b;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats processes list 
         */
        public static final int processes_subtitle=0x7f080715;
        /**  Text shown for title of profile info setting [CHAR LIMIT=20]
         */
        public static final int profile_info_settings_title=0x7f080175;
        /**  Title for screen to set a profile owner [CHAR LIMIT=40] 
         */
        public static final int profile_owner_add_title=0x7f0807b9;
        /** Bluetooth settings screen, text that appears in heading bar when scanning for devices 
         */
        public static final int progress_scanning=0x7f0800c1;
        /**  What to show in messaging that refers to this provider, e.g. AccountSyncSettings 
         */
        public static final int provider_label=0x7f080805;
        /**  HTTP proxy settings. The button to save. 
         */
        public static final int proxy_action_text=0x7f0800f0;
        /**  HTTP proxy settings. Button to clear the proxy box. 
         */
        public static final int proxy_clear_text=0x7f0800ea;
        /**  HTTP proxy settings. The button to restore the defaults. 
         */
        public static final int proxy_defaultView_text=0x7f0800ef;
        /**  HTTP proxy settings. Title if there is an error
         */
        public static final int proxy_error=0x7f0800f3;
        /**  HTTP proxy settings. Button to get rid of error box
         */
        public static final int proxy_error_dismiss=0x7f0800f4;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_empty_host_set_port=0x7f0800f8;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_empty_port=0x7f0800f7;
        /**  HTTP proxy settings. The error if the exclusion list is not valid 
         */
        public static final int proxy_error_invalid_exclusion_list=0x7f0800f6;
        /**  HTTP proxy settings. The error if the hostname is not valid 
         */
        public static final int proxy_error_invalid_host=0x7f0800f5;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_invalid_port=0x7f0800f9;
        /**  HTTP proxy settings. The hint text for proxy exclusion list. [CHAR LIMIT=50]
         */
        public static final int proxy_exclusionlist_hint=0x7f0800ee;
        /**  HTTP proxy settings. The exclusion list label. 
         */
        public static final int proxy_exclusionlist_label=0x7f0800ed;
        /**  HTTP proxy settings. The hint text field for the hostname. [CHAR LIMIT=50] 
         */
        public static final int proxy_hostname_hint=0x7f0800f2;
        /**  HTTP proxy settings. The text field for the hostname 
         */
        public static final int proxy_hostname_label=0x7f0800f1;
        /**  HTTP proxy settings. The hint text field for port. 
         */
        public static final int proxy_port_hint=0x7f0800ec;
        /**  HTTP proxy settings. The port number label. 
         */
        public static final int proxy_port_label=0x7f0800eb;
        /**  The title of the activity to adjust proxy settings 
         */
        public static final int proxy_settings_label=0x7f080137;
        /**  HTTP proxy settings title 
         */
        public static final int proxy_settings_title=0x7f0800e9;
        /**  HTTP proxy settings. Hint for Proxy-Auto Config URL. 
         */
        public static final int proxy_url_hint=0x7f0800fc;
        /**  HTTP proxy settings. Title for Proxy-Auto Config URL.  [CHAR LIMIT=25] 
         */
        public static final int proxy_url_title=0x7f0800fb;
        /**  HTTP proxy settings. Warning message about limited application support [CHAR LIMIT=100]
         */
        public static final int proxy_warning_limited_support=0x7f0800fa;
        /**  Text used as a search hint into the search box 
         */
        public static final int query_hint_text=0x7f0809b2;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_cid=0x7f080096;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_connected=0x7f08008e;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_connecting=0x7f08008d;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_disconnected=0x7f08008c;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_suspended=0x7f08008f;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_asu=0x7f080094;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_bytes=0x7f080092;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_dbm=0x7f080093;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_packets=0x7f080091;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_lac=0x7f080095;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_getPDP=0x7f080082;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewADN=0x7f08007f;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewFDN=0x7f080080;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewSDN=0x7f080081;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_idle=0x7f080089;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_offhook=0x7f08008b;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_ringing=0x7f08008a;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_roaming_in=0x7f080087;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_roaming_not=0x7f080088;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_emergency=0x7f080085;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_in=0x7f080083;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_off=0x7f080086;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_out=0x7f080084;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_unknown=0x7f080090;
        /**  Main Settings screen settings summary text for the "Wireless controls" setting 
         */
        public static final int radio_controls_summary=0x7f080143;
        /**  Main Settings screen settings title for things like airplane mode, tethering, NFC, VPN.  This will take you to another screen with those settings.  [CHAR LIMIT=30] 
         */
        public static final int radio_controls_title=0x7f080141;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_band_mode_label=0x7f080112;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_call_redirect_label=0x7f080105;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_call_status_label=0x7f08010d;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_cellinfo_label=0x7f0800ff;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_current_network_label=0x7f080108;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_data_attempts_label=0x7f080101;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_data_successes_label=0x7f080109;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_dcrtinfo_label=0x7f080100;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gprs_service_label=0x7f080102;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gsm_disconnects_label=0x7f080107;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gsm_service_label=0x7f08010b;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_http_client_test=0x7f080117;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_imei_label=0x7f080104;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_message_waiting_label=0x7f080110;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_neighboring_location_label=0x7f0800fe;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_network_type_label=0x7f080113;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_phone_number_label=0x7f080111;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ping_hostname=0x7f080116;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ping_ipaddr=0x7f080115;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_received_label=0x7f08010a;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_resets_label=0x7f080106;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_sent_label=0x7f08010e;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_radio_resets_label=0x7f08010f;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_roaming_label=0x7f080103;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_set_perferred_label=0x7f080114;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_signal_location_label=0x7f0800fd;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_signal_strength_label=0x7f08010c;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_label=0x7f080119;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_refresh_label=0x7f08011b;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_update_label=0x7f08011a;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_toggle_dns_check_label=0x7f08011c;
        /**  Description of app rarely running [CHAR LIMIT=45] 
         */
        public static final int rarely_running=0x7f080ace;
        /**  Remove account message in dialog [CHAR LIMIT=NONE] 
         */
        public static final int really_remove_account_message=0x7f080803;
        /**  Title of remove message for remove account dialog 
         */
        public static final int really_remove_account_title=0x7f080802;
        /**  Manage app screen, shown when the activity is busy recomputing the size of each app 
         */
        public static final int recompute_size=0x7f080549;
        /**  Text to display in regulatory info screen (from device overlay). 
         */
        public static final int regulatory_info_text=0x7f080987;
        /**  About phone settings screen, setting option name to show regulatory information [CHAR LIMIT=25] 
         */
        public static final int regulatory_information=0x7f0804cb;
        /**  This is shown if the autheticator for a given account fails to remove it. [CHAR LIMIT=NONE] 
         */
        public static final int remove_account_failed=0x7f080804;
        /**  Button label to remove current account 
         */
        public static final int remove_account_label=0x7f0807ff;
        /**  Label for button to remove the active device admin 
         */
        public static final int remove_device_admin=0x7f0807ad;
        /**  Button label to remove the work profile [CHAR LIMIT=35] 
         */
        public static final int remove_managed_profile_label=0x7f0807e7;
        /**  repeat title.  Allows the user to set how oftem to repeat alert reminders.
         For example, they may have alerts just once or every 2 or 15 minutes.  [CHAR LIMIT=30] 
         */
        public static final int repeat_title=0x7f080965;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Reset all of user's app preferences. 
         */
        public static final int reset_app_preferences=0x7f080537;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Confirmation button of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_button=0x7f08053a;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Body of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_desc=0x7f080539;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Title of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_title=0x7f080538;
        /**  SD card & phone storage settings screen, button on screen after user selects Reset network settings 
         */
        public static final int reset_network_button_text=0x7f080464;
        /**  Reset settings complete toast text [CHAR LIMIT=75] 
         */
        public static final int reset_network_complete_toast=0x7f080469;
        /**  Reset settings confirmation screen title [CHAR LIMIT=30] 
         */
        public static final int reset_network_confirm_title=0x7f080467;
        /**  SD card & phone storage settings screen, message on screen after user selects Reset network settings [CHAR LIMIT=NONE] 
         */
        public static final int reset_network_desc=0x7f080463;
        /**  SD card & phone storage settings screen, button on screen after user selects Reset settings button 
         */
        public static final int reset_network_final_button_text=0x7f080466;
        /**  SD card & phone storage settings screen, message on screen after user selects Reset settings button 
         */
        public static final int reset_network_final_desc=0x7f080465;
        /**  Reset Network 
 SD card & phone storage settings screen, setting option name under Backup & Restore heading 
         */
        public static final int reset_network_title=0x7f080462;
        /**  The message of dialog indicated restoring default APN settings in progress 
         */
        public static final int restore_default_apn=0x7f08045f;
        /**  APNs screen toast message to inform reset default APN settings is completed 
         */
        public static final int restore_default_apn_completed=0x7f080461;
        /**  PIN entry dialog title for entering the administrator PIN [CHAR LIMIT=none] 
         */
        public static final int restr_pin_enter_admin_pin=0x7f080a57;
        /**  Restrictions summary for changing bluetooth configuration [CHAR LIMIT=100] 
         */
        public static final int restriction_bluetooth_config_summary=0x7f08097b;
        /**  Restrictions title for changing bluetooth configuration [CHAR LIMIT=35] 
         */
        public static final int restriction_bluetooth_config_title=0x7f08097a;
        /**  Restrictions summary for allowing location sharing [CHAR LIMIT=100] 
         */
        public static final int restriction_location_enable_summary=0x7f080980;
        /**  Restrictions title for allowing location sharing [CHAR LIMIT=35] 
         */
        public static final int restriction_location_enable_title=0x7f08097f;
        /**  Restrictions screen - menu label to change restrictions pin [CHAR LIMIT=25] 
         */
        public static final int restriction_menu_change_pin=0x7f08093b;
        /**  Restrictions screen - reset menu to reset to unrestricted [CHAR LIMIT=25] 
         */
        public static final int restriction_menu_reset=0x7f08093a;
        /**  Restrictions summary for allowing NFC transfers (phone) [CHAR LIMIT=100] 
         */
        public static final int restriction_nfc_enable_summary=0x7f08097e;
        /**  Restrictions summary for allowing NFC transfers (tablet) [CHAR LIMIT=100] 
         */
        public static final int restriction_nfc_enable_summary_config=0x7f08097d;
        /**  Restrictions title for allowing NFC transfers [CHAR LIMIT=35] 
         */
        public static final int restriction_nfc_enable_title=0x7f08097c;
        /**  Restriction settings title [CHAR LIMIT=35] 
         */
        public static final int restriction_settings_title=0x7f080939;
        /**  Restrictions summary for configuring wifi and mobile [CHAR LIMIT=100] 
         */
        public static final int restriction_wifi_config_summary=0x7f080979;
        /**  Restrictions title for configuring wifi and mobile [CHAR LIMIT=35] 
         */
        public static final int restriction_wifi_config_title=0x7f080978;
        /**  Sound & notification > Sound section: Title for the option managing ringer volume. [CHAR LIMIT=30] 
         */
        public static final int ring_volume_option_title=0x7f0809e6;
        /**  Sound settings screen, setting option name 
         */
        public static final int ring_volume_title=0x7f08032f;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int ringtone_summary=0x7f08032c;
        /**  Sound & notification > Sound section: Title for the option defining the phone ringtone. [CHAR LIMIT=30] 
         */
        public static final int ringtone_title=0x7f0809ef;
        /**  mobile network settings screen, setting check box title 
         */
        public static final int roaming=0x7f080149;
        /**  mobile network settings screen, setting option summary text when check box is clear 
         */
        public static final int roaming_disable=0x7f08014b;
        /**  mobile network settings screen, setting option summary text when check box is selected 
         */
        public static final int roaming_enable=0x7f08014a;
        /**  mobile network settings screen, dialog message when you are roaming and clear the "Data roaming" check box 
         */
        public static final int roaming_reenable_message=0x7f08014c;
        /**  mobile network settings screen, title of dialog box that appears when you select the "Data roaming" check box 
         */
        public static final int roaming_reenable_title=0x7f080150;
        /**  mobile network settings screen, button on dialog box that appears when you are roaming and clear the "Data roaming" check box 
         */
        public static final int roaming_turn_it_on_button=0x7f08014d;
        /**  mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box 
         */
        public static final int roaming_warning=0x7f08014e;
        /**  mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box. This is for multiuser phones [CHAR LIMIT=none] 
         */
        public static final int roaming_warning_multiuser=0x7f08014f;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int rssi_label=0x7f080315;
        /**  Label for frequency that the app is runnig (e.g. always, sometimes, etc.) [CHAR LIMIT=25] 
         */
        public static final int running_frequency=0x7f080b04;
        /**  [CHAR LIMIT=NONE] Label of a running process that represents a removed 
         */
        public static final int running_process_item_removed_user_label=0x7f080589;
        /**  [CHAR LIMIT=NONE] Label of a running process that represents another user 
         */
        public static final int running_process_item_user_label=0x7f080588;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
         used by apps. 
         */
        public static final int running_processes_header_apps_prefix=0x7f080591;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing portion
         of free RAM that is used by cached apps. 
         */
        public static final int running_processes_header_cached_prefix=0x7f080594;
        /**  [CHAR LIMIT=NONE] Bottom test of the header leading in to the running
         processes/services list. 
         */
        public static final int running_processes_header_footer=0x7f08058f;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
         that is free. 
         */
        public static final int running_processes_header_free_prefix=0x7f080592;
        /**  [CHAR_LIMIT=20] Running processes/services header: formatter for RAM use amount. 
         */
        public static final int running_processes_header_ram=0x7f080595;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing RAM
         used by system. 
         */
        public static final int running_processes_header_system_prefix=0x7f080590;
        /**  [CHAR LIMIT=NONE] Top title of the header of the running processes/services list. 
         */
        public static final int running_processes_header_title=0x7f08058e;
        /**  [CHAR LIMIT=20] Running processes/services header: prefix for line showing total RAM
         used by everything. 
         */
        public static final int running_processes_header_used_prefix=0x7f080593;
        /**  Descriptive text of a running process: plural process, plural service. 
         */
        public static final int running_processes_item_description_p_p=0x7f08058d;
        /**  Descriptive text of a running process: plural process, singular service. 
         */
        public static final int running_processes_item_description_p_s=0x7f08058c;
        /**  Descriptive text of a running process: singular process, plural service. 
         */
        public static final int running_processes_item_description_s_p=0x7f08058b;
        /**  Descriptive text of a running process: singular process, singular service. 
         */
        public static final int running_processes_item_description_s_s=0x7f08058a;
        /**  Title for list of services. 
         */
        public static final int runningservicedetails_processes_title=0x7f080599;
        /**  Title for list of services. 
         */
        public static final int runningservicedetails_services_title=0x7f080598;
        /**  Details about an application's running services. 
         */
        public static final int runningservicedetails_settings_title=0x7f080596;
        /**  Running service details, stop confirmation descriptive text. Displays when user selects selects to stop a system service. 
         */
        public static final int runningservicedetails_stop_dlg_text=0x7f0805a4;
        /**  Running service details, stop confirmation dialog title. Displays when user selects selects to stop a system service. 
         */
        public static final int runningservicedetails_stop_dlg_title=0x7f0805a3;
        /**  Services settings screen, setting option summary for the user to go to the screen to view running services  
         */
        public static final int runningservices_settings_summary=0x7f08057e;
        /**  Services settings screen, setting option name for the user to go to the screen to view running services 
         */
        public static final int runningservices_settings_title=0x7f08057d;
        /**  Runtime permissions preference summary, shown when the app has no permissions granted. [CHAR LIMIT=40] 
         */
        public static final int runtime_permissions_summary_no_permissions_granted=0x7f080a98;
        /**  Runtime permissions preference summary, shown when the app requests no permissions. [CHAR LIMIT=40] 
         */
        public static final int runtime_permissions_summary_no_permissions_requested=0x7f080a99;
        /**  Button label for generic save action [CHAR LIMIT=20] 
         */
        public static final int save=0x7f08013b;
        /**  Summary for saved networks 
         */
        public static final int saved_network=0x7f080016;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int scan_list_label=0x7f08031d;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling application screen compatibility 
         */
        public static final int screen_compatibility_label=0x7f080517;
        /**  Manage applications, individual application info screen, screen, message text under screen compatibility heading 
         */
        public static final int screen_compatibility_text=0x7f08052e;
        /**  Sound & notification > Other sounds: Title for the option enabling touch sounds for screen locking sounds. [CHAR LIMIT=30] 
         */
        public static final int screen_locking_sounds_title=0x7f0809fe;
        /**  [CHAR LIMIT=300] Screen pinning description 
         */
        public static final int screen_pinning_description=0x7f080a5b;
        /**  [CHAR LIMIT=28] Screen pinning title 
         */
        public static final int screen_pinning_title=0x7f080a5a;
        /**  [CHAR LIMIT=60] Unlock setting for screen pinning 
         */
        public static final int screen_pinning_unlock_none=0x7f080a5f;
        /**  [CHAR LIMIT=60] Unlock setting for screen pinning 
         */
        public static final int screen_pinning_unlock_password=0x7f080a5e;
        /**  [CHAR LIMIT=60] Unlock setting for screen pinning 
         */
        public static final int screen_pinning_unlock_pattern=0x7f080a5c;
        /**  [CHAR LIMIT=60] Unlock setting for screen pinning 
         */
        public static final int screen_pinning_unlock_pin=0x7f080a5d;
        /**  Sound & display settings screen, setting option name to change screen timeout 
         */
        public static final int screen_timeout=0x7f08036b;
        /**  Sound & display settings screen, setting option summary to change screen timeout 
         */
        public static final int screen_timeout_summary=0x7f08036d;
        /**  Sound & display settings screen, setting option name to change screen timeout [CHAR LIMIT=30] 
         */
        public static final int screen_timeout_title=0x7f08036c;
        /**  Dream settings screen, button label for settings for a specific screensaver 
         */
        public static final int screensaver_settings_button=0x7f080379;
        /**  Dream settings screen, caption for when dreams are disabled 
         */
        public static final int screensaver_settings_disabled_prompt=0x7f080376;
        /**  Dream settings screen, button label to start dreaming 
         */
        public static final int screensaver_settings_dream_start=0x7f080378;
        /**  Display settings screen, summary fragment for screen saver options, activated when docked  
         */
        public static final int screensaver_settings_summary_dock=0x7f080374;
        /**  Display settings screen, summary fragment for screen saver options, activated when docked or asleep and charging 
         */
        public static final int screensaver_settings_summary_either_long=0x7f080371;
        /**  Dream settings screen, dialog option, activated when docked or asleep and charging 
         */
        public static final int screensaver_settings_summary_either_short=0x7f080372;
        /**  Display settings screen, summary for screen saver options, screen saver is turned off 
         */
        public static final int screensaver_settings_summary_off=0x7f080375;
        /**  Display settings screen, summary fragment for screen saver options, activated when asleep and charging 
         */
        public static final int screensaver_settings_summary_sleep=0x7f080373;
        /**  Display settings screen, trigger for screen saver options 
         */
        public static final int screensaver_settings_title=0x7f080370;
        /**  Dream settings screen, action label, when to dream 
         */
        public static final int screensaver_settings_when_to_dream=0x7f080377;
        /**  The title of the activity to adjust SD card settings
         */
        public static final int sd_card_settings_label=0x7f080136;
        /**  [CHAR LIMIT=15] Manage applications, label for chart showing SD card storage use. 
         */
        public static final int sd_card_storage=0x7f080548;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   
         */
        public static final int sd_eject=0x7f0803d3;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   
         */
        public static final int sd_eject_summary=0x7f0803d4;
        /**  SD card eject progress text   
         */
        public static final int sd_ejecting_summary=0x7f0803e3;
        /**  SD card eject progress title   
         */
        public static final int sd_ejecting_title=0x7f0803e2;
        /**  SD card & phone storage settings item title that will result in the phone formatting the SD card.   [CHAR LIMIT=25] 
         */
        public static final int sd_format=0x7f0803d8;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.   [CHAR LIMIT=80] 
         */
        public static final int sd_format_summary=0x7f0803d9;
        /**  SD card & phone storage settings item summary that is displayed when no SD card is inserted 
         */
        public static final int sd_insert_summary=0x7f0803d5;
        /**  SD card & phone storage settings screen heading. This is displayed above items that pertain to the SD card 
         */
        public static final int sd_memory=0x7f0803c7;
        /**  SD card & phone storage settings item title that will result in the phone mounting the SD card. 
         */
        public static final int sd_mount=0x7f0803d6;
        /**  Subtext for Mount SD Card in Storage settings. User should never see this since we use automount. 
         */
        public static final int sd_mount_summary=0x7f0803d7;
        /**  Instructions after the user changes the mass storage settings 
         */
        public static final int sdcard_changes_instructions=0x7f080123;
        /**  Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted 
         */
        public static final int sdcard_format=0x7f080098;
        /**  Title for a notification shown. 
         */
        public static final int sdcard_setting=0x7f08009e;
        /**  Th label for the available (free) sapce on the SD card 
         */
        public static final int sdcard_settings_available_bytes_label=0x7f080127;
        /**  Error message when the SD card was removed without properly unmounting 
         */
        public static final int sdcard_settings_bad_removal_status=0x7f08012a;
        /**  Message when the SD card is being used by the computer as mass storage 
         */
        public static final int sdcard_settings_mass_storage_status=0x7f080128;
        /**  Message when there is no SD card present 
         */
        public static final int sdcard_settings_not_present_status=0x7f080126;
        /**  Message when the SD card is mounted as read only 
         */
        public static final int sdcard_settings_read_only_status=0x7f08012d;
        /**  Message when it is scanning the SD card for new files 
         */
        public static final int sdcard_settings_scanning_status=0x7f08012c;
        /**  Enable USB mass storage mode checkbox title 
         */
        public static final int sdcard_settings_screen_mass_storage_text=0x7f080124;
        /**  The label for total bytes on SD card 
         */
        public static final int sdcard_settings_total_bytes_label=0x7f080125;
        /**  Message when it is safe to remove the SD card 
         */
        public static final int sdcard_settings_unmounted_status=0x7f080129;
        /**  Label for used bytes on the SD card 
         */
        public static final int sdcard_settings_used_bytes_label=0x7f08012b;
        /**  Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer  
         */
        public static final int sdcard_unmount=0x7f080097;
        /**  Text used as a search hint into the search box 
         */
        public static final int search_menu=0x7f0809b1;
        /**  Text used to identify the search query suggestions / recent searches 
         */
        public static final int search_recents_queries_label=0x7f0809b3;
        /**  Text used to identify the search results 
         */
        public static final int search_results_label=0x7f0809b4;
        /**  Search strings 
 Text to describe the search results fragment title [CHAR LIMIT=16] 
         */
        public static final int search_results_title=0x7f0809b0;
        /**  Main Settings screen, setting option name to go into search settings 
         */
        public static final int search_settings=0x7f08035b;
        /**  Main Settings screen, setting option summary to go into search settings 
         */
        public static final int search_settings_summary=0x7f08035c;
        /**  Warning that the device data will not be encrypted with password or PIN if
         choosing a secure lock and there is an enabled accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int secure_lock_encryption_warning=0x7f080679;
        /**  Summary for settings checkbox to disable widgets when the setting has been disabled by an installed device admin [CHAR LIMIT=50] 
         */
        public static final int security_enable_widgets_disabled_summary=0x7f08016f;
        /**  Text shown for title of settings checkbox to enable widgets [CHAR LIMIT=20]
         */
        public static final int security_enable_widgets_title=0x7f08016e;
        /**  In the security screen, the header title for settings related to  Passwords
         */
        public static final int security_passwords_title=0x7f08017c;
        /**  About phone screen, status item label  [CHAR LIMIT=60] 
         */
        public static final int security_patch=0x7f0803a2;
        /**  Manage applications, individual application info screen, text that appears under the "Permissions" heading after the app has tried to send to a premium SMS. [CHAR LIMIT=50] 
         */
        public static final int security_settings_billing_desc=0x7f08055b;
        /**  Manage applications, individual application info screen, text that appears under the "Permissions" heading. This describes the permissions that the application has. 
         */
        public static final int security_settings_desc=0x7f080555;
        /**  [CHAR_LIMIT=NONE] Manage applications, individual application info screen, text that appears under the "Permissions" heading.
         This describes the permissions that the application has.  It is used when multiple packages are contributing
         to the permissions and need to be listed here. 
         */
        public static final int security_settings_desc_multi=0x7f080556;
        /**  Button text shown in fingerprint dialog that allows the user to delete the fingerprint template [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_dialog_delete=0x7f080192;
        /**  Label text shown in fingerprint dialog for renaming a fingerprint template [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_dialog_name_label=0x7f080190;
        /**  Button text shown in fingerprint dialog that allows the user to rename a fingerprint template [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_dialog_ok=0x7f080191;
        /**  Text shown in fingerprint settings explaining what the fingerprint can be used for. [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_disclaimer=0x7f0801a6;
        /**  Text shown in fingerprint settings explaining what the fingerprint can be used for in the case unlocking is disabled [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_disclaimer_lockscreen_disabled=0x7f0801a7;
        /**  Button text to exit fingerprint wizard after everything is done [CHAR LIMIT=15] 
         */
        public static final int security_settings_fingerprint_enroll_done=0x7f08019e;
        /**  Dialog message for dialog which shows when finger cannot be enrolled. [CHAR LIMIT=45] 
         */
        public static final int security_settings_fingerprint_enroll_error_dialog_title=0x7f0801a1;
        /**  Dialog message for dialog which shows when finger cannot be enrolled due to an internal error or fingerprint can't be read. 
         */
        public static final int security_settings_fingerprint_enroll_error_generic_dialog_message=0x7f0801a3;
        /**  Dialog message for dialog which shows when finger cannot be enrolled due to being idle too long. 
         */
        public static final int security_settings_fingerprint_enroll_error_timeout_dialog_message=0x7f0801a2;
        /**  Content description of graphic that shows where the fingerprint of the device is [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_find_sensor_content_description=0x7f08018f;
        /**  Message shown in fingerprint enrollment dialog to locate the sensor 
         */
        public static final int security_settings_fingerprint_enroll_find_sensor_message=0x7f08018e;
        /**  Introduction title shown in fingerprint enrollment dialog to locate the sensor [CHAR LIMIT=29] 
         */
        public static final int security_settings_fingerprint_enroll_find_sensor_title=0x7f08018d;
        /**  Message shown in fingerprint enrollment dialog once enrollment is completed 
         */
        public static final int security_settings_fingerprint_enroll_finish_message=0x7f080198;
        /**  Title shown in fingerprint enrollment dialog once enrollment is completed [CHAR LIMIT=29] 
         */
        public static final int security_settings_fingerprint_enroll_finish_title=0x7f080197;
        /**  Button text to cancel enrollment from the introduction [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_introduction_cancel=0x7f08018b;
        /**  Button text to continue to the next screen from the introduction [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_enroll_introduction_continue=0x7f08018c;
        /**  Introduction detail message shown in fingerprint enrollment dialog [CHAR LIMIT=NONE]
         */
        public static final int security_settings_fingerprint_enroll_introduction_message=0x7f080188;
        /**  Introduction detail message shown in fingerprint enrollment dialog to warn the user [CHAR LIMIT=NONE]
         */
        public static final int security_settings_fingerprint_enroll_introduction_message_warning=0x7f080189;
        /**  Link text shown bellow the warning to learn morn about fingerprint risk [CHAR LIMIT=22]
         */
        public static final int security_settings_fingerprint_enroll_introduction_risk_link_text=0x7f08018a;
        /**  Introduction title shown in fingerprint enrollment to introduce the fingerprint feature[CHAR LIMIT=29] 
         */
        public static final int security_settings_fingerprint_enroll_introduction_title=0x7f080187;
        /**  Text shown in fingerprint enroll when we didn't observe progress for a few seconds. [CHAR LIMIT=100] 
         */
        public static final int security_settings_fingerprint_enroll_lift_touch_again=0x7f0801a8;
        /**  Introduction message shown in fingerprint enrollment dialog when the user needs to choose an
         alternate screen unlock (pin, pattern or password) as a backup to fingerprint. 
         */
        public static final int security_settings_fingerprint_enroll_onboard_message=0x7f080184;
        /**  Introduction message shown in fingerprint enrollment dialog, first item to describe what
         the user needs to do. 
         */
        public static final int security_settings_fingerprint_enroll_onboard_message_1=0x7f080185;
        /**  Introduction message shown in fingerprint enrollment dialog, second item to describe what
         the user needs to do. 
         */
        public static final int security_settings_fingerprint_enroll_onboard_message_2=0x7f080186;
        /**  Introduction title shown in fingerprint enrollment dialog [CHAR LIMIT=29] 
         */
        public static final int security_settings_fingerprint_enroll_onboard_title=0x7f080183;
        /**  Message shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_repeat_message=0x7f080196;
        /**  Title shown in fingerprint enrollment dialog to repeat touching the fingerprint sensor [CHAR LIMIT=29] 
         */
        public static final int security_settings_fingerprint_enroll_repeat_title=0x7f080195;
        /**  Button text to setup screen lock in onboard dialog [CHAR LIMIT=34] 
         */
        public static final int security_settings_fingerprint_enroll_setup_screen_lock=0x7f08019d;
        /**  Message shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=NONE] 
         */
        public static final int security_settings_fingerprint_enroll_start_message=0x7f080194;
        /**  Title shown in fingerprint enrollment dialog to begin enrollment [CHAR LIMIT=29]
         */
        public static final int security_settings_fingerprint_enroll_start_title=0x7f080193;
        /**  Dialog message for dialog which shows when user touches the icon on the screen, instead of the sensor at the back [CHAR LIMIT=45] 
         */
        public static final int security_settings_fingerprint_enroll_touch_dialog_message=0x7f0801a0;
        /**  Dialog title for dialog which shows when user touches the icon on the screen, instead of the sensor at the back [CHAR LIMIT=45] 
         */
        public static final int security_settings_fingerprint_enroll_touch_dialog_title=0x7f08019f;
        /**  message shown in summary field when no fingerprints are registered 
         */
        public static final int security_settings_fingerprint_preference_summary_none=0x7f080182;
        /**  Title shown for menu item that launches fingerprint settings or enrollment [CHAR LIMIT=22] 
         */
        public static final int security_settings_fingerprint_preference_title=0x7f08017d;
        /**  Manage applications, text for permission to send to premium SMS short codes. [CHAR LIMIT=40] 
         */
        public static final int security_settings_premium_sms_desc=0x7f08055c;
        /**  Main Settings screen setting option summary text for the item tot ake you to the security and location screen 
         */
        public static final int security_settings_summary=0x7f08017a;
        /**  Main Settings screen setting option title for the item to take you to the security screen 
         */
        public static final int security_settings_title=0x7f080179;
        /**   action to select all [CHAR LIMIT=30] 
         */
        public static final int select_all=0x7f080817;
        /**  UI debug setting: title for app picker dialog [CHAR LIMIT=50] 
         */
        public static final int select_application=0x7f08081e;
        /**  Label for screen showing to select device policy 
         */
        public static final int select_device_admin_msg=0x7f0807ae;
        /**  UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59] 
         */
        public static final int select_logd_size_dialog_title=0x7f0805fc;
        /**  UI debug setting: limit size of Android logger buffers 
         */
        public static final int select_logd_size_title=0x7f08060c;
        public static final int select_sim_card=0x7f080b43;
        /**  Message for selecting sim for call in settings.  [CHAR LIMIT=40] 
         */
        public static final int select_sim_for_calls=0x7f080992;
        /**  Message for selecting sim for data in settings.  [CHAR LIMIT=40] 
         */
        public static final int select_sim_for_data=0x7f080990;
        /**  UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59] 
         */
        public static final int select_usb_configuration_dialog_title=0x7f08060e;
        /**  UI debug setting: limit size of Android logger buffers [CHAR LIMIT=59] 
         */
        public static final int select_usb_configuration_title=0x7f08060d;
        /**  About phone screen,  setting option name  [CHAR LIMIT=40] 
         */
        public static final int selinux_status=0x7f0803a8;
        /**  These statuses are displayed when a device was built with SE Android supoprt.
    These are displayed by the settings app in the about section. 
         */
        public static final int selinux_status_disabled=0x7f0808df;
        public static final int selinux_status_enforcing=0x7f0808e1;
        public static final int selinux_status_permissive=0x7f0808e0;
        /**  [CHAR LIMIT=10] Running services, summary of background processes 
         */
        public static final int service_background_processes=0x7f080584;
        /**  Running services, description for a service in the started state 
         */
        public static final int service_client_name=0x7f080583;
        /**  [CHAR LIMIT=10] Running services, summary of foreground processes 
         */
        public static final int service_foreground_processes=0x7f080585;
        /**  Running service details, manage a service that is running for some other reason. 
         */
        public static final int service_manage=0x7f08059b;
        /**  Running service details, default description for services that are managed. 
         */
        public static final int service_manage_description=0x7f08059f;
        /**  Text to label a process entry with the process name. 
         */
        public static final int service_process_name=0x7f080587;
        /**  Label for a service item when it is restarting 
         */
        public static final int service_restarting=0x7f08057f;
        /**  Running services, description for a service in the started state 
         */
        public static final int service_started_by_app=0x7f080582;
        /**  Running service details, stop a service that has started itself. 
         */
        public static final int service_stop=0x7f08059a;
        /**  Running service details, default description for services that are started. 
         */
        public static final int service_stop_description=0x7f08059c;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats services list 
         */
        public static final int services_subtitle=0x7f080716;
        /**  Data synchronization settings screen, setting option name 
         */
        public static final int settings_backup=0x7f0807f2;
        /**  Data synchronization settings screen, setting option summary text when check box is selected 
         */
        public static final int settings_backup_summary=0x7f0807f3;
        /**  Accessibility settings: button for lauching settings for an accessibility service 
         */
        public static final int settings_button=0x7f080683;
        /**  Title of the Settings activity shown within the application itself. 
         */
        public static final int settings_label=0x7f08013d;
        /**  Title of the Settings activity shown in the Launcher. [CHAR LIMIT=20] 
         */
        public static final int settings_label_launcher=0x7f08013e;
        /**  About phone settings screen, Open source license dialog title until license is fully loaded 
         */
        public static final int settings_license_activity_loading=0x7f0804d6;
        /**  About phone settings, Legal information setting option name and title of dialog box holding license info 
         */
        public static final int settings_license_activity_title=0x7f0804d4;
        /**  About phone settings screen, Open source license dialog message when licenses cannot be loaded 
         */
        public static final int settings_license_activity_unavailable=0x7f0804d5;
        /**  Phone Manual 
         */
        public static final int settings_manual_activity_title=0x7f0804d2;
        /**  About phone settings screen, Manual dialog message when manual cannot be loaded 
         */
        public static final int settings_manual_activity_unavailable=0x7f0804d3;
        /**  Package name for Settings app
         */
        public static final int settings_package=0x7f08001a;
        /**  About phone settings screen, Safety Legal dialog title until the link is fully loaded 
         */
        public static final int settings_safetylegal_activity_loading=0x7f0804da;
        /**  About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info 
         */
        public static final int settings_safetylegal_activity_title=0x7f0804d8;
        /**  About phone settings screen, Safety legal dialog message when data network is not connected 
         */
        public static final int settings_safetylegal_activity_unreachable=0x7f0804d9;
        /**  About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info 
         */
        public static final int settings_safetylegal_title=0x7f0804d7;
        /**  Label for option to select a settings panel as a shortcut 
         */
        public static final int settings_shortcut=0x7f08013f;
        /**  Content of the dialog shown when the user tries to skip fingerprint setup, asking them to confirm the action [CHAR LIMIT=NONE] 
         */
        public static final int setup_fingerprint_enroll_enrolling_skip_message=0x7f08019c;
        /**  Title of the dialog shown when the user tries to skip fingerprint setup, asking them to confirm the action [CHAR LIMIT=40] 
         */
        public static final int setup_fingerprint_enroll_enrolling_skip_title=0x7f08019b;
        /**  Message shown when fingerprint enrollment is completed during setup wizard [CHAR LIMIT=NONE] 
         */
        public static final int setup_fingerprint_enroll_finish_message=0x7f080199;
        /**  Message shown when fingerprint enrollment is completed, telling user about the fingerprint icon that will be shown whenever they can use their fingerprint [CHAR LIMIT=NONE] 
         */
        public static final int setup_fingerprint_enroll_finish_message_secondary=0x7f08019a;
        /**  NFC Wi-Fi pairing/setup strings
 Write NFC tag for Wi-Fi pairing/setup title [CHAR_LIMIT=30]
         */
        public static final int setup_wifi_nfc_tag=0x7f0809db;
        /**  Extreme threats summary.  [CHAR LIMIT=60] 
         */
        public static final int severe_threats_summary=0x7f080962;
        /**  Severe threats title.  [CHAR LIMIT=30] 
         */
        public static final int severe_threats_title=0x7f080961;
        /**  UI debug setting: show all ANRs? [CHAR LIMIT=25] 
         */
        public static final int show_all_anrs=0x7f080852;
        /**  UI debug setting: show all ANRs summary [CHAR LIMIT=50] 
         */
        public static final int show_all_anrs_summary=0x7f080853;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Show background cached processes. 
         */
        public static final int show_background_processes=0x7f080535;
        /**  UI debug setting: show how CPU is being used? [CHAR LIMIT=25] 
         */
        public static final int show_cpu_usage=0x7f08083e;
        /**  UI debug setting: show cpu usage summary [CHAR LIMIT=50] 
         */
        public static final int show_cpu_usage_summary=0x7f08083f;
        /**  [CHAR LIMIT=NONE] Device Info screen. Okay we get it, stop pressing, you already have it on 
         */
        public static final int show_dev_already=0x7f08006e;
        /**  [CHAR LIMIT=NONE] Device Info screen. Confirmation that developer settings are enabled 
         */
        public static final int show_dev_on=0x7f08006d;
        /**  UI debug setting: show when hardware layers get updated [CHAR LIMIT=25] 
         */
        public static final int show_hw_layers_updates=0x7f080831;
        /**  UI debug setting: show hardware layers updates summary [CHAR LIMIT=50] 
         */
        public static final int show_hw_layers_updates_summary=0x7f080832;
        /**  UI debug setting: show where window updates happen with GPU rendering? [CHAR LIMIT=25] 
         */
        public static final int show_hw_screen_updates=0x7f08082f;
        /**  UI debug setting: show GPU rendering screen updates summary [CHAR LIMIT=50] 
         */
        public static final int show_hw_screen_updates_summary=0x7f080830;
        /**  UI debug setting: show when non-rectangular clip operations are used [CHAR LIMIT=100] 
         */
        public static final int show_non_rect_clip=0x7f080844;
        /**  Text shown next to checkbox for showing owner info on LockScreen [CHAR LIMIT=50]
         */
        public static final int show_owner_info_on_lockscreen_label=0x7f08016c;
        /**  On Security & location settings screen, setting check box name. Title of the checkbox to set whether password edit fields will show the most recent character typed and then hide it, or just hide it right away.  By hide, I mean mask it out. 
         */
        public static final int show_password=0x7f0805b2;
        /**  Text shown next to checkbox for showing profile info on LockScreen [CHAR LIMIT=50]
         */
        public static final int show_profile_info_on_lockscreen_label=0x7f080174;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Show running services. 
         */
        public static final int show_running_services=0x7f080534;
        /**  UI debug setting: show where surface updates happen? [CHAR LIMIT=25] 
         */
        public static final int show_screen_updates=0x7f08082d;
        /**  UI debug setting: show surface updates summary [CHAR LIMIT=50] 
         */
        public static final int show_screen_updates_summary=0x7f08082e;
        /**  UI debug setting: show touches? [CHAR LIMIT=25] 
         */
        public static final int show_touches=0x7f08082b;
        /**  UI debug setting: show touches location summary [CHAR LIMIT=50] 
         */
        public static final int show_touches_summary=0x7f08082c;
        /**  SIM card lock settings screen, SIM PIN dialog message when wrong PIN is entered  [CHAR LIMIT=40] 
         */
        public static final int sim_bad_pin=0x7f08038f;
        /**  Title for call back. [CHAR LIMIT=60] 
         */
        public static final int sim_call_back_title=0x7f0809a1;
        /**  Checkbox to always use for calls.  [CHAR LIMIT=40] 
         */
        public static final int sim_calls_always_use=0x7f08098f;
        /**  When a user chooses this "Ask first" preference for the SIM to use for phone calls, they'll be prompted to choose a SIM every time they initiate a call [CHAR LIMIT=50] 
         */
        public static final int sim_calls_ask_first_prefs_title=0x7f0809ac;
        /**  Label for a numbered SIM card.  [CHAR LIMIT=40] 
         */
        public static final int sim_card_number_title=0x7f080994;
        /**  Select label Title of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_card_select_title=0x7f08099c;
        /**  Message that SIM cards have changed.  [CHAR LIMIT=40] 
         */
        public static final int sim_cards_changed_message=0x7f08098b;
        /**  Message smmary that SIM cards have changed.  [CHAR LIMIT=60] 
         */
        public static final int sim_cards_changed_message_summary=0x7f08098c;
        /**  Message that Cellular data is unavailable.  [CHAR LIMIT=40] 
         */
        public static final int sim_cellular_data_unavailable=0x7f08098d;
        /**  Message summary that Cellular data is unavailable.  [CHAR LIMIT=60] 
         */
        public static final int sim_cellular_data_unavailable_summary=0x7f08098e;
        /**  Message confirming the user wishes to change the default data SIM from one to another.  [CHAR LIMIT=NONE] 
         */
        public static final int sim_change_data_message=0x7f080399;
        /**  Title asking user if they wish to change the default sim for cellular data.  [CHAR LIMIT=30] 
         */
        public static final int sim_change_data_title=0x7f080398;
        /**  SIM card lock settings screen, toast after not entering correct SIM PIN  [CHAR LIMIT=40] 
         */
        public static final int sim_change_failed=0x7f080391;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_change_pin=0x7f08038e;
        /**  SIM card lock settings screen, SIM PIN dialog message when the entered PIN is correct [CHAR LIMIT=40] 
         */
        public static final int sim_change_succeeded=0x7f080392;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_disable_sim_lock=0x7f08038a;
        public static final int sim_disabled=0x7f080b2c;
        /**  Carrier label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_carrier=0x7f080999;
        /**  Color label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_color=0x7f08099b;
        /**  Name label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_name=0x7f080996;
        /**  Number label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_number=0x7f08099a;
        /**  Title label of Sim Editor.  [CHAR LIMIT=40] 
         */
        public static final int sim_editor_title=0x7f080998;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_enable_sim_lock=0x7f080389;
        public static final int sim_enabled=0x7f080b2b;
        public static final int sim_enabler_airplane_on=0x7f080b32;
        public static final int sim_enabler_both_inactive=0x7f080b34;
        public static final int sim_enabler_disabling=0x7f080b36;
        public static final int sim_enabler_enabling=0x7f080b35;
        public static final int sim_enabler_in_call=0x7f080b33;
        public static final int sim_enabler_need_disable_sim=0x7f080b2f;
        public static final int sim_enabler_need_enable_sim=0x7f080b2e;
        public static final int sim_enabler_need_switch_data_service=0x7f080b31;
        public static final int sim_enabler_summary=0x7f080b2a;
        public static final int sim_enabler_will_disable_sim_title=0x7f080b30;
        /**  SIM card lock settings screen, SIM PIN dialog button labels: [CHAR LIMIT=40] 
         */
        public static final int sim_enter_cancel=0x7f080395;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_enter_new=0x7f08038c;
        /**  SIM card lock settings screen, SIM PIN dialog button labels: [CHAR LIMIT=40] 
         */
        public static final int sim_enter_ok=0x7f080394;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_enter_old=0x7f08038b;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction  [CHAR LIMIT=40] 
         */
        public static final int sim_enter_pin=0x7f080388;
        /**  SIM card lock settings screen, toast after not entering correct SIM PIN [CHAR LIMIT=40] 
         */
        public static final int sim_lock_failed=0x7f080393;
        /**  SIM card lock settings screen, setting option summary text when SIM lock check box is clear  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_off=0x7f080386;
        /**  SIM card lock settings screen, setting option summary text when SIM lock check box is selected  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_on=0x7f080385;
        /**  SIM lock settings title  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_settings=0x7f080381;
        /**  Security & location settings screen, setting option name  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_settings_category=0x7f080382;
        /**  Security & location settings screen, section heading for settings related to sim card locking  [CHAR LIMIT=40] 
         */
        public static final int sim_lock_settings_title=0x7f080383;
        public static final int sim_missing=0x7f080b2d;
        /**  Multiple SIMs found summary.  [CHAR LIMIT=100] 
         */
        public static final int sim_multi_sims_summary=0x7f080397;
        /**  Multiple SIMs found title.  [CHAR LIMIT=40] 
         */
        public static final int sim_multi_sims_title=0x7f080396;
        /**  Hint for SIM name in sim name editor dialog.  [CHAR LIMIT=40] 
         */
        public static final int sim_name_hint=0x7f080997;
        /**  Message informing the user that no SIM card is inserted  [CHAR LIMIT=60] 
         */
        public static final int sim_no_inserted_msg=0x7f08099f;
        /**  Message under title informing the user to touch to go to SIM Cards in Settings.  [CHAR LIMIT=40] 
         */
        public static final int sim_notification_summary=0x7f0809aa;
        /**  Title for SIM card notification.  [CHAR LIMIT=40] 
         */
        public static final int sim_notification_title=0x7f0809a9;
        /**  Title for other call settings. [CHAR LIMIT=60] 
         */
        public static final int sim_other_call_settings=0x7f0809a3;
        /**  Title for outgoing back. [CHAR LIMIT=60] 
         */
        public static final int sim_outgoing_call_title=0x7f0809a2;
        /**  SIM card lock settings screen, setting option name to change the SIM PIN  [CHAR LIMIT=40] 
         */
        public static final int sim_pin_change=0x7f080387;
        /**  SIM card lock settings screen, setting check box label  [CHAR LIMIT=40] 
         */
        public static final int sim_pin_toggle=0x7f080384;
        /**  SIM card lock settings screen, SIM PIN dialog message when PINs don't match  [CHAR LIMIT=40] 
         */
        public static final int sim_pins_dont_match=0x7f080390;
        /**  This is a divider in the SIM cards preferences that is the header of various settings where the user chooses which SIM to use for phone calls, data, and SMS messages [CHAR LIMIT=50] 
         */
        public static final int sim_pref_divider=0x7f0809ab;
        /**  Message for the dialog asking to user to change the preferred SIM  [CHAR LIMIT=NONE] 
         */
        public static final int sim_preferred_message=0x7f08039b;
        /**  Title for the dialog asking to user to change the preferred SIM  [CHAR LIMIT=30] 
         */
        public static final int sim_preferred_title=0x7f08039a;
        /**  SIM card lock settings screen, Re-type new PIN.  [CHAR LIMIT=40] 
         */
        public static final int sim_reenter_new=0x7f08038d;
        /**  Title for selecting a SIM card.  [CHAR LIMIT=40] 
         */
        public static final int sim_select_card=0x7f080993;
        /**  When a SIM preference hasn't been selected yet, this string is displayed as the pref summary until the user chooses a SIM subscription from the preference list [CHAR LIMIT=50] 
         */
        public static final int sim_selection_required_pref=0x7f0809ae;
        /**  Summary for SIM settings title settings during Setup Wizard.  [CHAR LIMIT=40] 
         */
        public static final int sim_settings_summary=0x7f08098a;
        /**  Title for SIM settings title settings during Setup Wizard.  [CHAR LIMIT=40] 
         */
        public static final int sim_settings_title=0x7f080989;
        /**  Title for SIM card settings during Setup Wizard.  [CHAR LIMIT=40] 
         */
        public static final int sim_setup_wizard_title=0x7f080988;
        /**  Summary text describing signal strength to the user.  [CHAR LIMIT=60] 
         */
        public static final int sim_signal_strength=0x7f0809a8;
        /**  Name label of Sim card that is empty.  [CHAR LIMIT=40] 
         */
        public static final int sim_slot_empty=0x7f080995;
        /**  When a user chooses this "Ask first" preference for the SIM to use for send SMS, they'll be prompted to choose a SIM every time they initiate a SMS [CHAR LIMIT=50] 
         */
        public static final int sim_sms_ask_first_prefs_title=0x7f0809ad;
        /**  SIM status title  [CHAR LIMIT=40] 
         */
        public static final int sim_status_title=0x7f0809a0;
        /**  UI debug setting: simulate color space anomalies. [CHAR LIMIT=25] 
         */
        public static final int simulate_color_space=0x7f080836;
        /**  Used in setup wizard Wi-Fi screen.  The button label for going to the next screen without submitting. [CHAR LIMIT=20] 
         */
        public static final int skip_label=0x7f08012e;
        public static final int slot_number=0x7f080a81;
        /**  choice for the font size spinner 
         */
        public static final int small_font=0x7f080099;
        /**  SMS Application [CHAR LIMIT=35]
         */
        public static final int sms_application_title=0x7f080496;
        public static final int sms_change_default_dialog_text=0x7f080498;
        public static final int sms_change_default_dialog_title=0x7f080497;
        public static final int sms_change_default_no_previous_dialog_text=0x7f080499;
        /**  check box SMS Messges title [CHAR LIMIT=30] 
         */
        public static final int sms_messages_title=0x7f080146;
        /**  Phone SMS over IMS off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int sms_over_ims_off=0x7f080078;
        /**  Phone SMS over IMS on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int sms_over_ims_on=0x7f080077;
        /**  Description of app sometimes running [CHAR LIMIT=45] 
         */
        public static final int sometimes_running=0x7f080acd;
        /**  Menu item for Sorting list by average memory use [CHAR LIMIT=NONE]
         */
        public static final int sort_avg_use=0x7f080afd;
        /**  Menu item for Sorting list by maximum memory use [CHAR LIMIT=NONE] 
         */
        public static final int sort_max_use=0x7f080afe;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Sorts all of the apps in the list alphabetically. 
         */
        public static final int sort_order_alpha=0x7f080532;
        /**  Manage applications screen, menu item. Sorts all of the apps in the list based on their file size.  This is used to uninstall when space is getting low. 
         */
        public static final int sort_order_size=0x7f080533;
        /**  Category title for phone call's ringtone and vibration settings in the Sound Setting.
         [CHAR LIMIT=40] 
         */
        public static final int sound_category_call_ringtone_vibrate_title=0x7f0807be;
        public static final int sound_category_sound_title=0x7f0807bc;
        /**  Category title for system-wide notification and feedback settings in the Sound Setting.
         [CHAR LIMIT=40] 
         */
        public static final int sound_category_system_title=0x7f0807bf;
        /**  Sound settings screen, setting check box label 
         */
        public static final int sound_effects_enable_title=0x7f08033c;
        /**  Sound settings screen heading 
         */
        public static final int sound_settings=0x7f08032b;
        /**  Image button description for spell checker language. 
         */
        public static final int spellchecker_language=0x7f0805b6;
        /**  Image button description for spell checker quick settings. 
         */
        public static final int spellchecker_quick_settings=0x7f0805b5;
        /**  Warning message about security implications of enabling a spell checker, displayed as a dialog
         message when the user selects to enable a spell checker. 
         */
        public static final int spellchecker_security_warning=0x7f0805b4;
        /**   Title for spell checker settings 
         */
        public static final int spellcheckers_settings_title=0x7f0808d8;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int ssid_label=0x7f080317;
        /**  Title of Dialog warning users of SSL monitoring. [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_dialog_title=0x7f0808e4;
        /**  Text of message to show to users whose administrator has installed a SSL CA Cert.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_info_message=0x7f0808e5;
        /**  Label on button that will take the user to the Trusted Credentials settings page.  [CHAR LIMIT=NONE]
         */
        public static final int ssl_ca_cert_settings_button=0x7f0808e7;
        /**  Shows up when there is a user SSL CA Cert installed on the
         device.  Indicates to the user that SSL traffic can be intercepted.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_warning=0x7f0808e2;
        /**  Text of warning to show to users that have a SSL CA Cert installed.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_warning_message=0x7f0808e6;
        /**  Shown when password is correct, and we're starting Android 
         */
        public static final int starting_android=0x7f080812;
        /**  Text to inform the user to tap a tag to complete the setup process 
         */
        public static final int status_awaiting_tap=0x7f0809dd;
        /**  About phone, status item title.  How much time the device has had its main CPU awake. 
         */
        public static final int status_awake_time=0x7f0803c5;
        /**  Text to use when the number in a notification info is too large
         (greater than status_bar_notification_info_maxnum, defined in
         values/config.xml) and must be truncated. May need to be localized
         for most appropriate textual indicator of "more than X".
         [CHAR LIMIT=4] 
         */
        public static final int status_bar_notification_info_overflow=0x7f080062;
        /**  About phone, status item title.  The bluetooth adapter's hardware address
         */
        public static final int status_bt_address=0x7f0803c1;
        /**  About phone, status item title. The status of data access.  For example, the value may be "Connected" 
         */
        public static final int status_data_state=0x7f0803bb;
        /**  Text displayed in error cases (failure to write to tag) 
         */
        public static final int status_failed_to_write=0x7f0809e0;
        /**  About phone, status item title.  The ICCID of the current LTE device. [CHAR LIMIT=30] 
         */
        public static final int status_icc_id=0x7f0803b8;
        /**  Do not translate. About phone, status item title 
         */
        public static final int status_imei=0x7f0803b1;
        /**  Do not translate. About phone, status item title 
         */
        public static final int status_imei_sv=0x7f0803b2;
        /**  Text to inform the user that the network key entered was incorrect 
         */
        public static final int status_invalid_password=0x7f0809de;
        /**  About phone, status item title for the latest area info cell broadcast received (Brazil only). 
         */
        public static final int status_latest_area_info=0x7f0803ba;
        /**  About phone, status item title.  The phone MEID number of the current LTE/CDMA device. [CHAR LIMIT=30] 
         */
        public static final int status_meid_number=0x7f0803b7;
        /**  About phone, status item title.  The phone MIN number of the current device.
         */
        public static final int status_min_number=0x7f0803b4;
        /**  About phone, status item title.  The phone MSID number of the current device.
         */
        public static final int status_msid_number=0x7f0803b5;
        /**  About phone, status item title for the type of data phone network we're connected to, for example 3G or Edge or GPRS 
         */
        public static final int status_network_type=0x7f0803b9;
        /**  About phone, status item title.  The phone number of the current device [CHAR LIMIT=30] 
         */
        public static final int status_number=0x7f0803b3;
        /**  About phone, status item title. The cell carrier that the user is connected to.  
         */
        public static final int status_operator=0x7f0803bf;
        /**  About phone, status item title.  The phone PRL Version of the current device.
         */
        public static final int status_prl_version=0x7f0803b6;
        /**  About phone, status item title, The status for roaming.  For example, the value might be "Not roaming" 
         */
        public static final int status_roaming=0x7f0803be;
        /**  About phone, status item title.  The hardware serial number. [CHAR LIMIT=30]
         */
        public static final int status_serial_number=0x7f0803c2;
        /**  About phone, status item title. The status of whether we have service.  for example, the value may be "In service" 
         */
        public static final int status_service_state=0x7f0803bc;
        /**  About phone, status item title. The  current cell tower signal strength 
         */
        public static final int status_signal_strength=0x7f0803bd;
        /**  Text displayed when tag is not writable 
         */
        public static final int status_tag_not_writable=0x7f0809e1;
        /**  About phone, status item value if the actual value is not available. 
         */
        public static final int status_unavailable=0x7f0803c3;
        /**  About phone, status item title.  How long the device has been running since its last reboot. 
         */
        public static final int status_up_time=0x7f0803c4;
        /**  About phone, status item title.  The MAC address of the Wi-Fi network adapter. 
         */
        public static final int status_wifi_mac_address=0x7f0803c0;
        public static final int status_wimax_mac_address=0x7f08080a;
        /**  Text displayed when tag successfully writen 
         */
        public static final int status_write_success=0x7f0809df;
        /**  Item title describing storage used by apps [CHAR LIMIT=48]
         */
        public static final int storage_detail_apps=0x7f08040e;
        /**  Item title describing storage used by audio [CHAR LIMIT=48]
         */
        public static final int storage_detail_audio=0x7f080411;
        /**  Item title describing storage used by cached data [CHAR LIMIT=48]
         */
        public static final int storage_detail_cached=0x7f080412;
        /**  Body of dialog informing user about other files on a storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_detail_dialog_other=0x7f080415;
        /**  Body of dialog informing user about other users on a storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_detail_dialog_user=0x7f080416;
        /**  Item title that will launch a file explorer [CHAR LIMIT=48]
         */
        public static final int storage_detail_explore=0x7f080414;
        /**  Item title describing storage used by images [CHAR LIMIT=48]
         */
        public static final int storage_detail_images=0x7f08040f;
        /**  Item title describing storage used by other data [CHAR LIMIT=48]
         */
        public static final int storage_detail_other=0x7f080413;
        /**  Item title describing storage used by videos [CHAR LIMIT=48]
         */
        public static final int storage_detail_videos=0x7f080410;
        /**  Dialog body informing user about an unmountable storage device. [CHAR LIMIT=NONE]
         */
        public static final int storage_dialog_unmountable=0x7f080407;
        /**  Dialog body informing user about an unmounted storage device. [CHAR LIMIT=NONE]
         */
        public static final int storage_dialog_unmounted=0x7f080406;
        /**  Dialog body informing user about an unsupported storage device. [CHAR LIMIT=NONE]
         */
        public static final int storage_dialog_unsupported=0x7f080408;
        /**  Section header above list of external storage devices [CHAR LIMIT=30]
         */
        public static final int storage_external_title=0x7f0803fa;
        /**  Toast informing that storage format operation failed. [CHAR LIMIT=64]
         */
        public static final int storage_format_failure=0x7f080404;
        /**  Toast informing that storage format operation was successful. [CHAR LIMIT=64]
         */
        public static final int storage_format_success=0x7f080403;
        /**  Body of dialog confirming that user wants to forget an internal storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_internal_forget_confirm=0x7f08040d;
        /**  Title of dialog confirming that user wants to forget an internal storage device [CHAR LIMIT=32]
         */
        public static final int storage_internal_forget_confirm_title=0x7f08040c;
        /**  Body of dialog informing user about consequences of forgetting an internal storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_internal_forget_details=0x7f08040b;
        /**  Body of dialog informing user about consequences of formatting an internal storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_internal_format_details=0x7f080409;
        /**  Section header above list of internal storage devices [CHAR LIMIT=30]
         */
        public static final int storage_internal_title=0x7f0803f9;
        /**  Body of dialog informing user about consequences of ejecting an internal storage device [CHAR LIMIT=NONE]
         */
        public static final int storage_internal_unmount_details=0x7f08040a;
        /**  Manage applications, individual application info screen, section heading for stuff relating to an app's storage settings. 
         */
        public static final int storage_label=0x7f080514;
        /**  Settings item summary when storage is running low [CHAR LIMIT=NONE] 
         */
        public static final int storage_low_summary=0x7f0803e5;
        /**  Settings item title when storage is running low [CHAR LIMIT=32] 
         */
        public static final int storage_low_title=0x7f0803e4;
        /**  Storage setting.  Menu option for exploring a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_explore=0x7f0803ef;
        /**  Storage setting.  Menu option for forgetting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_forget=0x7f0803ed;
        /**  Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_format=0x7f0803e9;
        /**  Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_format_private=0x7f0803eb;
        /**  Storage setting.  Menu option for erasing and formatting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_format_public=0x7f0803ea;
        /**  Storage setting.  Menu option for migrating data to a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_migrate=0x7f0803ec;
        /**  Storage setting.  Menu option for mounting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_mount=0x7f0803e7;
        /**  Storage setting.  Menu option for renaming a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_rename=0x7f0803e6;
        /**  Storage setting.  Menu option for setting up a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_set_up=0x7f0803ee;
        /**  Storage setting.  Menu option for unmounting a storage device [CHAR LIMIT=30]
         */
        public static final int storage_menu_unmount=0x7f0803e8;
        /**  Toast informing that storage unmount operation failed. [CHAR LIMIT=64]
         */
        public static final int storage_mount_failure=0x7f080400;
        /**  Toast informing that storage mount operation was successful. [CHAR LIMIT=64]
         */
        public static final int storage_mount_success=0x7f0803ff;
        /**  Section header above list of other users storage [CHAR LIMIT=32] 
         */
        public static final int storage_other_users=0x7f0803f8;
        /**  Title of dialog prompting user to rename a storage volume [CHAR LIMIT=32]
         */
        public static final int storage_rename_title=0x7f080405;
        /**  Main settings screen item's title to go into the storage settings screen [CHAR LIMIT=25] 
         */
        public static final int storage_settings=0x7f0803ad;
        /**  [CHAR LIMIT=100] Main settings screen item's summary for the SD card and storage settings 
         */
        public static final int storage_settings_summary=0x7f0803b0;
        /**  Storage settings screen title 
         */
        public static final int storage_settings_title=0x7f0803af;
        /**  Summary of a single storage volume used space. [CHAR LIMIT=24] 
         */
        public static final int storage_size_large=0x7f0803fc;
        /**  Summary for app storage preference [CHAR LIMIT=15] 
         */
        public static final int storage_summary_format=0x7f080a83;
        /**  Storage setting.  Title for USB transfer settings [CHAR LIMIT=30]
         */
        public static final int storage_title_usb=0x7f0803f0;
        /**  Summary describing external storage for applications [CHAR LIMIT=25] 
         */
        public static final int storage_type_external=0x7f080a8a;
        /**  Internal storage label 
         */
        public static final int storage_type_internal=0x7f080a89;
        /**  Toast informing that storage unmount operation failed. [CHAR LIMIT=64]
         */
        public static final int storage_unmount_failure=0x7f080402;
        /**  Toast informing that storage unmount operation was successful. [CHAR LIMIT=64]
         */
        public static final int storage_unmount_success=0x7f080401;
        /**  Main settings screen item's title to go into the storage & USB settings screen [CHAR LIMIT=25] 
         */
        public static final int storage_usb_settings=0x7f0803ae;
        /**  Title of storage preference to control where app is stored 
         */
        public static final int storage_used=0x7f080a8d;
        /**  Summary of a single storage volume, constrasting available and total storage space. [CHAR LIMIT=48]
         */
        public static final int storage_volume_summary=0x7f0803fb;
        /**  Summary of a single storage volume total space. [CHAR LIMIT=48]
         */
        public static final int storage_volume_used=0x7f0803fd;
        /**  Summary of a single storage volume total space. [CHAR LIMIT=48]
         */
        public static final int storage_volume_used_total=0x7f0803fe;
        /**  Body of wizard step prompting user to format a storage device [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_format_confirm_body=0x7f08041d;
        /**  Next button text of wizard step prompting user to format a storage device [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_format_confirm_next=0x7f080420;
        /**  Body of wizard step prompting user to format a storage device [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_format_confirm_public_body=0x7f08041f;
        /**  Title of wizard step prompting user to format a storage device [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_format_confirm_public_title=0x7f08041e;
        /**  Title of wizard step prompting user to format a storage device [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_format_confirm_title=0x7f08041c;
        /**  Body of wizard step showing formatting progress [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_format_progress_body=0x7f080422;
        /**  Title of wizard step showing formatting progress [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_format_progress_title=0x7f080421;
        /**  Summary of wizard choice to use storage device as external storage [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_init_external_summary=0x7f080419;
        /**  Title of wizard choice to use storage device as external storage [CHAR LIMIT=64] 
         */
        public static final int storage_wizard_init_external_title=0x7f080418;
        /**  Summary of wizard choice to use storage device as internal storage [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_init_internal_summary=0x7f08041b;
        /**  Title of wizard choice to use storage device as internal storage [CHAR LIMIT=64] 
         */
        public static final int storage_wizard_init_internal_title=0x7f08041a;
        /**  Title of wizard step prompting user to setup a storage device [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_init_title=0x7f080417;
        /**  Body of wizard step prompting user to migrate data to new storage [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_migrate_body=0x7f080424;
        /**  Body of wizard step providing details about data migration [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_migrate_confirm_body=0x7f080428;
        /**  Title of wizard button prompting user to start data migration [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_migrate_confirm_next=0x7f080429;
        /**  Title of wizard step prompting user to start data migration [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_migrate_confirm_title=0x7f080427;
        /**  Body of wizard step providing details about data migration [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_migrate_details=0x7f08042b;
        /**  Title of wizard choice to migrate data at later time [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_migrate_later=0x7f080426;
        /**  Title of wizard choice to migrate data right now [CHAR LIMIT=64] 
         */
        public static final int storage_wizard_migrate_now=0x7f080425;
        /**  Title of wizard step showing migration progress [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_migrate_progress_title=0x7f08042a;
        /**  Title of wizard step prompting user to migrate data to new storage [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_migrate_title=0x7f080423;
        /**  Body of wizard step prompting user to move an app [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_move_confirm_body=0x7f080430;
        /**  Title of wizard step prompting user to move an app [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_move_confirm_title=0x7f08042f;
        /**  Body of wizard step showing app move progress [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_move_progress_body=0x7f080432;
        /**  Title of wizard button offering to cancel move [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_move_progress_cancel=0x7f080433;
        /**  Title of wizard step showing app move progress [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_move_progress_title=0x7f080431;
        /**  Body of wizard step indicating that external storage is ready [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_ready_external_body=0x7f08042d;
        /**  Body of wizard step indicating that internal storage is ready [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_ready_internal_body=0x7f08042e;
        /**  Title of wizard step indicating that storage is ready [CHAR LIMIT=32] 
         */
        public static final int storage_wizard_ready_title=0x7f08042c;
        /**  Title of wizard step prompting user to start data migration [CHAR LIMIT=NONE] 
         */
        public static final int storage_wizard_slow_body=0x7f080434;
        /**  Services settings screen, setting option summary for the user to go to the screen to app storage use 
         */
        public static final int storageuse_settings_summary=0x7f08057c;
        /**  [CHAR LIMIT=25] Services settings screen, setting option name for the user to go to the screen to view app storage use 
         */
        public static final int storageuse_settings_title=0x7f08057b;
        /**  UI debug setting: always enable strict mode? [CHAR LIMIT=25] 
         */
        public static final int strict_mode=0x7f080827;
        /**  UI debug setting: show strict mode summary [CHAR LIMIT=50] 
         */
        public static final int strict_mode_summary=0x7f080828;
        public static final int sub_activate_failed=0x7f080b38;
        public static final int sub_activate_success=0x7f080b37;
        public static final int sub_deactivate_failed=0x7f080b3a;
        public static final int sub_deactivate_success=0x7f080b39;
        /**  mobile network settings screen, setting option summary text 
         */
        public static final int sum_carrier_select=0x7f080152;
        /**  [CHAR LIMIT=40] General divider text when concatenating multiple items in a text summary 
         */
        public static final int summary_divider_text=0x7f080a39;
        /**  Sound & display settings screen, setting option summary displaying the currently selected font size 
         */
        public static final int summary_font_size=0x7f08037f;
        /**  [CHAR LIMIT=40] General template for a symbolic start - end range in a text summary 
         */
        public static final int summary_range_symbol_combination=0x7f080a3a;
        /**  [CHAR LIMIT=40] General template for a verbal start to end range in a text summary 
         */
        public static final int summary_range_verbal_combination=0x7f080a3b;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
        Label on Wifi Status screen
         */
        public static final int supplicant_state_label=0x7f080314;
        public static final int switch_off_text=0x7f080a59;
        /**  Switch On/Off  
         */
        public static final int switch_on_text=0x7f080a58;
        /**  Animation description for the sync active icon. 
         */
        public static final int sync_active=0x7f0807e2;
        /**  Title for a checkbox that enables data synchronization in the account and sync screen [CHAR LIMIT=35] 
         */
        public static final int sync_automatically=0x7f0807ec;
        /**  Data synchronization settings screen, checkbox setting option name. Controls whether Calendar shoudl be synced. 
         */
        public static final int sync_calendar=0x7f0807f8;
        /**  Data synchronization settings screen, checkbox setting option name 
         */
        public static final int sync_contacts=0x7f0807f9;
        /**  Sync status shown when sync is disabled [CHAR LIMIT=25] 
         */
        public static final int sync_disabled=0x7f0807ee;
        /**  Sync status shown when sync is enabled [CHAR LIMIT=25] 
         */
        public static final int sync_enabled=0x7f0807ed;
        /**  Sync status shown when last sync resulted in an error [CHAR LIMIT=25] 
         */
        public static final int sync_error=0x7f0807ef;
        /**  Image description for the sync failed icon. 
         */
        public static final int sync_failed=0x7f0807e1;
        /**  Data synchronization settings screen, checkbox setting option name. Controls whether Gmail should be synced.  Should use "Gmail" to refer to this app.
         */
        public static final int sync_gmail=0x7f0807f7;
        /**  Sync status shown when sync is disabled [CHAR LIMIT=30] 
         */
        public static final int sync_in_progress=0x7f0807f1;
        /**  Message when sync is currently failing [CHAR LIMIT=100] 
         */
        public static final int sync_is_failing=0x7f0807e4;
        /**  Formatter in AccountSyncSettings for each application we wish to synchronize, e.g. "Sync Calendar" 
         */
        public static final int sync_item_title=0x7f080806;
        /**  Data synchronization settings screen, menu option 
         */
        public static final int sync_menu_sync_cancel=0x7f0807f5;
        /**  Data synchronization settings screen, menu option 
         */
        public static final int sync_menu_sync_now=0x7f0807f4;
        /**  Data synchronization settings screen, summary of a sync provider (for example, Gmail) when autosync is off and the user wants to do a one-time sync. 
         */
        public static final int sync_one_time_sync=0x7f0807f6;
        /**  Message introducing the user to Google Sync. 
         */
        public static final int sync_plug=0x7f0807fa;
        /**  Title for the apps that are allowed to draw on top of other apps [CHAR LIMIT=60] 
         */
        public static final int system_alert_window_access_title=0x7f080b15;
        /**  Title for the apps with SYSTEM_ALERT_WINDOW permission/privilege [CHAR LIMIT=20] 
         */
        public static final int system_alert_window_apps_title=0x7f080b14;
        /**  Summary of app not allowed to draw overlay [CHAR LIMIT=60] 
         */
        public static final int system_alert_window_off=0x7f080b1e;
        /**  Summary of app allowed to draw overlay [CHAR LIMIT=60] 
         */
        public static final int system_alert_window_on=0x7f080b1d;
        /**  Settings title in main settings screen for SYSTEM_ALERT_WINDOW [CHAR LIMIT=45] 
         */
        public static final int system_alert_window_settings=0x7f080b13;
        /**  Summary of number of apps currently can draw overlays [CHAR LIMIT=60] 
         */
        public static final int system_alert_window_summary=0x7f080b1b;
        public static final int system_package=0x7f080569;
        /**  Turn on settings for system ui tuner [CHAR LIMIT=40] 
         */
        public static final int system_ui_settings=0x7f080ae0;
        /**  About phone screen, list item summary.  Takes the user to the screen for seeing and installing system updates. [CHAR LIMIT=40] 
         */
        public static final int system_update_settings_list_item_summary=0x7f0803a0;
        /**  About phone screen, list item title.  Takes the user to the screen for seeing and installing system updates. [CHAR LIMIT=40] 
         */
        public static final int system_update_settings_list_item_title=0x7f08039f;
        /**  Label for tap to wake setting [CHAR LIMIT=30] 
         */
        public static final int tap_to_wake=0x7f080aad;
        /**  Summary for take to wake setting [CHAR LIMIT=90] 
         */
        public static final int tap_to_wake_summary=0x7f080aae;
        /**  About phone settings screen, setting option name to see terms and conditions 
         */
        public static final int terms_title=0x7f0804ce;
        /**  This is for diagnostics screen. The title of a screen with various items realted to launching screens that will giev the user info. For example, it contains "Phone information" and "Battery information" 
         */
        public static final int testing=0x7f0805d5;
        /**  In the Testing screen.  The item title of the activity that shows a bunch of phone-related information.  
         */
        public static final int testing_phone_info=0x7f0805d6;
        /**  Do not translate. In the Testing screen. The item title of the activity that shows a bunch of SIM-related operations.  
         */
        public static final int testing_sim_toolkit=0x7f0805d7;
        /**  In the Testing screen. The item title of the activity that shows usage statistics.  
         */
        public static final int testing_usage_stats=0x7f08062d;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Wi-Fi Testing on the diagnostic screen
         */
        public static final int testing_wifi_info=0x7f080309;
        /**  Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_all=0x7f080481;
        /**  Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_bluetooth=0x7f08047f;
        /**  Tethering controls, item title to go into the tethering settings 
 Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_usb=0x7f08047d;
        /**  Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_usb_bluetooth=0x7f080480;
        /**  Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_wifi=0x7f08047e;
        /**  Tethering help button - calls up a web view with general tethering info 
         */
        public static final int tethering_help_button_text=0x7f080493;
        /**  Error message for users that aren't allowed to modify Tethering settings [CHAR LIMIT=none] 
         */
        public static final int tethering_settings_not_available=0x7f0805ed;
        /**  Title string shown above TimePicker, letting a user select system time
         [CHAR LIMIT=20] 
         */
        public static final int time_picker_title=0x7f080167;
        /**  Do not translate. This is a stub which will be removed soon. 
         */
        public static final int time_zone_auto_stub=0x7f0807dc;
        /**  [CHAR LIMIT=30] Sound & display settings screen, setting option name to change font size 
         */
        public static final int title_font_size=0x7f08037e;
        /**  Label for total memory of device [CHAR LIMIT=25] 
         */
        public static final int total_memory=0x7f080b00;
        /**  Manage applications, individual application info screen,label under Storage heading.  The total storage space taken up by this app. 
         */
        public static final int total_size_label=0x7f08051e;
        /**  Warning shown when user input has been blocked due to another app overlaying screen
         content. Since we don't know what the app is showing on top of the input target, we
         can't verify user consent. [CHAR LIMIT=NONE] 
         */
        public static final int touch_filtered_warning=0x7f080677;
        /**  Sound & notification > Other sounds: Title for the option enabling touch sounds. [CHAR LIMIT=30] 
         */
        public static final int touch_sounds_title=0x7f080a01;
        /**  UI debug setting: profile time taken by hardware acceleration to render apps [CHAR LIMIT=25] 
         */
        public static final int track_frame_time=0x7f080845;
        /**  UI debug setting: scaling factor for transition animations [CHAR LIMIT=25] 
         */
        public static final int transition_animation_scale_title=0x7f080847;
        /**  Summary for a trust agent that was disabled by the device policy [LIMIT=NONE] 
         */
        public static final int trust_agent_disabled_device_admin=0x7f080aa5;
        /**  Title of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=30] 
         */
        public static final int trusted_credentials=0x7f08077f;
        /**  Alert dialog confirmation when disabling a system CA certificate. 
         */
        public static final int trusted_credentials_disable_confirmation=0x7f0808d6;
        /**  Button label for disabling a system CA certificate. 
         */
        public static final int trusted_credentials_disable_label=0x7f0808d2;
        /**  Alert dialog confirmation when enabling a system CA certificate. 
         */
        public static final int trusted_credentials_enable_confirmation=0x7f0808d5;
        /**  Button label for enabling a system CA certificate. 
         */
        public static final int trusted_credentials_enable_label=0x7f0808d3;
        /**  Alert dialog confirmation when removing a user CA certificate. 
         */
        public static final int trusted_credentials_remove_confirmation=0x7f0808d7;
        /**  Button label for removing a user CA certificate. 
         */
        public static final int trusted_credentials_remove_label=0x7f0808d4;
        /**  Summary of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=NONE] 
         */
        public static final int trusted_credentials_summary=0x7f080780;
        /**  Tab label for built-in system CA certificates. 
         */
        public static final int trusted_credentials_system_tab=0x7f0808d0;
        /**  Tab label for user added CA certificates. 
         */
        public static final int trusted_credentials_user_tab=0x7f0808d1;
        /**  On main TTS Settings screen, summary for when required speech synthesis data alrady installed on SD card 
         */
        public static final int tts_data_installed_summary=0x7f08074b;
        /**  On main TTS Settings screen, summary for default language for synthesized voice 
         */
        public static final int tts_default_lang_summary=0x7f080746;
        /**  On main TTS Settings screen, in default settings section, setting default language for synthesized voice 
         */
        public static final int tts_default_lang_title=0x7f080743;
        /**  On main TTS Settings screen, summary for default pitch for synthesized voice 
         */
        public static final int tts_default_pitch_summary=0x7f080742;
        /**  On main TTS Settings screen, in default settings section, setting default pitch for synthesized voice 
         */
        public static final int tts_default_pitch_title=0x7f080741;
        /**  On main TTS Settings screen, summary for default speech rate for synthesized voice 
         */
        public static final int tts_default_rate_summary=0x7f080740;
        /**  On main TTS Settings screen, in default settings section, setting default speech rate for synthesized voice 
         */
        public static final int tts_default_rate_title=0x7f08073f;
        /**  Text spoken by the TTS engine as an example if the engine doesn't provide sample text [CHAR LIMIT=100] 
         */
        public static final int tts_default_sample_string=0x7f080752;
        /**  On main TTS Settings screen, section header for default TTS settings 
         */
        public static final int tts_default_settings_section=0x7f08073c;
        /**  On main TTS Settings screen, summary for default synthesis engine for synthesized voice 
         */
        public static final int tts_default_synth_summary=0x7f08073e;
        /**  On main TTS Settings screen, in default settings section, setting default synthesis engine for synthesized voice 
         */
        public static final int tts_default_synth_title=0x7f08073d;
        /**  Error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error=0x7f08074d;
        /**  Button text for error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error_config=0x7f08074e;
        /**  Button text for error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error_reselect=0x7f08074f;
        /**  On main TTS Settings screen, text preceded by the TTS engine name to indicate the engine cannot be used by the user 
         */
        public static final int tts_engine_name_is_disabled_summary=0x7f08075b;
        /**  On main TTS Settings screen, text preceded by the TTS engine name to indicate the engine can be used by the user 
         */
        public static final int tts_engine_name_is_enabled_summary=0x7f08075a;
        /**  On main TTS Settings screen, text preceded by the TTS engine name, clicking this button will launch the engine settings 
         */
        public static final int tts_engine_name_settings=0x7f080759;
        /**  Warning message about required internet conectivity for TTS synthesis, displayed as a dialog
         message when the user selects to play an example for network only locale and there's no internet connectivity. 
         */
        public static final int tts_engine_network_required=0x7f080751;
        /**  [CHAR LIMIT=50] The text for the settings section that users to set a
         preferred text to speech engine 
         */
        public static final int tts_engine_preference_section_title=0x7f080766;
        /**  Warning message about security implications of enabling a TTS engine, displayed as a dialog
         message when the user selects to enable an engine. 
         */
        public static final int tts_engine_security_warning=0x7f080750;
        /**  [CHAR LIMIT=150] Text for screen readers / accessibility programs for
         the image that launches the TTS engine settings when clicked. 
         */
        public static final int tts_engine_settings_button=0x7f080765;
        /**  On the main TTS settings screen, text for a divider under which
         the engine specific settings and the "engine install data" option
         are listed [CHAR LIMIT=30]
         */
        public static final int tts_engine_settings_section=0x7f08075c;
        /**  Title for a preference in the main TTS settings screen, which
         launches the settings screen for a given TTS engine when clicked
         [CHAR LIMIT=30]
         */
        public static final int tts_engine_settings_title=0x7f08075d;
        /**  On main TTS Settings screen, text for divider under which all TTS engines are listed 
         */
        public static final int tts_engines_section=0x7f080758;
        /**  [CHAR LIMIT=50] Title of the settings section that displays general preferences
         that are applicable to all engines, such as the speech rate 
         */
        public static final int tts_general_section_title=0x7f080767;
        /**  On main TTS Settings screen, summary for click to install required speech synthesis data 
         */
        public static final int tts_install_data_summary=0x7f08074a;
        /**  On main TTS Settings screen, click to install required speech synthesis data 
         */
        public static final int tts_install_data_title=0x7f080749;
        /**  On main TTS Settings screen, language summary if it can't default to system language [CHAR LIMIT=50] 
         */
        public static final int tts_lang_not_selected=0x7f080745;
        /**  Entry in the TTS engine language/locale picker, when selected will try to default to the system language [CHAR LIMIT=50] 
         */
        public static final int tts_lang_use_system=0x7f080744;
        /**  [CHAR LIMIT=30] Notification message that appears after the user has installed a new TTS engine,
         to warn the user that this engine cannot be used before the checkbox for that engine
         in TTS settings is checked. 
         */
        public static final int tts_notif_engine_install_message=0x7f080764;
        /**  [CHAR LIMIT=33] Notification title that appears when the installation of a new TTS engine completed 
         */
        public static final int tts_notif_engine_install_title=0x7f080763;
        /**  On main TTS Settings screen, summary for triggering playback of an example of speech synthesis 
         */
        public static final int tts_play_example_summary=0x7f080748;
        /**  On main TTS Settings screen, triggers playback of an example of speech synthesis 
         */
        public static final int tts_play_example_title=0x7f080747;
        /**  Name of the TTS package as listed by the package manager. 
         */
        public static final int tts_settings=0x7f080738;
        /**  Text spoken by the TTS engine when TTS settings (other than language) have been changed 
         */
        public static final int tts_settings_changed_demo=0x7f08074c;
        /**  TTS option item name in the main settings screen 
         */
        public static final int tts_settings_title=0x7f080739;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         tts engine is queried for status [CHAR LIMIT=150] 
         */
        public static final int tts_status_checking=0x7f080757;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is not supported by the engine [CHAR LIMIT=150] 
         */
        public static final int tts_status_not_supported=0x7f080756;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is fully supported by the engine [CHAR LIMIT=150]
         */
        public static final int tts_status_ok=0x7f080754;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is supported by the engine only if there's a working network connection [CHAR LIMIT=150] 
         */
        public static final int tts_status_requires_network=0x7f080755;
        /**  On main TTS Settings screen, title of a field explaining current TTS engine status for
         current default language [CHAR LIMIT=50] 
         */
        public static final int tts_status_title=0x7f080753;
        /**  Phone Info screen. Button label to turn off the radio . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_off_radio=0x7f080076;
        /**  Phone info 
 Phone Info screen. Button label to turn on the radio . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_on_radio=0x7f080075;
        /**  Manage applications, individual application info screen, menu item to uninstall an application for all users. 
         */
        public static final int uninstall_all_users_text=0x7f080524;
        /**  Manage applications, individual application info screen, button label under Storage heading. Button to remove the application from the system. 
         */
        public static final int uninstall_text=0x7f080523;
        /**  Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.
         */
        public static final int unknown=0x7f080531;
        /**  Warning toast shown when data usage screen can't find specified app 
         */
        public static final int unknown_app=0x7f080aa8;
        /**  Title shown on security settings to allow the user to change their lockscreen password [CHAR LIMIT=22]
         */
        public static final int unlock_change_lock_password_title=0x7f0801e9;
        /**  Title shown on security settings to allow the user to change their lockscreen pattern [CHAR LIMIT=22] 
         */
        public static final int unlock_change_lock_pattern_title=0x7f0801e7;
        /**  Title shown on security settings to allow the user to change their lockscreen PIN [CHAR LIMIT=22] 
         */
        public static final int unlock_change_lock_pin_title=0x7f0801e8;
        /**  Content of the dialog shown when the user removes the device lock password [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_password=0x7f0801e2;
        /**  Content of the dialog shown when the user removes the device lock password and the user has fingerprints enrolled [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_password_fingerprint=0x7f0801e3;
        /**  Content of the dialog shown when the user removes the device lock pattern [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_pattern=0x7f0801de;
        /**  Content of the dialog shown when the user removes the device lock pattern and the user has fingerprints enrolled [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_pattern_fingerprint=0x7f0801df;
        /**  Content of the dialog shown when the user removes the device lock PIN [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_pin=0x7f0801e0;
        /**  Content of the dialog shown when the user removes the device lock PIN and the user has fingerprints enrolled [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_pin_fingerprint=0x7f0801e1;
        /**  Content of the dialog shown when the user removes the device lock of unknown type [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_unknown=0x7f0801e4;
        /**  Content of the dialog shown when the user removes the device lock of unknown type and the user has fingerprints enrolled [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_content_unknown_fingerprint=0x7f0801e5;
        /**  Affirmative action of the dialog shown when the user removes the device lock [CHAR LIMIT=25] 
         */
        public static final int unlock_disable_frp_warning_ok=0x7f0801e6;
        /**  Title of the dialog shown when the user removes the device lock [CHAR LIMIT=NONE] 
         */
        public static final int unlock_disable_frp_warning_title=0x7f0801dd;
        /**  Title for option to turn of password/pin/pattern unlock. [CHAR LIMIT=22] 
         */
        public static final int unlock_disable_lock_title=0x7f0801dc;
        /**  Summary for preference that has been disabled by because of the DevicePolicyAdmin, or because device encryption is enabled, or because there are credentials in the credential storage [CHAR LIMIT=50] 
         */
        public static final int unlock_set_unlock_disabled_summary=0x7f0801d5;
        /**   Summary for PreferenceScreen to changeecurity method: None/Pattern/PIN/Password [CHAR LIMIT=45]  
         */
        public static final int unlock_set_unlock_launch_picker_change_summary=0x7f0801c8;
        /**   Title for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_launch_picker_change_title=0x7f0801c7;
        /**   Summary for PreferenceScreen to changeecurity method: None/Pattern/PIN/Password [CHAR LIMIT=45]  
         */
        public static final int unlock_set_unlock_launch_picker_enable_summary=0x7f0801c9;
        /**   Title for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_launch_picker_title=0x7f0801c6;
        /**  Summary for "Configure lockscreen" when security is disabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_none=0x7f0801d7;
        /**  Summary for "Configure lockscreen" when lock screen is off [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_off=0x7f0801d6;
        /**  Summary for "Configure lockscreen" when security password is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_password=0x7f0801da;
        /**  Summary for "Configure lockscreen" when security pattern is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_pattern=0x7f0801d8;
        /**  Summary for "Configure lockscreen" when security PIN is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_pin=0x7f0801d9;
        /**  Summary for preference that disables unlock security [CHAR LIMIT=45]
         */
        public static final int unlock_set_unlock_none_summary=0x7f0801cd;
        /**  Title for preference that disables unlock security [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_none_title=0x7f0801cc;
        /**  Summary for preference that disables unlock security [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_off_summary=0x7f0801cb;
        /**  Title for preference that disables unlock security [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_off_title=0x7f0801ca;
        /**  Title for preference that guides the user through creating an unlock password [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_password_summary=0x7f0801d3;
        /**  Title for preference that guides the user through creating an unlock password [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_password_title=0x7f0801d2;
        /**  Summary for preference that guides the user through creating an unlock pattern [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_pattern_summary=0x7f0801cf;
        /**  Title for preference that guides the user through creating an unlock pattern [CHAR LIMIT=22]
         */
        public static final int unlock_set_unlock_pattern_title=0x7f0801ce;
        /**  Summary for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_pin_summary=0x7f0801d1;
        /**  Title for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_pin_title=0x7f0801d0;
        /**  Footer text in when choosing screen lock type during setup wizard, telling the user that
         they can add fingerprint after they complete setup wizard. The text "Settings > Security"
         should match settings_label and security_settings_title [CHAR LIMIT=NONE] 
         */
        public static final int unlock_setup_wizard_fingerprint_details=0x7f0801db;
        /**  SD card unmount informative text   [CHAR LIMIT=NONE] 
         */
        public static final int unmount_inform_text=0x7f0803e1;
        /**  Name to assign to a Network Access Point that was saved without a name 
         */
        public static final int untitled_apn=0x7f0807bb;
        /**  Title of usage access screen [CHAR LIMIT=30] 
         */
        public static final int usage_access=0x7f080ac6;
        /**  Description of the usage access setting [CHAR LIMIT=NONE] 
         */
        public static final int usage_access_description=0x7f080ac9;
        /**  Title of Usage Access preference item [CHAR LIMIT=30] 
         */
        public static final int usage_access_title=0x7f080792;
        /**  XXX remove? Strings used for displaying usage statistics 
         */
        public static final int usage_stats_label=0x7f08062c;
        /**  label for usage time 
         */
        public static final int usage_time_label=0x7f080631;
        /**  [CHAR_LIMIT=NONE] Label for amount of power use that was actually observed (though
         the change in battery level) 
         */
        public static final int usage_type_actual_power=0x7f0806dd;
        /**  Label for Audio usage time 
         */
        public static final int usage_type_audio=0x7f0806d5;
        /**  Label for Camera usage time 
         */
        public static final int usage_type_camera=0x7f0806d7;
        /**  [CHAR_LIMIT=NONE] Label for amount of power use that was computed 
         */
        public static final int usage_type_computed_power=0x7f0806dc;
        /**  Label for CPU usage time 
         */
        public static final int usage_type_cpu=0x7f0806ca;
        /**  Label for CPU usage in foreground 
         */
        public static final int usage_type_cpu_foreground=0x7f0806cb;
        /**  Label for mobile network data received [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_recv=0x7f0806d1;
        /**  Label for mobile network data sent [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_send=0x7f0806d0;
        /**  Label for Wi-Fi network data received [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_wifi_recv=0x7f0806d4;
        /**  Label for Wi-Fi network data sent [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_wifi_send=0x7f0806d3;
        /**  Label for Flashlight usage time 
         */
        public static final int usage_type_flashlight=0x7f0806d8;
        /**  Label for GPS usage time 
         */
        public static final int usage_type_gps=0x7f0806cd;
        /**  Label for time that there was no cell coverage 
         */
        public static final int usage_type_no_coverage=0x7f0806da;
        /**  Label for time that a feature has been on 
         */
        public static final int usage_type_on_time=0x7f0806d9;
        /**  Label for Phone usage time 
         */
        public static final int usage_type_phone=0x7f0806cf;
        /**  Label for mobile network radio active time [CHAR LIMIT=32] 
         */
        public static final int usage_type_radio_active=0x7f0806d2;
        /**  Label for the total power capacity of the device's battery 
         */
        public static final int usage_type_total_battery_capacity=0x7f0806db;
        /**  Label for Video usage time 
         */
        public static final int usage_type_video=0x7f0806d6;
        /**  [CHAR LIMIT=25] Label for keeping device from sleeping 
         */
        public static final int usage_type_wake_lock=0x7f0806cc;
        /**  [CHAR LIMIT=25] Label for WIFI usage time 
         */
        public static final int usage_type_wifi_running=0x7f0806ce;
        /**  UI debug setting: disable USB audio routing title [CHAR LIMIT=32] 
         */
        public static final int usb_audio_disable_routing=0x7f080838;
        /**  UI debug setting: disable USB audio routing summary [CHAR LIMIT=50] 
         */
        public static final int usb_audio_disable_routing_summary=0x7f080839;
        /**  Storage setting.  USB connection category [CHAR LIMIT=30]
         */
        public static final int usb_connection_category=0x7f0803f1;
        /**  Storage setting.  Summary for MIDI checkbox [CHAR LIMIT=NONE]
         */
        public static final int usb_midi_summary=0x7f0803f7;
        /**  Storage setting.  Title for MIDI checkbox [CHAR LIMIT=30]
         */
        public static final int usb_midi_title=0x7f0803f6;
        /**  Storage setting.  Summary for MTP checkbox [CHAR LIMIT=NONE]
         */
        public static final int usb_mtp_summary=0x7f0803f3;
        /**  Storage setting.  Title for MTP checkbox [CHAR LIMIT=30]
         */
        public static final int usb_mtp_title=0x7f0803f2;
        /**  Storage setting.  Summary for PTP checkbox [CHAR LIMIT=NONE]
         */
        public static final int usb_ptp_summary=0x7f0803f5;
        /**  Storage setting.  Title for PTP checkbox [CHAR LIMIT=30]
         */
        public static final int usb_ptp_title=0x7f0803f4;
        /**  USB tethered subtext - shown when USB is connected and being tethered 
         */
        public static final int usb_tethering_active_subtext=0x7f080485;
        /**  USB available subtext - shown when USB is connected but not currently being tethered 
         */
        public static final int usb_tethering_available_subtext=0x7f080484;
        public static final int usb_tethering_button_text=0x7f080483;
        /**  USB errored subtext - shown when USB is broken for some reason 
         */
        public static final int usb_tethering_errored_subtext=0x7f080489;
        /**  USB storage subtext - shown when tethering is disabled because USB storage is active 
         */
        public static final int usb_tethering_storage_active_subtext=0x7f080486;
        /**  USB unavailable subtext - shown when USB is not connected 
         */
        public static final int usb_tethering_turnon_subtext=0x7f080488;
        /**  USB unavailable subtext - shown when USB is not connected 
         */
        public static final int usb_tethering_unavailable_subtext=0x7f080487;
        /**  USB Tethering options 
         */
        public static final int usb_title=0x7f080482;
        /**  The title used in a dialog which lets the user select what the USB connection
         for this device should be used for. Choices are usb_use_charging_only,
         usb_use_file_transfer, use_use_photo_transfer, and usb_use_MIDI 
         */
        public static final int usb_use=0x7f080aed;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for entering MIDI mode. 
         */
        public static final int usb_use_MIDI=0x7f080aeb;
        /**  Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for entering MIDI mode. 
         */
        public static final int usb_use_MIDI_desc=0x7f080aec;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for charging only. 
         */
        public static final int usb_use_charging_only=0x7f080ae3;
        /**  Decription of one of the choices in a dialog (with title defined in usb_use) that lets the
         user select what the USB connection for this device should be used for. This choice
         is for charging only. 
         */
        public static final int usb_use_charging_only_desc=0x7f080ae4;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for transferring files via MTP. 
         */
        public static final int usb_use_file_transfers=0x7f080ae7;
        /**  Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for transferring files via MTP. 
         */
        public static final int usb_use_file_transfers_desc=0x7f080ae8;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for transferring photos via PTP. 
         */
        public static final int usb_use_photo_transfers=0x7f080ae9;
        /**  Description of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for transferring photos via PTP. 
         */
        public static final int usb_use_photo_transfers_desc=0x7f080aea;
        /**  Title of one of the choices in a dialog (with title defined in usb_use) that lets the user
         select what the USB connection for this device should be used for. This choice
         is for powering the other device only. 
         */
        public static final int usb_use_power_only=0x7f080ae5;
        /**  Decription of one of the choices in a dialog (with title defined in usb_use) that lets the
         user select what the USB connection for this device should be used for. This choice
         is for powering the other device only. 
         */
        public static final int usb_use_power_only_desc=0x7f080ae6;
        /**  On main TTS Settings screen, summary for toggle used to force use of default TTS settings 
         */
        public static final int use_default_tts_settings_summary=0x7f08073b;
        /**  On main TTS Settings screen, title for toggle used to force use of default TTS settings 
         */
        public static final int use_default_tts_settings_title=0x7f08073a;
        /**  [CHAR_LIMIT=100] Security & location settings screen, setting check box summary for Google search 
         */
        public static final int use_location_summary=0x7f0804c2;
        /**  [CHAR_LIMIT=30] Security & location settings screen, setting check box label for Google search 
         */
        public static final int use_location_title=0x7f0804c1;
        /**  Title for settings whether or not the framework will select input methods in an IME based on the current system locale. [CHAR LIMIT=35] 
         */
        public static final int use_system_language_to_select_input_method_subtypes=0x7f0805e3;
        /**  User account title [CHAR LIMIT=30] 
         */
        public static final int user_account_title=0x7f08095d;
        /**  Summary for add user action, when it's disabled [CHAR LIMIT=100] 
         */
        public static final int user_add_max_count=0x7f0808f6;
        /**  User menu to allow creating new users from lockscreen [CHAR LIMIT=30] 
         */
        public static final int user_add_on_lockscreen_menu=0x7f080906;
        /**  Summary for add restricted profile entry in the choice dialog [CHAR LIMIT=none] 
         */
        public static final int user_add_profile_item_summary=0x7f0808f8;
        /**  Button text for adding a restricted profile [CHAR LIMIT=25] 
         */
        public static final int user_add_profile_item_title=0x7f0808fa;
        /**  Summary for add user entry in the choice dialog [CHAR LIMIT=none] 
         */
        public static final int user_add_user_item_summary=0x7f0808f7;
        /**  Button text for adding a regular user [CHAR LIMIT=25] 
         */
        public static final int user_add_user_item_title=0x7f0808f9;
        /**  User settings add user menu [CHAR LIMIT=35] 
         */
        public static final int user_add_user_menu=0x7f0808eb;
        /**  Message for add user confirmation dialog - long version. [CHAR LIMIT=none] 
         */
        public static final int user_add_user_message_long=0x7f0808fc;
        /**  Message for add user confirmation dialog - short version. [CHAR LIMIT=none] 
         */
        public static final int user_add_user_message_short=0x7f0808fd;
        /**  User settings add user or restricted profile menu [CHAR LIMIT=35] 
         */
        public static final int user_add_user_or_profile_menu=0x7f0808ea;
        /**  Title for add user confirmation dialog [CHAR LIMIT=30] 
         */
        public static final int user_add_user_title=0x7f0808fb;
        /**  Title for add user type dialog [CHAR LIMIT=45] 
         */
        public static final int user_add_user_type_title=0x7f0808f5;
        /**  Setting label to show that a new user is being added [CHAR LIMIT=30] 
         */
        public static final int user_adding_new_user=0x7f080911;
        /**  Message to limited users that they cannot add accounts [CHAR LIMIT=100] 
         */
        public static final int user_cannot_add_accounts_message=0x7f080904;
        /**  Message to secondary users that only owner can manage users [CHAR LIMIT=none] 
         */
        public static final int user_cannot_manage_message=0x7f080903;
        /**  User removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_confirm_remove_message=0x7f08090e;
        /**  User (self) removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_confirm_remove_self_message=0x7f08090d;
        /**  User (self) removal confirmation title [CHAR LIMIT=30] 
         */
        public static final int user_confirm_remove_self_title=0x7f080909;
        /**  User removal confirmation title [CHAR LIMIT=25] 
         */
        public static final int user_confirm_remove_title=0x7f08090a;
        /**  Delete button text [CHAR LIMIT=25] 
         */
        public static final int user_delete_button=0x7f080913;
        /**  Spoken content description for delete icon beside a user [CHAR LIMIT=none] 
         */
        public static final int user_delete_user_description=0x7f080912;
        /**  User dictionary settings. Text on the dialog button to confirm adding a word. [CHAR LIMIT=15] 
         */
        public static final int user_dict_settings_add_dialog_confirm=0x7f0805c9;
        /**  User dictionary settings. Text on the dialog button mask advanced options. [CHAR LIMIT=15] 
         */
        public static final int user_dict_settings_add_dialog_less_options=0x7f0805c8;
        /**  User dictionary settings. Text on the dialog button to pop more options for adding a word. [CHAR LIMIT=16] 
         */
        public static final int user_dict_settings_add_dialog_more_options=0x7f0805c7;
        /**  User dictionary settings. The title of the dialog to add a new word to the user dictionary. [CHAR LIMIT=25] 
         */
        public static final int user_dict_settings_add_dialog_title=0x7f0805c5;
        /**  User dictionary settings. Label to put before the language field. [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_locale_option_name=0x7f0805cc;
        /**  User dictionary settings. The title of the menu item to add a new word to the user dictionary. 
         */
        public static final int user_dict_settings_add_menu_title=0x7f0805c4;
        /**  User dictionary settings. The title of the screen to add/edit a new word to the user dictionary; it describes the phrase that will be added to the user dictionary. [CHAR LIMIT=25] 
         */
        public static final int user_dict_settings_add_screen_title=0x7f0805c6;
        /**  User dictionary settings. Hint for the text field to type the optional shortcut to add to the user dictionary. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_add_shortcut_hint=0x7f0805ce;
        /**  User dictionary settings. Label to put before the shortcut field (once a shortcut is registered, the user can type the shortcut and get the word it points to in the suggestions). [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_shortcut_option_name=0x7f0805cb;
        /**  User dictionary settings. Hint for the text field to type the word to add to the user dictionary. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_add_word_hint=0x7f0805cd;
        /**  User dictionary settings. Label to put before the word field (that's the word that will actually be added to the user dictionary when OK is pressed). [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_word_option_name=0x7f0805ca;
        /**  User dictionary settings. The list item to choose to insert a word into the user dictionary for all languages 
         */
        public static final int user_dict_settings_all_languages=0x7f0805d3;
        /**  User dictionary settings. The title of the context menu item to delete the current word 
         */
        public static final int user_dict_settings_context_menu_delete_title=0x7f0805d1;
        /**  User dictionary settings. The title of the context menu item to edit the current word 
         */
        public static final int user_dict_settings_context_menu_edit_title=0x7f0805d0;
        /**  User dictionary settings. The title of the dialog to edit an existing word in the user dictionary. 
         */
        public static final int user_dict_settings_edit_dialog_title=0x7f0805cf;
        /**  User dictionary settings. The text to show when there are no user-defined words in the dictionary  [CHAR LIMIT=200] 
         */
        public static final int user_dict_settings_empty_text=0x7f0805d2;
        /**  User dictionary settings. The text to show for the option that shows the entire list of supported locales to choose one [CHAR LIMIT=30] 
         */
        public static final int user_dict_settings_more_languages=0x7f0805d4;
        /**  User dictionary settings.  The summary of the list item to go into the Personal dictionary settings screen. 
         */
        public static final int user_dict_settings_summary=0x7f0805c3;
        /**  User dictionary settings. The title of the list item to go into the Personal dictionary settings screen. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_title=0x7f0805c2;
        /**  Title of preference to enable calling[CHAR LIMIT=40] 
         */
        public static final int user_enable_calling=0x7f080919;
        /**  Message for confirmation of turning on calls and SMS [CHAR LIMIT=none] 
         */
        public static final int user_enable_calling_and_sms_confirm_message=0x7f08091f;
        /**  Title for confirmation of turning on calls and SMS [CHAR LIMIT=45] 
         */
        public static final int user_enable_calling_and_sms_confirm_title=0x7f08091e;
        /**  Message for confirmation of turning on calls [CHAR LIMIT=none] 
         */
        public static final int user_enable_calling_confirm_message=0x7f08091d;
        /**  Title for confirmation of turning on calls [CHAR LIMIT=40] 
         */
        public static final int user_enable_calling_confirm_title=0x7f08091c;
        /**  Title of preference to enable calling and SMS [CHAR LIMIT=45] 
         */
        public static final int user_enable_calling_sms=0x7f08091a;
        /**  Message to user to confirm exiting guest. [CHAR LIMIT=none] 
         */
        public static final int user_exit_guest_confirm_message=0x7f080917;
        /**  Title of dialog to user to confirm exiting guest. [CHAR LIMIT=50] 
         */
        public static final int user_exit_guest_confirm_title=0x7f080916;
        /**  Label for button in confirmation dialog when exiting guest session [CHAR LIMIT=35] 
         */
        public static final int user_exit_guest_dialog_remove=0x7f080918;
        /**  Label for item to exit guest mode [CHAR LIMIT=35] 
         */
        public static final int user_exit_guest_title=0x7f080915;
        /**  Title for Guest user [CHAR LIMIT=35] 
         */
        public static final int user_guest=0x7f080914;
        /**  An option in a photo selection dialog, if there is no photo yet [CHAR LIMIT=50] 
         */
        public static final int user_image_choose_photo=0x7f080985;
        /**  Accessibility message for the photo selector which is a button/popup with the current photo [CHAR LIMIT=50] 
         */
        public static final int user_image_photo_selector=0x7f080986;
        /**  An option in a photo selection dialog, if there is no photo yet [CHAR LIMIT=50] 
         */
        public static final int user_image_take_photo=0x7f080984;
        /**  Text shown for title of user info setting [CHAR LIMIT=20]
         */
        public static final int user_info_settings_title=0x7f080173;
        /**  User settings header for list of users and profiles [CHAR LIMIT=40] 
         */
        public static final int user_list_title=0x7f0808e9;
        /**  User settings warning that restricted profile needs a screen lock [CHAR LIMIT=NONE] 
         */
        public static final int user_need_lock_message=0x7f0808ed;
        /**  User details new restricted profile name [CHAR LIMIT=30] 
         */
        public static final int user_new_profile_name=0x7f080908;
        /**  User details new user name [CHAR LIMIT=30] 
         */
        public static final int user_new_user_name=0x7f080907;
        /**  Title for the preference to enter the nickname of the userto display in the user switcher [CHAR LIMIT=25]
         */
        public static final int user_nickname=0x7f0808f4;
        /**  User information string to represent the owner of the device [CHAR LIMIT=25] 
         */
        public static final int user_owner=0x7f0808f2;
        /**  User picture title [CHAR LIMIT=30] 
         */
        public static final int user_picture_title=0x7f08095e;
        /**  User profile removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_profile_confirm_remove_message=0x7f080910;
        /**  Profile removal confirmation title [CHAR LIMIT=25] 
         */
        public static final int user_profile_confirm_remove_title=0x7f08090b;
        /**  Title of preference to remove the user [CHAR LIMIT=35] 
         */
        public static final int user_remove_user=0x7f08091b;
        /**  User details remove user menu [CHAR LIMIT=20] 
         */
        public static final int user_remove_user_menu=0x7f080905;
        /**  User limits screen, user name rename text [CHAR LIMIT=15] 
         */
        public static final int user_rename=0x7f080973;
        /**  Summary for app entries that are controlled by another entry [CHAR LIMIT=none] 
         */
        public static final int user_restrictions_controlled_by=0x7f080975;
        /**  User app limits screen title [CHAR LIMIT=35] 
         */
        public static final int user_restrictions_title=0x7f080972;
        /**  User settings dialog button to set screen lock [CHAR LIMIT=25] 
         */
        public static final int user_set_lock_button=0x7f0808ee;
        /**  User settings screen title [CHAR LIMIT=25] 
         */
        public static final int user_settings_title=0x7f0808e8;
        /**  Button text to setup the new user later [CHAR LIMIT=25] 
         */
        public static final int user_setup_button_setup_later=0x7f080902;
        /**  Button text to setup the new user now [CHAR LIMIT=25] 
         */
        public static final int user_setup_button_setup_now=0x7f080901;
        /**  Message in dialog to setup a new user after creation [CHAR LIMIT=none] 
         */
        public static final int user_setup_dialog_message=0x7f0808ff;
        /**  Title of dialog to setup a new user [CHAR LIMIT=30] 
         */
        public static final int user_setup_dialog_title=0x7f0808fe;
        /**  Message in dialog to setup a new restricted profile after creation [CHAR LIMIT=none] 
         */
        public static final int user_setup_profile_dialog_message=0x7f080900;
        /**  User summary to indicate that a work profile is currently not set up [CHAR LIMIT=100] 
         */
        public static final int user_summary_managed_profile_not_set_up=0x7f0808f1;
        /**  User summary to indicate that user is currently not set up [CHAR LIMIT=100] 
         */
        public static final int user_summary_not_set_up=0x7f0808ef;
        /**  User summary to indicate that restricted profile is currently not set up [CHAR LIMIT=100] 
         */
        public static final int user_summary_restricted_not_set_up=0x7f0808f0;
        /**  User settings summary for a restricted profile [CHAR LIMIT=50] 
         */
        public static final int user_summary_restricted_profile=0x7f0808ec;
        /**  User settings title for current user entry "You" user. [CHAR LIMIT=30] 
         */
        public static final int user_you=0x7f0808f3;
        /**  Summary of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=NONE] 
         */
        public static final int verify_apps_over_usb_summary=0x7f080619;
        /**  Title of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=32] 
         */
        public static final int verify_apps_over_usb_title=0x7f080618;
        /**  Manage applications, version string displayed in app snippet 
         */
        public static final int version_text=0x7f080560;
        /**  Sound settings screen, setting option name checkbox 
         */
        public static final int vibrate_in_silent_title=0x7f080330;
        /**  On Language & input settings screen, setting title.  Setting to redirect vibration to input devices. [CHAR LIMIT=35] 
         */
        public static final int vibrate_input_devices=0x7f0805bb;
        /**  On Language & input settings screen, setting summary.  Setting to redirect vibration to input devices. [CHAR LIMIT=100] 
         */
        public static final int vibrate_input_devices_summary=0x7f0805bc;
        /**  Sound & notification > Other sounds: Title for the option enabling haptic feedback on touch. [CHAR LIMIT=30] 
         */
        public static final int vibrate_on_touch_title=0x7f080a02;
        /**  Sound & notification > Sound section: Title for the option managing whether or not to vibrate when ringing. [CHAR LIMIT=30] 
         */
        public static final int vibrate_when_ringing_title=0x7f0809f1;
        /**  Title for the 'voice input' category of voice input/output settings 
         */
        public static final int voice_category=0x7f080731;
        /**  Title of setting on main settings screen. This item will take the user to the screen to tweak settings related to speech functionality 
         */
        public static final int voice_input_output_settings=0x7f08072d;
        /**  Main voice input/output settings screen title 
         */
        public static final int voice_input_output_settings_title=0x7f08072e;
        /**  [CHAR_LIMIT=NONE] Name of the settings item to open the voice input settings. 
         */
        public static final int voice_input_settings=0x7f080732;
        /**  [CHAR_LIMIT=NONE] Title of the screen of the voice input settings 
         */
        public static final int voice_input_settings_title=0x7f080733;
        /**  [CHAR_LIMIT=NONE] Warning message about security implications of enabling a
         voice interaction service, displayed as a dialog
         message when the user selects to enable a service. 
         */
        public static final int voice_interaction_security_warning=0x7f080737;
        /**  [CHAR LIMIT=NONE] The summary text for the voice service preference that is
         a full voice interaction service.  This is something that provides interactive
         voice control of applications; for example you can tell it commands to have it
         launch and let you interact with applications through your voice. 
         */
        public static final int voice_interactor_preference_summary=0x7f080735;
        /**  [CHAR LIMIT=NONE] The summary text for the voice service preference that is
         a simple voice recognition service.  This is something that only provides simple
         speech to text conversions that applications can use when they want to allow you
         to provide text to them through your voice (instead of with a keyboard). 
         */
        public static final int voice_recognizer_preference_summary=0x7f080736;
        /**  Title of voice search settings list item within voice input/output settings 
         */
        public static final int voice_search_settings_title=0x7f08072f;
        /**  [CHAR LIMIT=50] The text for the settings section in which users select
         a voice interaction or recognition service to use. 
         */
        public static final int voice_service_preference_section_title=0x7f080734;
        /**  VoLTE provisioning flag off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int volte_provisioned_flag_off=0x7f08007c;
        /**  VoLTE provisioning flag on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int volte_provisioned_flag_on=0x7f08007b;
        /**  Volume description for alarm volume 
         */
        public static final int volume_alarm_description=0x7f080343;
        /**  Image description for alarm volume mute button. 
         */
        public static final int volume_alarm_mute=0x7f080347;
        /**  Volume description for media volume 
         */
        public static final int volume_media_description=0x7f080340;
        /**  Image description for media volume mute button. 
         */
        public static final int volume_media_mute=0x7f080345;
        /**  Volume description for notification volume 
         */
        public static final int volume_notification_description=0x7f080342;
        /**  Image description for notification volume mute button. 
         */
        public static final int volume_notification_mute=0x7f080346;
        /**  Volume description for ringtone and notification volume 
         */
        public static final int volume_ring_description=0x7f080341;
        /**  Image description for ringer volume mute button. 
         */
        public static final int volume_ring_mute=0x7f080344;
        /**  Button label to cancel changing a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_cancel=0x7f0808bc;
        /**  Button label to connect to a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_connect=0x7f0808bf;
        /**  Dialog title to connect to a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_connect_to=0x7f0808c2;
        /**  Preference title to create a new VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_create=0x7f0808c7;
        /**  Button label to disconnect from a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_disconnect=0x7f0808c4;
        /**  Dialog message body to disconnect from a VPN profile. 
         */
        public static final int vpn_disconnect_confirm=0x7f0808c3;
        /**  Input label for the DNS servers of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_dns_servers=0x7f0808b4;
        /**  Button label to finish editing a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_done=0x7f0808bd;
        /**  Dialog title to edit a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_edit=0x7f0808c0;
        /**  Button label to forget a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_forget=0x7f0808c1;
        /**  Selection label for the IPSec CA certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_ca_cert=0x7f0808b0;
        /**  Input label for the IPSec identifier of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_identifier=0x7f0808ad;
        /**  Input label for the IPSec pre-shared key of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_secret=0x7f0808ae;
        /**  Selection label for the IPSec server certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_server_cert=0x7f0808b1;
        /**  Selection label for the IPSec user certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_user_cert=0x7f0808af;
        /**  Input label for the L2TP secret of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_l2tp_secret=0x7f0808ac;
        /**  Error indicating that the selected VPN doesn't meet requirements. [CHAR LIMIT=NONE] 
         */
        public static final int vpn_lockdown_config_error=0x7f0808cd;
        /**  List item indicating that no always-on VPN is selected. [CHAR LIMIT=64] 
         */
        public static final int vpn_lockdown_none=0x7f0808cc;
        /**  Summary describing the always-on VPN feature. [CHAR LIMIT=NONE] 
         */
        public static final int vpn_lockdown_summary=0x7f0808cb;
        /**  Menu item to delete a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_delete=0x7f0808c9;
        /**  Menu item to edit a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_edit=0x7f0808c8;
        /**  Menu item to select always-on VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_lockdown=0x7f0808ca;
        /**  Toast message when a certificate is missing. [CHAR LIMIT=100] 
         */
        public static final int vpn_missing_cert=0x7f0808cf;
        /**  Checkbox label to enable PPP encryption for a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_mppe=0x7f0808ab;
        /**  Input label for the name of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_name=0x7f0808a8;
        /**  Option to not use a CA certificate to verify the VPN server. [CHAR LIMIT=40] 
         */
        public static final int vpn_no_ca_cert=0x7f0808ba;
        /**  Toast message when there is no network connection to start VPN. [CHAR LIMIT=100] 
         */
        public static final int vpn_no_network=0x7f0808ce;
        /**  Option to use the server certificate received from the VPN server. [CHAR LIMIT=40] 
         */
        public static final int vpn_no_server_cert=0x7f0808bb;
        /**  Hint for not using an optional feature in a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_not_used=0x7f0808b9;
        /**  Input label for the password of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_password=0x7f0808b7;
        /**  Input label for the forwarding routes of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_routes=0x7f0808b5;
        /**  Button label to save a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_save=0x7f0808be;
        /**  Checkbox label to save the username and the password in a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_save_login=0x7f0808b8;
        /**  Input label for the DNS search domains of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_search_domains=0x7f0808b3;
        /**  Input label for the server address of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_server=0x7f0808aa;
        /**  Error message for users that aren't allowed to modify VPN settings [CHAR LIMIT=none] 
         */
        public static final int vpn_settings_not_available=0x7f0805ec;
        /**  Title of preference to enter the VPN settings activity 
         */
        public static final int vpn_settings_title=0x7f080779;
        /**  Checkbox label to show advanced options of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_show_options=0x7f0808b2;
        /**  Preference title for VPN settings. [CHAR LIMIT=40] 
         */
        public static final int vpn_title=0x7f0808c6;
        /**  Input label for the type of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_type=0x7f0808a9;
        /**  Input label for the username of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_username=0x7f0808b6;
        /**  Field label to show the version number for a VPN app. [CHAR LIMIT=40] 
         */
        public static final int vpn_version=0x7f0808c5;
        /**  UI debug setting: wait for debugger to attach to debugging process? [CHAR LIMIT=50] 
         */
        public static final int wait_for_debugger=0x7f080820;
        /**  UI debug setting: wait for debugger to attach to debugging process summary [CHAR LIMIT=500] 
         */
        public static final int wait_for_debugger_summary=0x7f080821;
        /**  About phone settings screen, setting option name to see wallpapers attributions 
         */
        public static final int wallpaper_attributions=0x7f0804d0;
        /**  About phone settings screen, setting option name to see wallpapers attributions values 
         */
        public static final int wallpaper_attributions_values=0x7f0804d1;
        /**  Wallpaper settings fragment title [CHAR LIMIT=30] 
         */
        public static final int wallpaper_settings_fragment_title=0x7f08036f;
        /**  Wallpaper settings title [CHAR LIMIT=30] 
         */
        public static final int wallpaper_settings_title=0x7f08036e;
        /**  About phone settings screen, setting option name to see licensing info for WebView component. [CHAR LIMIT=35] 
         */
        public static final int webview_license_title=0x7f0804cf;
        /**  Title for the screen that lets the user choose a widget to add to the home screen
         (or other screens that can host widgets).  Note to translators: we're still determining
         the final name for Gadgets/Widgets, so please translate both for now. 
         */
        public static final int widget_picker_title=0x7f080621;
        /**  Header for the list of wifi networks
         */
        public static final int wifi_access_points=0x7f080286;
        /**  Action bar text message to manually add a wifi network [CHAR LIMIT=20]
         */
        public static final int wifi_add_network=0x7f080285;
        /**  Title of the screen to adjust IP settings 
 Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's current IP address. 
         */
        public static final int wifi_advanced_ip_address_title=0x7f0802dc;
        /**  Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's MAC address. 
         */
        public static final int wifi_advanced_mac_address_title=0x7f0802db;
        /**  Wifi Advanced settings.  Used as a label under the shortcut icon that goes to Wifi advanced settings. [CHAR LIMIT=20] 
         */
        public static final int wifi_advanced_settings_label=0x7f0802de;
        /**  Wi-Fi settings screen, advanced, settings section.  This is a header shown above advanced wifi settings. [CHAR LIMIT=30] 
         */
        public static final int wifi_advanced_titlebar=0x7f0802d7;
        /**  Setting Checkbox title whether to enable WiFi Aggressive Handover. [CHAR LIMIT=40] 
         */
        public static final int wifi_aggressive_handover=0x7f080604;
        /**  Setting Checkbox summary whether to enable Wifi aggressive handover [CHAR LIMIT=130] 
         */
        public static final int wifi_aggressive_handover_summary=0x7f08060a;
        /**  Wifi Alert message when tapping on a preference for a config locked down by device owner. [CHAR LIMIT=200] 
         */
        public static final int wifi_alert_lockdown_by_device_owner=0x7f08025a;
        /**  Setting Checkbox title whether to enable WiFi Scanning in the presence of traffic. [CHAR LIMIT=80] 
         */
        public static final int wifi_allow_scan_with_traffic=0x7f080605;
        /**  Setting Checkbox summary whether to always allow WiFi Roam Scans [CHAR LIMIT=130] 
         */
        public static final int wifi_allow_scan_with_traffic_summary=0x7f08060b;
        /**  Text warning about skipping Wi-Fi without a mobile connect (phone) [CHAR LIMIT=NONE] 
         */
        public static final int wifi_and_mobile_skipped_message=0x7f0802d4;
        /**  Label for the RadioGroup to choose wifi ap band 
         */
        public static final int wifi_ap_band_config=0x7f0802b8;
        /**  Label for the radio button to choose wifi ap 2.4 GHz band 
         */
        public static final int wifi_ap_choose_2G=0x7f0802b9;
        /**  Label for the radio button to choose wifi ap 5GHz band 
         */
        public static final int wifi_ap_choose_5G=0x7f0802ba;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_api_test=0x7f08030f;
        /**  Wifi Assistant title.  [CHAR LIMIT=40] 
         */
        public static final int wifi_assistant_title=0x7f080241;
        /**  Checkbox summary for option to connect to open Wi-Fi automatically  [CHAR LIMIT=100] 
         */
        public static final int wifi_automatically_connect_summary=0x7f080278;
        /**  Checkbox title for option to connect to open Wi-Fi automatically [CHAR LIMIT=40] 
         */
        public static final int wifi_automatically_connect_title=0x7f080277;
        /**  Checkbox summary for option to toggle poor network detection [CHAR LIMIT=60] 
         */
        public static final int wifi_avoid_poor_network_detection_summary=0x7f080276;
        /**  Wifi 2.4GHz is used as an universal itendifier for 2.4GHz band 
         */
        public static final int wifi_band_24ghz=0x7f080257;
        /**  Wifi Internal 5GHz as an universal itendifier for 5GHz band 
         */
        public static final int wifi_band_5ghz=0x7f080258;
        /**  WFC mode dialog [CHAR LIMIT=30] 
         */
        public static final int wifi_calling_mode_dialog_title=0x7f080327;
        /**  WFC mode [CHAR LIMIT=30] 
         */
        public static final int wifi_calling_mode_title=0x7f080326;
        /**  Wi-Fi Calling settings. Text displayed when Wi-Fi Calling is off 
         */
        public static final int wifi_calling_off_explanation=0x7f080328;
        /**  Wireless networks, item title to go into the WFC settings [CHAR LIMIT=30] 
         */
        public static final int wifi_calling_settings_title=0x7f080325;
        /**  Button label to dismiss the dialog 
         */
        public static final int wifi_cancel=0x7f0802d0;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_config_info=0x7f080323;
        /**  Button label to connect to a Wi-Fi network 
         */
        public static final int wifi_connect=0x7f0802ca;
        /**  Text alerting that Wi-Fi couldn't connect (phone) [CHAR LIMIT=NONE] 
         */
        public static final int wifi_connect_failed_message=0x7f0802d5;
        /**  Summary for Connected wifi network without internet 
         */
        public static final int wifi_connected_no_internet=0x7f08001c;
        /**  Status for networks disabled for unknown reason 
         */
        public static final int wifi_disabled_generic=0x7f080010;
        /**  Status for networked disabled from a DNS or DHCP failure 
         */
        public static final int wifi_disabled_network_failure=0x7f080011;
        /**  Status for networks disabled from authentication failure (wrong password
         or certificate). 
         */
        public static final int wifi_disabled_password_failure=0x7f080013;
        /**  Status for networked disabled from a wifi association failure 
         */
        public static final int wifi_disabled_wifi_failure=0x7f080012;
        /**  Wifi Display settings. The checkbox title for enabling autonomous GO during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_autonomous_go=0x7f080251;
        /**  Setting Checkbox title whether to show options for wireless display certification 
         */
        public static final int wifi_display_certification=0x7f080602;
        /**  Wifi Display settings. The sub heading for wireless display certification options. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_certification_heading=0x7f08024e;
        /**  setting Checkbox summary whether to show options for wireless display certification  
         */
        public static final int wifi_display_certification_summary=0x7f080608;
        /**  Wifi Display settings. Image description for device details button. This opens the screen to rename, unpair, etc. a single device. 
         */
        public static final int wifi_display_details=0x7f080249;
        /**  Wifi Display settings. The title of a menu item to enable wireless display [CHAR LIMIT=40] 
         */
        public static final int wifi_display_enable_menu_item=0x7f080243;
        /**  Wifi Display settings. The dropdown menu title for choosing listen channel during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_listen_channel=0x7f080255;
        /**  Wifi Display settings. The checkbox title for enabling listen mode during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_listen_mode=0x7f080250;
        /**  Wifi Display settings. Text that appears when scanning for devices is finished and no nearby device was found [CHAR LIMIT=40]
         */
        public static final int wifi_display_no_devices_found=0x7f080244;
        /**  Wifi Display settings. The dropdown menu title for choosing operating channel during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_operating_channel=0x7f080256;
        /**  Wifi Display settings. Options dialog.  The done button text. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_done=0x7f08024c;
        /**  Wifi Display settings. Options dialog.  The forget button text. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_forget=0x7f08024b;
        /**  Wifi Display settings. Options dialog.  The name label used when prompting the user to rename the display. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_name=0x7f08024d;
        /**  Wifi Display settings. Options dialog.  The title of the dialog. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_options_title=0x7f08024a;
        /**  Wifi Display settings. The button text for sending pause trigger during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_pause=0x7f080252;
        /**  Wifi Display settings. The button text for sending play (resume) trigger during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_resume=0x7f080253;
        /**  Wifi Display settings. The section title for wireless display session info. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_session_info=0x7f08024f;
        /**  Wifi Display settings. The title of the screen. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_settings_title=0x7f080242;
        /**  Wifi Display settings. The status summary for connected devices. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_connected=0x7f080246;
        /**  Wifi Display settings. The status summary for connecting devices. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_connecting=0x7f080245;
        /**  Wifi Display settings. The status summary for devices that's already in use. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_in_use=0x7f080247;
        /**  Wifi Display settings. The status summary for devices that's not available. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_not_available=0x7f080248;
        /**  Wifi Display settings. The dropdown menu title for choosing WPS configuration during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_wps_config=0x7f080254;
        /**  Label for the DNS (first one) 
         */
        public static final int wifi_dns1=0x7f0802e5;
        /**  Hint text for DNS 
         */
        public static final int wifi_dns1_hint=0x7f0802e6;
        /**  Label for the DNS (second one)
         */
        public static final int wifi_dns2=0x7f0802e7;
        /**  Hint text for DNS 
         */
        public static final int wifi_dns2_hint=0x7f0802e8;
        /**  Button for going to the previous screen or step [CHAR LIMIT=20] 
         */
        public static final int wifi_dont_skip=0x7f0802d2;
        /**  Label for the EAP anonymous identity of the network 
         */
        public static final int wifi_eap_anonymous=0x7f0802b5;
        /**  Label for the EAP CA certificate of the network 
         */
        public static final int wifi_eap_ca_cert=0x7f0802b2;
        /**  Label for the EAP identity of the network 
         */
        public static final int wifi_eap_identity=0x7f0802b4;
        /**  Label for the EAP method of the network 
         */
        public static final int wifi_eap_method=0x7f0802b0;
        /**  Label for the EAP user certificate of the network 
         */
        public static final int wifi_eap_user_cert=0x7f0802b3;
        /**  Wifi Settings. text displayed when user has restriction DISALLOW_CONFIG_WIFI [CHAR LIMIT=NONE]
         */
        public static final int wifi_empty_list_user_restricted=0x7f080294;
        /**  Wi-Fi settings. text displayed when Wi-Fi is off and network list is empty [CHAR LIMIT=50]
         */
        public static final int wifi_empty_list_wifi_off=0x7f080292;
        /**  Wi-Fi settings. text displayed when Wi-Fi is on and network list is empty [CHAR LIMIT=50]
         */
        public static final int wifi_empty_list_wifi_on=0x7f080293;
        /**  Summary text when Wi-Fi or bluetooth has error 
         */
        public static final int wifi_error=0x7f08026f;
        /**  Toast message when Wi-Fi cannot scan for networks 
         */
        public static final int wifi_fail_to_scan=0x7f080000;
        /**  Failured notification for connect 
         */
        public static final int wifi_failed_connect_message=0x7f0802cb;
        /**  Failured notification for forget 
         */
        public static final int wifi_failed_forget_message=0x7f0802cd;
        /**  Failured notification for save 
         */
        public static final int wifi_failed_save_message=0x7f0802cf;
        /**  Button label to delete a Wi-Fi network 
         */
        public static final int wifi_forget=0x7f0802cc;
        /**  Label for the frequency band of the connection 
         */
        public static final int wifi_frequency=0x7f0802ab;
        /**  Label for the gateway of the network 
         */
        public static final int wifi_gateway=0x7f0802e9;
        /**  Hint text for the gateway 
         */
        public static final int wifi_gateway_hint=0x7f0802ea;
        /**  Label for Wifi tether checkbox. Toggles Access Point on/off  [CHAR LIMIT=30] 
         */
        public static final int wifi_hotspot_checkbox_text=0x7f0802fe;
        /**  Label for Wifi tether checkbox summary. Toggles Access Point on/off  [CHAR LIMIT=60] 
         */
        public static final int wifi_hotspot_checkbox_text_summary=0x7f0802ff;
        /**  Used to open the ssid and security dialog for Wifi Access Point.  [CHAR LIMIT=30]
         */
        public static final int wifi_hotspot_configure_ap_text=0x7f080305;
        /**  Summary Used to open the ssid and security dialog for Wifi Access Point.  [CHAR LIMIT=60] 
         */
        public static final int wifi_hotspot_configure_ap_text_summary=0x7f080306;
        /**  Wifi settings button to connect in to a Hotspot. [CHAR LIMIT=50]
         */
        public static final int wifi_hotspot_connect=0x7f0802c7;
        /**  Dialog message to sign in to a Hotspot. [CHAR LIMIT=50]
         */
        public static final int wifi_hotspot_message=0x7f0802c6;
        /**  Dialog label to sign in to a Hotspot. [CHAR LIMIT=50]
         */
        public static final int wifi_hotspot_title=0x7f0802c5;
        /**  Toast message when Wi-Fi or bluetooth is disallowed in airplane mode 
         */
        public static final int wifi_in_airplane_mode=0x7f080271;
        /**  Preference title for option to install certificates 
         */
        public static final int wifi_install_credentials=0x7f08027a;
        /**  Label for the IP address of the connection 
         */
        public static final int wifi_ip_address=0x7f0802ac;
        /**  Hint text for the IP address 
         */
        public static final int wifi_ip_address_hint=0x7f0802ad;
        /**  Label for the spinner to show ip settings [CHAR LIMIT=25] 
         */
        public static final int wifi_ip_settings=0x7f0802bb;
        /**  Error message if the dns is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_dns=0x7f0802e3;
        /**  Error message if the gateway is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_gateway=0x7f0802e2;
        /**  Error message if the IP address is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_ip_address=0x7f0802e1;
        /**  Error message if the network prefix length is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_network_prefix_length=0x7f0802e4;
        /**  Menu ietm to cancel the IP settings 
         */
        public static final int wifi_ip_settings_menu_cancel=0x7f0802e0;
        /**  Menu item to save the IP settings 
         */
        public static final int wifi_ip_settings_menu_save=0x7f0802df;
        /**  Checkbox summary for option to toggle suspend power optimizations [CHAR LIMIT=30] 
         */
        public static final int wifi_limit_optimizations_summary=0x7f080283;
        /**  Menu option to Wi-Fi advanced settings 
         */
        public static final int wifi_menu_advanced=0x7f08028c;
        /**  Menu option to connect to a Wi-Fi network 
         */
        public static final int wifi_menu_connect=0x7f08028d;
        /**  Menu option to delete a Wi-Fi network 
         */
        public static final int wifi_menu_forget=0x7f08028f;
        /**  Menu option to modify a Wi-Fi network configuration 
         */
        public static final int wifi_menu_modify=0x7f080290;
        /**  Content description for menu button in Wifi setup. Not shown on the screen. [CHAR LIMIT=NONE] 
         */
        public static final int wifi_menu_more_options=0x7f080288;
        /**  Menu option to launch Wi-Fi Direct settings [CHAR LIMIT=20]
         */
        public static final int wifi_menu_p2p=0x7f08028a;
        /**  Menu option to remember a temporary Wi-Fi network 
         */
        public static final int wifi_menu_remember=0x7f08028e;
        /**  Menu option to scan Wi-Fi networks 
         */
        public static final int wifi_menu_scan=0x7f08028b;
        /**  Menu option to do WPS Push Button [CHAR LIMIT=25]
         */
        public static final int wifi_menu_wps_pbc=0x7f080287;
        /**  Menu option to do WPS Pin Entry [CHAR LIMIT=25]
         */
        public static final int wifi_menu_wps_pin=0x7f080289;
        /**  Menu option to write a Wi-Fi configuration token to an NFC tag [CHAR_LIMIT=30]
         */
        public static final int wifi_menu_write_to_nfc=0x7f080291;
        /**  Wi-Fi settings. content description for more button [CHAR LIMIT=50]
         */
        public static final int wifi_more=0x7f080296;
        /**  Label for the network prefix of the network [CHAR LIMIT=25]
         */
        public static final int wifi_network_prefix_length=0x7f0802eb;
        /**  Hint text for network prefix length 
         */
        public static final int wifi_network_prefix_length_hint=0x7f0802ec;
        /**  Summary for the remembered network but no internet connection was detected. 
         */
        public static final int wifi_no_internet=0x7f080015;
        /**  Summary for the remembered network but currently not in range. 
         */
        public static final int wifi_not_in_range=0x7f080014;
        /**  Checkbox title for option to notify user when open networks are nearby 
         */
        public static final int wifi_notify_open_networks=0x7f080272;
        /**  Checkbox summary for option to notify user when open networks are nearby [CHAR LIMIT=60]
         */
        public static final int wifi_notify_open_networks_summary=0x7f080273;
        /**  Wifi on time 
         */
        public static final int wifi_on_time=0x7f0806b9;
        /**  Wi-Fi settings. title for setup other network button [CHAR LIMIT=35]
         */
        public static final int wifi_other_network=0x7f080295;
        /**  Message text for disconnection from one device
         */
        public static final int wifi_p2p_cancel_connect_message=0x7f0802fb;
        /**  Title for cancel connect dialog 
         */
        public static final int wifi_p2p_cancel_connect_title=0x7f0802fa;
        /**  Message text for remembered group deletion
         */
        public static final int wifi_p2p_delete_group_message=0x7f0802fc;
        public static final int wifi_p2p_device_info=0x7f0802ee;
        /**  Message text for disconnection from one device
         */
        public static final int wifi_p2p_disconnect_message=0x7f0802f8;
        /**  Message text for disconnection from multiple devices
         */
        public static final int wifi_p2p_disconnect_multiple_message=0x7f0802f9;
        /**  Title for disconnect dialog 
         */
        public static final int wifi_p2p_disconnect_title=0x7f0802f7;
        /**  Toast text for a failed connection initiation 
         */
        public static final int wifi_p2p_failed_connect_message=0x7f0802f5;
        /**  Message text for failure to rename 
         */
        public static final int wifi_p2p_failed_rename_message=0x7f0802f6;
        /**  Menu option to Rename
         */
        public static final int wifi_p2p_menu_rename=0x7f0802f2;
        /**  Menu option to discover peers
         */
        public static final int wifi_p2p_menu_search=0x7f0802f0;
        /**  Menu option when discovery is in progress [CHAR LIMIT=25] 
         */
        public static final int wifi_p2p_menu_searching=0x7f0802f1;
        /**  Title for available p2p devices 
         */
        public static final int wifi_p2p_peer_devices=0x7f0802f3;
        public static final int wifi_p2p_persist_network=0x7f0802ef;
        /**  Title for remembered p2p groups 
         */
        public static final int wifi_p2p_remembered_groups=0x7f0802f4;
        /**  Wi-Fi p2p / Wi-Fi Direct settings 
 Used in the 1st-level settings screen to launch Wi-fi Direct settings [CHAR LIMIT=25] 
         */
        public static final int wifi_p2p_settings_title=0x7f0802ed;
        /**  Label for the password of the secured network 
         */
        public static final int wifi_password=0x7f0802b6;
        /**  Checkbox title for option to toggle poor network detection 
         */
        public static final int wifi_poor_network_detection=0x7f080274;
        /**  Checkbox summary for option to toggle poor network detection 
         */
        public static final int wifi_poor_network_detection_summary=0x7f080275;
        /**  Used in the 1st-level settings screen as the turn-on summary 
         */
        public static final int wifi_quick_toggle_summary=0x7f080266;
        /**  Used in the 1st-level settings screen to turn on Wi-Fi 
         */
        public static final int wifi_quick_toggle_title=0x7f080265;
        /**  Summary for the remembered network. 
         */
        public static final int wifi_remembered=0x7f08000f;
        /**  Summary text when wifi SoftAP started failed due to no legal usable channel allowed in this region by regulatory 
         */
        public static final int wifi_sap_no_channel_error=0x7f080270;
        /**  Button label to save a Wi-Fi network configuration 
         */
        public static final int wifi_save=0x7f0802ce;
        /**  Wifi saved access points.  Used as a label under the shortcut icon that goes to Wifi saved access points. [CHAR LIMIT=20] 
         */
        public static final int wifi_saved_access_points_label=0x7f0802dd;
        /**  Wi-Fi settings screen, Saved networks, settings section.  This is a header shown above Saved networks wifi settings. [CHAR LIMIT=30] 
         */
        public static final int wifi_saved_access_points_titlebar=0x7f0802d6;
        public static final int wifi_scan_always_confirm_allow=0x7f0802c3;
        public static final int wifi_scan_always_confirm_deny=0x7f0802c4;
        /**  Message informing the user how to turn off  [CHAR LIMIT=200] 
         */
        public static final int wifi_scan_always_turnoff_message=0x7f0802c2;
        public static final int wifi_scan_always_turnon_message=0x7f0802c1;
        /**  Wifi scan always mode checkbox text 
         */
        public static final int wifi_scan_notify_remember_choice=0x7f08027c;
        /**  Message to describe "Wi-Fi scan always available feature" when Wi-Fi is off. The
      place-holders "LINK_BEGIN" and "LINK_END" must NOT be translated. They mark a link to bring
      the user to "scanning settings" screen. 
         */
        public static final int wifi_scan_notify_text=0x7f08027b;
        /**  Label for the security of the connection 
         */
        public static final int wifi_security=0x7f0802a7;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static final int wifi_security_eap=0x7f08000d;
        /**  Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
         */
        public static final int wifi_security_none=0x7f080007;
        /**  Do not translate.  Concise terminology for Passpoint network 
         */
        public static final int wifi_security_passpoint=0x7f08000e;
        /**  Do not translate.  Terminology for wifi with unknown PSK type 
         */
        public static final int wifi_security_psk_generic=0x7f08000c;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static final int wifi_security_short_eap=0x7f080006;
        /**  Do not translate.  Concise terminology for wifi with unknown PSK type 
         */
        public static final int wifi_security_short_psk_generic=0x7f080005;
        /**  Do not translate.  Concise terminology for wifi with WEP security 
         */
        public static final int wifi_security_short_wep=0x7f080001;
        /**  Do not translate.  Concise terminology for wifi with WPA security 
         */
        public static final int wifi_security_short_wpa=0x7f080002;
        /**  Do not translate.  Concise terminology for wifi with WPA2 security 
         */
        public static final int wifi_security_short_wpa2=0x7f080003;
        /**  Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
         */
        public static final int wifi_security_short_wpa_wpa2=0x7f080004;
        /**  Do not translate.  Terminology for wifi with WEP security 
         */
        public static final int wifi_security_wep=0x7f080008;
        /**  Do not translate.  Terminology for wifi with WPA security 
         */
        public static final int wifi_security_wpa=0x7f080009;
        /**  Do not translate.  Terminology for wifi with WPA2 security 
         */
        public static final int wifi_security_wpa2=0x7f08000a;
        /**  Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown 
         */
        public static final int wifi_security_wpa_wpa2=0x7f08000b;
        /**  Dialog title for option to select an app which connects to open Wi-Fi automatically [CHAR LIMIT=40] 
         */
        public static final int wifi_select_assistant_dialog_title=0x7f080279;
        /**  Used by Account creation for turning on Wi-Fi  [CHAR LIMIT=60] 
         */
        public static final int wifi_select_network=0x7f08026c;
        /**  Wi-Fi settings screen, error message when the frequency band could not be set [CHAR LIMIT=50]. 
         */
        public static final int wifi_setting_frequency_band_error=0x7f0802da;
        /**  Wi-Fi settings screen, setting summary for setting the wifi frequency band [CHAR LIMIT=50]
         */
        public static final int wifi_setting_frequency_band_summary=0x7f0802d9;
        /**  Wi-Fi settings screen, setting title for setting the band [CHAR LIMIT=50]
         */
        public static final int wifi_setting_frequency_band_title=0x7f0802d8;
        /**  Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off? [CHAR LIMIT=30] 
         */
        public static final int wifi_setting_on_during_sleep_title=0x7f08027e;
        /**  Generic error message when the sleep policy could not be set. 
         */
        public static final int wifi_setting_sleep_policy_error=0x7f08027f;
        /**  Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off? 
         */
        public static final int wifi_setting_sleep_policy_title=0x7f08027d;
        /**  Used in the 1st-level settings screen to go to the 2nd-level settings screen  [CHAR LIMIT=20]
         */
        public static final int wifi_settings=0x7f080267;
        /**  Title of the Wi-fi settings screen 
         */
        public static final int wifi_settings_category=0x7f080268;
        /**  Summary text of the Wi-fi settings screen 
         */
        public static final int wifi_settings_summary=0x7f08026a;
        /**  Title of the Wi-fi settings entry in the left top level menu 
         */
        public static final int wifi_settings_title=0x7f080269;
        /**  Button message shown on the button adding manual setting.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_add_network=0x7f0807c6;
        /**  Button label to go back to previous screen. Used in SetupWizard for
      XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_back=0x7f0807ca;
        /**  Button label to dismiss the dialog.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_cancel=0x7f0807cf;
        /**  Button label to connect to a Wi-Fi network.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_connect=0x7f0807cc;
        /**  Message shown when the device is connected to a network [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_description_connected=0x7f0807db;
        /**  Message shown when the device is connecting a network [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_description_connecting=0x7f0807da;
        /**  Button label to show detailed dialog for a selected Wi-Fi settings.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=20] 
         */
        public static final int wifi_setup_detail=0x7f0807cb;
        /**  Message shown when users select EAP in Wi-Fi settings for SetupWizard,
         saying EAP can't be configured in SetupWizard flow.
         [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_eap_not_supported=0x7f0807d9;
        /**  Button label to delete a Wi-Fi network.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_forget=0x7f0807cd;
        /**  Button message shown on the button enabling users go the next step.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_next=0x7f0807c9;
        /**  Text message shown when Wifi is not connected.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_not_connected=0x7f0807c5;
        /**  Button message shown on the button refreshing a list of network.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_refresh_list=0x7f0807c7;
        /**  Button label to save a Wi-Fi network configuration.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_save=0x7f0807ce;
        /**  Button message shown on the button enabling users skip Wifi Setup.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_skip=0x7f0807c8;
        /**  The message shown above available networks when a user clicked one of available
         networks or created another profile and he/she is waiting for the connection
         is established.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_connecting=0x7f0807d6;
        /**  The message shown above available networks when a user clicked a network secured by
         EAP. We don't allow the user to connect it.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_eap_not_supported=0x7f0807d8;
        /**  Message shown above available networks when a user clicked one of available
         networks and the UI is prompting the user to edit the network configuration
         if needed. Used in Wifi Setup with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_edit_network=0x7f0807d4;
        /**  Message shown above available networks when a user clicked one of available
         networks and the UI is showing one possible existing network.
         Used in Wifi Setup. 
         */
        public static final int wifi_setup_status_existing_network=0x7f0807d2;
        /**  The message shown above available networks when a user clicked "Add network"
         button. Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_new_network=0x7f0807d5;
        /**  The message shown above available networks when connection is established,
         letting a user to proceed to the next step of the SetupWizard.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_proceed_to_next=0x7f0807d7;
        /**  The message shown above available networks when the device is scanning
         available networks [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_scanning=0x7f0807d0;
        /**  Message shown above available network when there's no connected network.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_status_select_network=0x7f0807d1;
        /**  Message shown above available networks when a user clicked one of available
         networks and the network doesn't require configuration (e.g. password)
         Used in Wifi Setup with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_unsecured_network=0x7f0807d3;
        /**  Wifi Setup For Setup Wizard with XL screen 
 Title shown in Wifi Setup Wizard with XL screen 
         */
        public static final int wifi_setup_title=0x7f0807c0;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         a user is adding a network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_add_network=0x7f0807c4;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         the device successfully connected to a network the user specified.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_connected_network=0x7f0807c3;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         the device is connecting a network the user specified.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_connecting_network=0x7f0807c2;
        /**  Title shown in Wifi Setup Wizard with XL screen when
         a user is configuring password for a network.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_editing_network=0x7f0807c1;
        /**  Used in the 1st-level settings screen to turn on Wi-Fi  [CHAR LIMIT=60] 
         */
        public static final int wifi_setup_wizard_title=0x7f08026b;
        /**  Wi-Fi settings. wps menu title [CHAR LIMIT=25]
         */
        public static final int wifi_setup_wps=0x7f080297;
        /**  Label to show/hide advanced options [CHAR LIMIT=40] 
         */
        public static final int wifi_show_advanced=0x7f080298;
        /**  Label for the check box to show password 
         */
        public static final int wifi_show_password=0x7f0802b7;
        /**  Label for the signal strength of the connection 
         */
        public static final int wifi_signal=0x7f0802a8;
        /**  Button for skipping a step after having been warned of a potential concern [CHAR LIMIT=30] 
         */
        public static final int wifi_skip_anyway=0x7f0802d1;
        /**  Text warning about skipping Wi-Fi with a mobile connect (phone) [CHAR LIMIT=NONE]
         */
        public static final int wifi_skipped_message=0x7f0802d3;
        /**  Label for the link speed of the connection 
         */
        public static final int wifi_speed=0x7f0802aa;
        /**  Label for the SSID of the network 
         */
        public static final int wifi_ssid=0x7f0802a5;
        /**  Hint for a text field to enter the SSID of a hidden wifi network. [CHAR LIMIT=35] 
         */
        public static final int wifi_ssid_hint=0x7f0802a6;
        /**  Summary text when turning Wi-Fi or bluetooth on 
         */
        public static final int wifi_starting=0x7f08026d;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_disabled=0x7f08031f;
        /**  wifi state values
 Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_disabling=0x7f08031e;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_enabled=0x7f080321;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_enabling=0x7f080320;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int wifi_state_label=0x7f080312;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_unknown=0x7f080322;
        /**  Label for the status of the connection 
         */
        public static final int wifi_status=0x7f0802a9;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_status_test=0x7f080310;
        /**  Summary text when turning Wi-Fi or bluetooth off 
         */
        public static final int wifi_stopping=0x7f08026e;
        /**  Checkbox title for option to toggle suspend power optimizations [CHAR LIMIT=30] 
         */
        public static final int wifi_suspend_efficiency_title=0x7f080280;
        /**  Checkbox title for option to toggle suspend power optimizations 
         */
        public static final int wifi_suspend_optimizations=0x7f080281;
        /**  Checkbox summary for option to toggle suspend power optimizations 
         */
        public static final int wifi_suspend_optimizations_summary=0x7f080282;
        /**  Checkbox title. Should we switch to using cellular data if Wi-Fi is still connected but the Wi-Fi network we're connected to no longer has Internet access (e.g., due to an outage)? 
         */
        public static final int wifi_switch_away_when_unvalidated=0x7f080284;
        /**  Wifi AP settings
 Label for Wifi tether checkbox. Toggles Access Point on/off 
         */
        public static final int wifi_tether_checkbox_text=0x7f0802fd;
        /**  Used to open the ssid and security dialog for Wifi Access Point 
         */
        public static final int wifi_tether_configure_ap_text=0x7f080304;
        /**  Default access point SSID used for tethering 
         */
        public static final int wifi_tether_configure_ssid_default=0x7f080308;
        /**  Subtext on configuration preference to indicate SSID and security chosen 
         */
        public static final int wifi_tether_configure_subtext=0x7f080307;
        /**  Subtext for wifi tether checkbox on success 
         */
        public static final int wifi_tether_enabled_subtext=0x7f080302;
        /**  Subtext for wifi tether checkbox on failure 
         */
        public static final int wifi_tether_failed_subtext=0x7f080303;
        /**  Summary text when turning hotspot on 
         */
        public static final int wifi_tether_starting=0x7f080300;
        /**  Summary text when turning hotspot off 
         */
        public static final int wifi_tether_stopping=0x7f080301;
        /**  Hint for unchanged fields 
         */
        public static final int wifi_unchanged=0x7f0802bc;
        /**  Hint for unspecified fields 
         */
        public static final int wifi_unspecified=0x7f0802bd;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Button text on Wifi Status screen
         */
        public static final int wifi_update=0x7f080311;
        /**  Setting Checkbox title whether to enable WiFi Verbose Logging. [CHAR LIMIT=40] 
         */
        public static final int wifi_verbose_logging=0x7f080603;
        /**  Setting Checkbox summary whether to enable Wifi verbose Logging [CHAR LIMIT=80] 
         */
        public static final int wifi_verbose_logging_summary=0x7f080609;
        /**  Substring of status line when Wi-Fi Protected Setup (WPS) is available and
         string is listed first [CHAR LIMIT=20]
         */
        public static final int wifi_wps_available_first_item=0x7f0802be;
        /**  Substring of wifi status when Wi-Fi Protected Setup (WPS) is available and
         string is listed after a wifi_secured_* string
         */
        public static final int wifi_wps_available_second_item=0x7f0802bf;
        /**  Text displayed when WPS succeeds [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_complete=0x7f08029d;
        /**  Text displayed when Wi-Fi is connected through WPS [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_connected=0x7f08029e;
        /**  Text displayed when WPS fails due to authentication issues [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_auth=0x7f0802a3;
        /**  Text displayed when WPS fails to start [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_generic=0x7f0802a0;
        /**  Text displayed when WPS fails due to another session [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_overlap=0x7f0802a4;
        /**  Text displayed when WPS fails to TKIP [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_tkip=0x7f0802a2;
        /**  Text displayed when WPS fails due to WEP [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_wep=0x7f0802a1;
        /**  Text displayed when WPS setup is in progress [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_in_progress=0x7f08029f;
        /**  Message in WriteWifiConfigToNfcDialog when prompted to enter network password [CHAR_LIMIT=40] 
         */
        public static final int wifi_wps_nfc_enter_password=0x7f0802c0;
        /**  Message in WPS dialog for PBC after start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_onstart_pbc=0x7f08029b;
        /**  Message in WPS dialog for PIN after start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_onstart_pin=0x7f08029c;
        /**  Message in WPS dialog at start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_setup_msg=0x7f08029a;
        /**  Title for the WPS setup dialog [CHAR LIMIT=50] 
         */
        public static final int wifi_wps_setup_title=0x7f080299;
        public static final int wimax_settings=0x7f080809;
        /**  UI debug setting: scaling factor for window animations [CHAR LIMIT=25] 
         */
        public static final int window_animation_scale_title=0x7f080846;
        /**  Wireless Settings screen title for things like Wi-Fi, bluetooth, airplane mode. 
         */
        public static final int wireless_networks_settings_title=0x7f080142;
        /**  Wizard back button label [CHAR LIMIT=25] 
         */
        public static final int wizard_back=0x7f080981;
        /**  Wizard next button label [CHAR LIMIT=25] 
         */
        public static final int wizard_finish=0x7f080983;
        /**  Wizard next button label [CHAR LIMIT=25] 
         */
        public static final int wizard_next=0x7f080982;
        /**  Work profile removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int work_profile_confirm_remove_message=0x7f08090f;
        /**  Work profile removal confirmation title [CHAR LIMIT=25] 
         */
        public static final int work_profile_confirm_remove_title=0x7f08090c;
        /**  Warning message about disabling usage access on profile owner [CHAR LIMIT=NONE] 
         */
        public static final int work_profile_usage_access_warning=0x7f080b0f;
        /**  Work SIM title.  [CHAR LIMIT=50] 
         */
        public static final int work_sim_title=0x7f080971;
        /**  Write Settings settings 
 Settings title in main settings screen for WRITE_SETTINGS [CHAR LIMIT=30] 
         */
        public static final int write_settings=0x7f080b1f;
        /**  Description of the write system settings [CHAR LIMIT=NONE] 
         */
        public static final int write_settings_description=0x7f080b27;
        /**  Summary of app not allowed to write system settings [CHAR LIMIT=45] 
         */
        public static final int write_settings_off=0x7f080b29;
        /**  Summary of app allowed to write system settings [CHAR LIMIT=45] 
         */
        public static final int write_settings_on=0x7f080b28;
        /**  Link to the apps page for WRITE_SETTINGS settings [CHAR LIMIT=52] 
         */
        public static final int write_settings_preference=0x7f080b25;
        /**  Summary of number of apps currently can draw overlays [CHAR LIMIT=60] 
         */
        public static final int write_settings_summary=0x7f080b21;
        /**  Title for the apps that are allowed to write system settings [CHAR LIMIT=60] 
         */
        public static final int write_settings_title=0x7f080b23;
        /**  Main settings screen item's title to go into the write system settings screen [CHAR LIMIT=30] 
         */
        public static final int write_system_settings=0x7f080b24;
        /**  Text for button to confirm writing tag 
         */
        public static final int write_tag=0x7f0809dc;
        /**  Instructions telling the user that they entered the wrong SIM PIN for the last time.
         Displayed in a dialog box.  [CHAR LIMIT=100] 
         */
        public static final int wrong_pin_code_pukked=0x7f08039c;
        /**  Strings for Dialog yes button 
         */
        public static final int yes=0x7f080065;
        /**  Sound & notification > Do Not Disturb access > Text to display when the list is empty. [CHAR LIMIT=NONE] 
         */
        public static final int zen_access_empty_text=0x7f080a0f;
        /**  Zen mode access settings - summary for warning dialog when enabling access [CHAR LIMIT=NONE] 
         */
        public static final int zen_access_warning_dialog_summary=0x7f080b08;
        /**  Zen mode access settings - title for warning dialog when enabling access [CHAR LIMIT=NONE] 
         */
        public static final int zen_access_warning_dialog_title=0x7f080b07;
        /**  [CHAR LIMIT=NONE] Zen mode settings: Event rule toast hint when enabled 
         */
        public static final int zen_event_rule_enabled_toast=0x7f080a2a;
        /**  [CHAR LIMIT=40] Zen mode settings: Event rule type name 
         */
        public static final int zen_event_rule_type_name=0x7f080a29;
        /**  [CHAR LIMIT=40] Zen mode settings: Add rule menu option name 
         */
        public static final int zen_mode_add_rule=0x7f080a20;
        /**  [CHAR LIMIT=50] Zen mode settings: Alarms option 
         */
        public static final int zen_mode_alarms=0x7f080a43;
        /**  Sound & notification > Sound section: Title for the zen mode automation option and associated settings page. [CHAR LIMIT=30] 
         */
        public static final int zen_mode_automation_settings_title=0x7f0809ea;
        /**  [CHAR LIMIT=20] Zen mode settings: Calls option 
         */
        public static final int zen_mode_calls=0x7f080a3c;
        /**  [CHAR LIMIT=40] Zen mode settings: Configure external rule 
         */
        public static final int zen_mode_configure_rule=0x7f080a26;
        /**  [CHAR LIMIT=40] Zen mode settings: Delete rule menu option name 
         */
        public static final int zen_mode_delete_rule=0x7f080a21;
        /**  [CHAR LIMIT=40] Zen mode settings: Delete rule dialog button caption 
         */
        public static final int zen_mode_delete_rule_button=0x7f080a23;
        /**  [CHAR LIMIT=40] Zen mode settings: Delete rule dialog confirmation message 
         */
        public static final int zen_mode_delete_rule_confirmation=0x7f080a22;
        /**  [CHAR LIMIT=20] Zen mode settings: End time option 
         */
        public static final int zen_mode_end_time=0x7f080a4e;
        /**  [CHAR LIMIT=60] Zen mode settings: End time option: Summary text value format when end time = next day 
         */
        public static final int zen_mode_end_time_next_day_summary_format=0x7f080a4f;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule calendar option title 
         */
        public static final int zen_mode_event_rule_calendar=0x7f080a2b;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule calendar option value for any calendar 
         */
        public static final int zen_mode_event_rule_calendar_any=0x7f080a2f;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option title 
         */
        public static final int zen_mode_event_rule_reply=0x7f080a30;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes, Maybe, or Not replied 
         */
        public static final int zen_mode_event_rule_reply_any_except_no=0x7f080a31;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes 
         */
        public static final int zen_mode_event_rule_reply_yes=0x7f080a33;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule reply option value: Yes or Maybe 
         */
        public static final int zen_mode_event_rule_reply_yes_or_maybe=0x7f080a32;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: any calendar 
         */
        public static final int zen_mode_event_rule_summary_any_calendar=0x7f080a2d;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: During events for 
         */
        public static final int zen_mode_event_rule_summary_calendar_template=0x7f080a2c;
        /**  [CHAR LIMIT=40] Zen mode settings: Event-based rule summary fragment: Where reply is 
         */
        public static final int zen_mode_event_rule_summary_reply_template=0x7f080a2e;
        /**  [CHAR LIMIT=50] Zen mode settings: Events option 
         */
        public static final int zen_mode_events=0x7f080a45;
        /**  [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From anyone 
         */
        public static final int zen_mode_from_anyone=0x7f080a3f;
        /**  [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From contacts only 
         */
        public static final int zen_mode_from_contacts=0x7f080a40;
        /**  [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: None 
         */
        public static final int zen_mode_from_none=0x7f080a42;
        /**  [CHAR LIMIT=40] Zen mode settings: Calls or messages option value: From starred contacts only 
         */
        public static final int zen_mode_from_starred=0x7f080a41;
        /**  [CHAR LIMIT=20] Zen mode settings: Messages option 
         */
        public static final int zen_mode_messages=0x7f080a3d;
        /**  Sound & notification > Sound section: Zen mode option: Alarms only [CHAR LIMIT=60] 
         */
        public static final int zen_mode_option_alarms=0x7f0809ec;
        /**  Sound & notification > Sound section: Zen mode option: Important interruptions [CHAR LIMIT=60] 
         */
        public static final int zen_mode_option_important_interruptions=0x7f0809eb;
        /**  Sound & notification > Sound section: Zen mode option: No interruptions [CHAR LIMIT=60] 
         */
        public static final int zen_mode_option_no_interruptions=0x7f0809ed;
        /**  Sound & notification > Sound section: Title for the Priority interruptions option and associated settings page. [CHAR LIMIT=30] 
         */
        public static final int zen_mode_priority_settings_title=0x7f0809e9;
        /**  [CHAR LIMIT=50] Zen mode settings: Reminders option 
         */
        public static final int zen_mode_reminders=0x7f080a44;
        /**  [CHAR LIMIT=50] Zen mode settings: Repeat callers option 
         */
        public static final int zen_mode_repeat_callers=0x7f080a47;
        /**  [CHAR LIMIT=200] Zen mode settings: Repeat callers option summary 
         */
        public static final int zen_mode_repeat_callers_summary=0x7f080a48;
        /**  [CHAR LIMIT=40] Zen mode settings: Rule name option and edit dialog title 
         */
        public static final int zen_mode_rule_name=0x7f080a1d;
        /**  [CHAR LIMIT=40] Zen mode settings: Rule name hint text 
         */
        public static final int zen_mode_rule_name_hint=0x7f080a1e;
        /**  [CHAR LIMIT=100] Zen mode settings: Warning text for invalid zen rule names 
         */
        public static final int zen_mode_rule_name_warning=0x7f080a1f;
        /**  [CHAR LIMIT=40] Zen mode settings: Text to display if rule isn't found 
         */
        public static final int zen_mode_rule_not_found_text=0x7f080a34;
        /**  [CHAR LIMIT=40] Zen mode settings: Rule summary template (when enabled) 
         */
        public static final int zen_mode_rule_summary_combination=0x7f080a35;
        /**  [CHAR LIMIT=40] Zen mode settings: External rule type 
         */
        public static final int zen_mode_rule_type=0x7f080a24;
        /**  [CHAR LIMIT=40] Zen mode settings: External rule type name if unknown 
         */
        public static final int zen_mode_rule_type_unknown=0x7f080a25;
        /**  [CHAR LIMIT=40] Zen mode settings: Time-based rule days option title 
         */
        public static final int zen_mode_schedule_rule_days=0x7f080a36;
        /**  [CHAR LIMIT=40] Zen mode settings: Downtime days option value, all days set 
         */
        public static final int zen_mode_schedule_rule_days_all=0x7f080a38;
        /**  [CHAR LIMIT=40] Zen mode settings: Downtime days option value, no days set 
         */
        public static final int zen_mode_schedule_rule_days_none=0x7f080a37;
        /**  [CHAR LIMIT=50] Zen mode settings: Selected callers summary 
         */
        public static final int zen_mode_selected_callers=0x7f080a46;
        /**  [CHAR LIMIT=50] Zen mode settings: Selected messages summary 
         */
        public static final int zen_mode_selected_messages=0x7f080a3e;
        /**  Sound & notification > Sound section: Title for the Interruptions option and associated settings page. [CHAR LIMIT=30] 
         */
        public static final int zen_mode_settings_title=0x7f0809e8;
        /**  [CHAR LIMIT=20] Zen mode settings: Start time option 
         */
        public static final int zen_mode_start_time=0x7f080a4d;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only until a specific time. 
         */
        public static final int zen_mode_summary_alarms_only_by_time=0x7f080a51;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: switch to alarms only forever. 
         */
        public static final int zen_mode_summary_alarms_only_indefinite=0x7f080a50;
        /**  [CHAR LIMIT=NONE] Zen mode summary spoken when changing mode by voice: Turn on all notifications. 
         */
        public static final int zen_mode_summary_always=0x7f080a52;
        /**  Sound & notification > Sound section: Zen mode combined summary + condition line [CHAR LIMIT=60] 
         */
        public static final int zen_mode_summary_combination=0x7f0809ee;
        /**  [CHAR LIMIT=20] Zen mode settings: When option 
         */
        public static final int zen_mode_when=0x7f080a49;
        /**  [CHAR LIMIT=20] Zen mode settings: When option value: Every night 
         */
        public static final int zen_mode_when_every_night=0x7f080a4b;
        /**  [CHAR LIMIT=20] Zen mode settings: When option value: Never 
         */
        public static final int zen_mode_when_never=0x7f080a4a;
        /**  [CHAR LIMIT=20] Zen mode settings: When option value: Weeknights 
         */
        public static final int zen_mode_when_weeknights=0x7f080a4c;
        /**  [CHAR LIMIT=NONE] Zen mode settings: Schedule rule toast hint when enabled 
         */
        public static final int zen_schedule_rule_enabled_toast=0x7f080a28;
        /**  [CHAR LIMIT=40] Zen mode settings: Schedule rule type name 
         */
        public static final int zen_schedule_rule_type_name=0x7f080a27;
        /**  Date & time setting screen setting check box title if the time zone should be determined automatically [CHAR LIMIT=30] 
         */
        public static final int zone_auto=0x7f080159;
        /**  Date & time setting screen setting option summary text when Automatic time zone check box is clear
        [CHAR LIMIT=100] 
         */
        public static final int zone_auto_summaryOff=0x7f08015b;
        /**  Date & time setting screen setting option summary text when Automatic time zone check box is selected (that is, when date and time should be determined automatically)
        [CHAR LIMIT=100]  
         */
        public static final int zone_auto_summaryOn=0x7f08015a;
        /**  Menu item on Select time zone screen 
         */
        public static final int zone_list_menu_sort_alphabetically=0x7f080164;
        /**  Menu item on Select time zone screen 
         */
        public static final int zone_list_menu_sort_by_timezone=0x7f080165;
    }
    public static final class style {
        public static final int AlertDialog_AppCompat=0x7f0d0044;
        public static final int AlertDialog_AppCompat_Light=0x7f0d0045;
        public static final int Animation_AppCompat_Dialog=0x7f0d004b;
        public static final int Animation_AppCompat_DropDownUp=0x7f0d004c;
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f0d013e;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0d013f;
        public static final int Base_AlertDialog_AppCompat=0x7f0d00d0;
        public static final int Base_AlertDialog_AppCompat_Light=0x7f0d00d1;
        public static final int Base_Animation_AppCompat_Dialog=0x7f0d00cc;
        public static final int Base_Animation_AppCompat_DropDownUp=0x7f0d00cf;
        public static final int Base_DialogWindowTitle_AppCompat=0x7f0d00cb;
        public static final int Base_DialogWindowTitleBackground_AppCompat=0x7f0d00ca;
        public static final int Base_TextAppearance_AppCompat=0x7f0d00d4;
        public static final int Base_TextAppearance_AppCompat_Body1=0x7f0d00df;
        public static final int Base_TextAppearance_AppCompat_Body2=0x7f0d00de;
        public static final int Base_TextAppearance_AppCompat_Button=0x7f0d00e2;
        public static final int Base_TextAppearance_AppCompat_Caption=0x7f0d00e0;
        public static final int Base_TextAppearance_AppCompat_Display1=0x7f0d00d8;
        public static final int Base_TextAppearance_AppCompat_Display2=0x7f0d00d7;
        public static final int Base_TextAppearance_AppCompat_Display3=0x7f0d00d6;
        public static final int Base_TextAppearance_AppCompat_Display4=0x7f0d00d5;
        public static final int Base_TextAppearance_AppCompat_Headline=0x7f0d00d9;
        /**  Deprecated text styles 
 Deprecated text styles 
 Now deprecated styles 
         */
        public static final int Base_TextAppearance_AppCompat_Inverse=0x7f0d00e5;
        public static final int Base_TextAppearance_AppCompat_Large=0x7f0d00e6;
        public static final int Base_TextAppearance_AppCompat_Large_Inverse=0x7f0d00e7;
        public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f0d00a6;
        public static final int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f0d00a7;
        public static final int Base_TextAppearance_AppCompat_Medium=0x7f0d00e8;
        public static final int Base_TextAppearance_AppCompat_Medium_Inverse=0x7f0d00e9;
        public static final int Base_TextAppearance_AppCompat_Menu=0x7f0d00e1;
        public static final int Base_TextAppearance_AppCompat_SearchResult=0x7f0d00a8;
        public static final int Base_TextAppearance_AppCompat_SearchResult_Subtitle=0x7f0d00aa;
        /**  Search View result styles 
         */
        public static final int Base_TextAppearance_AppCompat_SearchResult_Title=0x7f0d00a9;
        public static final int Base_TextAppearance_AppCompat_Small=0x7f0d00ea;
        public static final int Base_TextAppearance_AppCompat_Small_Inverse=0x7f0d00eb;
        public static final int Base_TextAppearance_AppCompat_Subhead=0x7f0d00dc;
        public static final int Base_TextAppearance_AppCompat_Subhead_Inverse=0x7f0d00dd;
        public static final int Base_TextAppearance_AppCompat_Title=0x7f0d00da;
        public static final int Base_TextAppearance_AppCompat_Title_Inverse=0x7f0d00db;
        /**  We can use the fixed TextAppearance.Material.Widget.ActionBar.Menu on 23+ 
         */
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f0d008f;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f0d0091;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f0d0093;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f0d0090;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f0d0092;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f0d008e;
        public static final int Base_TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f0d008d;
        public static final int Base_TextAppearance_AppCompat_Widget_Button=0x7f0d00e3;
        public static final int Base_TextAppearance_AppCompat_Widget_Button_Inverse=0x7f0d00e4;
        public static final int Base_TextAppearance_AppCompat_Widget_DropDownItem=0x7f0d009c;
        public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f0d00a4;
        public static final int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f0d00a5;
        public static final int Base_TextAppearance_AppCompat_Widget_Switch=0x7f0d00bc;
        public static final int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f0d00c9;
        public static final int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f0d009d;
        public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f0d00b2;
        public static final int Base_TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f0d00b1;
        public static final int Base_Theme_AppCompat=0x7f0d0111;
        /**  Menu/item attributes 
         */
        public static final int Base_Theme_AppCompat_CompactMenu=0x7f0d0114;
        public static final int Base_Theme_AppCompat_Dialog=0x7f0d0117;
        public static final int Base_Theme_AppCompat_Dialog_Alert=0x7f0d0119;
        public static final int Base_Theme_AppCompat_Dialog_FixedSize=0x7f0d011d;
        public static final int Base_Theme_AppCompat_Dialog_MinWidth=0x7f0d011b;
        /**  We're not large, so redirect to Theme.AppCompat 
         */
        public static final int Base_Theme_AppCompat_DialogWhenLarge=0x7f0d011f;
        public static final int Base_Theme_AppCompat_Light=0x7f0d0112;
        public static final int Base_Theme_AppCompat_Light_DarkActionBar=0x7f0d0113;
        public static final int Base_Theme_AppCompat_Light_Dialog=0x7f0d0118;
        public static final int Base_Theme_AppCompat_Light_Dialog_Alert=0x7f0d011a;
        public static final int Base_Theme_AppCompat_Light_Dialog_FixedSize=0x7f0d011e;
        public static final int Base_Theme_AppCompat_Light_Dialog_MinWidth=0x7f0d011c;
        public static final int Base_Theme_AppCompat_Light_DialogWhenLarge=0x7f0d0120;
        public static final int Base_ThemeOverlay_AppCompat=0x7f0d0122;
        public static final int Base_ThemeOverlay_AppCompat_ActionBar=0x7f0d0127;
        public static final int Base_ThemeOverlay_AppCompat_Dark=0x7f0d0126;
        public static final int Base_ThemeOverlay_AppCompat_Dark_ActionBar=0x7f0d0128;
        public static final int Base_ThemeOverlay_AppCompat_Light=0x7f0d0125;
        public static final int Base_V11_Theme_AppCompat_Dialog=0x7f0d012b;
        public static final int Base_V11_Theme_AppCompat_Light_Dialog=0x7f0d012c;
        public static final int Base_V12_Widget_AppCompat_AutoCompleteTextView=0x7f0d00d3;
        public static final int Base_V12_Widget_AppCompat_EditText=0x7f0d00d2;
        public static final int Base_V21_Theme_AppCompat=0x7f0d012f;
        public static final int Base_V21_Theme_AppCompat_Dialog=0x7f0d0131;
        public static final int Base_V21_Theme_AppCompat_Light=0x7f0d0130;
        public static final int Base_V21_Theme_AppCompat_Light_Dialog=0x7f0d0132;
        public static final int Base_V22_Theme_AppCompat=0x7f0d0133;
        public static final int Base_V22_Theme_AppCompat_Light=0x7f0d0134;
        public static final int Base_V23_Theme_AppCompat=0x7f0d0135;
        public static final int Base_V23_Theme_AppCompat_Light=0x7f0d0136;
        /**  Base platform-dependent theme providing an action bar in a dark-themed activity. 
         */
        public static final int Base_V7_Theme_AppCompat=0x7f0d010f;
        public static final int Base_V7_Theme_AppCompat_Dialog=0x7f0d0115;
        /**  Base platform-dependent theme providing an action bar in a light-themed activity. 
         */
        public static final int Base_V7_Theme_AppCompat_Light=0x7f0d0110;
        public static final int Base_V7_Theme_AppCompat_Light_Dialog=0x7f0d0116;
        public static final int Base_V7_Widget_AppCompat_AutoCompleteTextView=0x7f0d00ac;
        public static final int Base_V7_Widget_AppCompat_EditText=0x7f0d00b6;
        public static final int Base_Widget_AppCompat_ActionBar=0x7f0d007e;
        public static final int Base_Widget_AppCompat_ActionBar_Solid=0x7f0d0080;
        public static final int Base_Widget_AppCompat_ActionBar_TabBar=0x7f0d0085;
        public static final int Base_Widget_AppCompat_ActionBar_TabText=0x7f0d0089;
        public static final int Base_Widget_AppCompat_ActionBar_TabView=0x7f0d0087;
        /**  Action Button Styles 
         */
        public static final int Base_Widget_AppCompat_ActionButton=0x7f0d0082;
        public static final int Base_Widget_AppCompat_ActionButton_CloseMode=0x7f0d0083;
        public static final int Base_Widget_AppCompat_ActionButton_Overflow=0x7f0d0084;
        public static final int Base_Widget_AppCompat_ActionMode=0x7f0d008c;
        public static final int Base_Widget_AppCompat_ActivityChooserView=0x7f0d00ad;
        public static final int Base_Widget_AppCompat_AutoCompleteTextView=0x7f0d00ab;
        /**  Bordered ink button 
         */
        public static final int Base_Widget_AppCompat_Button=0x7f0d00c1;
        /**  Borderless ink button 
         */
        public static final int Base_Widget_AppCompat_Button_Borderless=0x7f0d00c4;
        /**  Colored borderless ink button 
         */
        public static final int Base_Widget_AppCompat_Button_Borderless_Colored=0x7f0d00c5;
        public static final int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f0d00c6;
        /**  Colored bordered ink button 
         */
        public static final int Base_Widget_AppCompat_Button_Colored=0x7f0d00c3;
        /**  Small bordered ink button 
         */
        public static final int Base_Widget_AppCompat_Button_Small=0x7f0d00c2;
        public static final int Base_Widget_AppCompat_ButtonBar=0x7f0d00cd;
        public static final int Base_Widget_AppCompat_ButtonBar_AlertDialog=0x7f0d00ce;
        public static final int Base_Widget_AppCompat_CompoundButton_CheckBox=0x7f0d00b9;
        public static final int Base_Widget_AppCompat_CompoundButton_RadioButton=0x7f0d00ba;
        public static final int Base_Widget_AppCompat_CompoundButton_Switch=0x7f0d00bb;
        /**  contains values used in all dpis except hdpi and xxhdpi 
         */
        public static final int Base_Widget_AppCompat_DrawerArrowToggle=0x7f0d00b8;
        /**  contains values used in all dpis 
         */
        public static final int Base_Widget_AppCompat_DrawerArrowToggle_Common=0x7f0d00b7;
        public static final int Base_Widget_AppCompat_DropDownItem_Spinner=0x7f0d0099;
        public static final int Base_Widget_AppCompat_EditText=0x7f0d00b5;
        public static final int Base_Widget_AppCompat_ImageButton=0x7f0d00c7;
        public static final int Base_Widget_AppCompat_Light_ActionBar=0x7f0d007f;
        public static final int Base_Widget_AppCompat_Light_ActionBar_Solid=0x7f0d0081;
        public static final int Base_Widget_AppCompat_Light_ActionBar_TabBar=0x7f0d0086;
        public static final int Base_Widget_AppCompat_Light_ActionBar_TabText=0x7f0d008a;
        public static final int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f0d008b;
        public static final int Base_Widget_AppCompat_Light_ActionBar_TabView=0x7f0d0088;
        public static final int Base_Widget_AppCompat_Light_PopupMenu=0x7f0d00a3;
        public static final int Base_Widget_AppCompat_Light_PopupMenu_Overflow=0x7f0d00a1;
        /**  Popup Menu 
         */
        public static final int Base_Widget_AppCompat_ListPopupWindow=0x7f0d009f;
        /**  Base.Widget.AppCompat.Spinner.Underlined is overridden in ldltr-v21 and v23 
         */
        public static final int Base_Widget_AppCompat_ListView=0x7f0d009a;
        /**  Spinner Widgets 
         */
        public static final int Base_Widget_AppCompat_ListView_DropDown=0x7f0d009b;
        public static final int Base_Widget_AppCompat_ListView_Menu=0x7f0d009e;
        public static final int Base_Widget_AppCompat_PopupMenu=0x7f0d00a2;
        public static final int Base_Widget_AppCompat_PopupMenu_Overflow=0x7f0d00a0;
        public static final int Base_Widget_AppCompat_PopupWindow=0x7f0d00ae;
        public static final int Base_Widget_AppCompat_ProgressBar=0x7f0d0095;
        /**  Progress Bar 
 Progress Bar 
         */
        public static final int Base_Widget_AppCompat_ProgressBar_Horizontal=0x7f0d0094;
        public static final int Base_Widget_AppCompat_RatingBar=0x7f0d00bd;
        public static final int Base_Widget_AppCompat_RatingBar_Indicator=0x7f0d00be;
        public static final int Base_Widget_AppCompat_RatingBar_Small=0x7f0d00bf;
        public static final int Base_Widget_AppCompat_SearchView=0x7f0d00b3;
        public static final int Base_Widget_AppCompat_SearchView_ActionBar=0x7f0d00b4;
        public static final int Base_Widget_AppCompat_SeekBar=0x7f0d00c0;
        public static final int Base_Widget_AppCompat_Spinner=0x7f0d0097;
        /**  The platform Underlined style only works in LTR in v21-22 
         */
        public static final int Base_Widget_AppCompat_Spinner_Underlined=0x7f0d0098;
        public static final int Base_Widget_AppCompat_TextView_SpinnerItem=0x7f0d00c8;
        public static final int Base_Widget_AppCompat_Toolbar=0x7f0d00af;
        /** 
        Widget.AppCompat.Toolbar style is purposely ommitted. This is because the support
        Toolbar implementation is used on ALL platforms and relies on the unbundled attrs.
        The supporting Toolbar styles below only use basic attrs so work fine.
    
         */
        public static final int Base_Widget_AppCompat_Toolbar_Button_Navigation=0x7f0d00b0;
        public static final int Platform_AppCompat=0x7f0d010d;
        public static final int Platform_AppCompat_Light=0x7f0d010e;
        /**  Overlay themes 
         */
        public static final int Platform_ThemeOverlay_AppCompat=0x7f0d0121;
        public static final int Platform_ThemeOverlay_AppCompat_Dark=0x7f0d0123;
        public static final int Platform_ThemeOverlay_AppCompat_Light=0x7f0d0124;
        public static final int Platform_V11_AppCompat=0x7f0d0129;
        public static final int Platform_V11_AppCompat_Light=0x7f0d012a;
        public static final int Platform_V14_AppCompat=0x7f0d012d;
        public static final int Platform_V14_AppCompat_Light=0x7f0d012e;
        /**  Spinner Widgets 
         */
        public static final int Platform_Widget_AppCompat_Spinner=0x7f0d0096;
        public static final int RtlOverlay_DialogWindowTitle_AppCompat=0x7f0d00f9;
        public static final int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem=0x7f0d00f2;
        public static final int RtlOverlay_Widget_AppCompat_DialogTitle_Icon=0x7f0d00f8;
        public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem=0x7f0d00f5;
        public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup=0x7f0d00f6;
        public static final int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text=0x7f0d00f7;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown=0x7f0d00ed;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1=0x7f0d00ef;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2=0x7f0d00f0;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Query=0x7f0d00ee;
        public static final int RtlOverlay_Widget_AppCompat_Search_DropDown_Text=0x7f0d00f1;
        public static final int RtlOverlay_Widget_AppCompat_SearchView_MagIcon=0x7f0d00ec;
        public static final int RtlUnderlay_Widget_AppCompat_ActionButton=0x7f0d00f3;
        public static final int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow=0x7f0d00f4;
        public static final int TextAppearance_AppCompat=0x7f0d004d;
        public static final int TextAppearance_AppCompat_Body1=0x7f0d0058;
        public static final int TextAppearance_AppCompat_Body2=0x7f0d0057;
        public static final int TextAppearance_AppCompat_Button=0x7f0d0062;
        public static final int TextAppearance_AppCompat_Caption=0x7f0d0059;
        public static final int TextAppearance_AppCompat_Display1=0x7f0d0051;
        public static final int TextAppearance_AppCompat_Display2=0x7f0d0050;
        public static final int TextAppearance_AppCompat_Display3=0x7f0d004f;
        public static final int TextAppearance_AppCompat_Display4=0x7f0d004e;
        public static final int TextAppearance_AppCompat_Headline=0x7f0d0052;
        public static final int TextAppearance_AppCompat_Inverse=0x7f0d005b;
        public static final int TextAppearance_AppCompat_Large=0x7f0d005c;
        public static final int TextAppearance_AppCompat_Large_Inverse=0x7f0d005d;
        public static final int TextAppearance_AppCompat_Light_SearchResult_Subtitle=0x7f0d006b;
        public static final int TextAppearance_AppCompat_Light_SearchResult_Title=0x7f0d006a;
        public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large=0x7f0d002b;
        public static final int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small=0x7f0d002c;
        public static final int TextAppearance_AppCompat_Medium=0x7f0d005e;
        public static final int TextAppearance_AppCompat_Medium_Inverse=0x7f0d005f;
        public static final int TextAppearance_AppCompat_Menu=0x7f0d005a;
        public static final int TextAppearance_AppCompat_SearchResult_Subtitle=0x7f0d002e;
        public static final int TextAppearance_AppCompat_SearchResult_Title=0x7f0d002d;
        public static final int TextAppearance_AppCompat_Small=0x7f0d0060;
        public static final int TextAppearance_AppCompat_Small_Inverse=0x7f0d0061;
        public static final int TextAppearance_AppCompat_Subhead=0x7f0d0055;
        public static final int TextAppearance_AppCompat_Subhead_Inverse=0x7f0d0056;
        public static final int TextAppearance_AppCompat_Title=0x7f0d0053;
        public static final int TextAppearance_AppCompat_Title_Inverse=0x7f0d0054;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Menu=0x7f0d0015;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle=0x7f0d0005;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse=0x7f0d0007;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Title=0x7f0d0004;
        public static final int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse=0x7f0d0006;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle=0x7f0d0018;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse=0x7f0d006e;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Title=0x7f0d0017;
        public static final int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse=0x7f0d006d;
        public static final int TextAppearance_AppCompat_Widget_Button=0x7f0d0063;
        public static final int TextAppearance_AppCompat_Widget_Button_Inverse=0x7f0d0064;
        public static final int TextAppearance_AppCompat_Widget_DropDownItem=0x7f0d0019;
        public static final int TextAppearance_AppCompat_Widget_PopupMenu_Large=0x7f0d0029;
        public static final int TextAppearance_AppCompat_Widget_PopupMenu_Small=0x7f0d002a;
        public static final int TextAppearance_AppCompat_Widget_Switch=0x7f0d0065;
        public static final int TextAppearance_AppCompat_Widget_TextView_SpinnerItem=0x7f0d0066;
        /**  These styles didn't exist on v7. Since we only use the media template in later versions
         (ICS+), just define it here and use the correct references in values/v14 
 Use platform styles 
         */
        public static final int TextAppearance_StatusBar_EventContent=0x7f0d0079;
        public static final int TextAppearance_StatusBar_EventContent_Info=0x7f0d007c;
        /**  Use own styles for which platform styles are not public 
         */
        public static final int TextAppearance_StatusBar_EventContent_Line2=0x7f0d007b;
        public static final int TextAppearance_StatusBar_EventContent_Time=0x7f0d007d;
        public static final int TextAppearance_StatusBar_EventContent_Title=0x7f0d007a;
        public static final int TextAppearance_Widget_AppCompat_ExpandedMenu_Item=0x7f0d0021;
        public static final int TextAppearance_Widget_AppCompat_Toolbar_Subtitle=0x7f0d004a;
        public static final int TextAppearance_Widget_AppCompat_Toolbar_Title=0x7f0d0049;
        /**  Themes in the "Theme.AppCompat" family will contain an action bar by default.
         If Holo themes are available on the current platform version they will be used.
         A limited Holo-styled action bar will be provided on platform versions older
         than 3.0. (API 11)

         These theme declarations contain any version-independent specification. Items
         that need to vary based on platform version should be defined in the corresponding
         "Theme.Base" theme. 
 Platform-independent theme providing an action bar in a dark-themed activity. 
         */
        public static final int Theme_AppCompat=0x7f0d00fa;
        /**  Menu/item attributes 
         */
        public static final int Theme_AppCompat_CompactMenu=0x7f0d0107;
        /**  AppCompat theme (day/night vesion) for activities. 
 AppCompat theme (day/night vesion) for activities. 
         */
        public static final int Theme_AppCompat_DayNight=0x7f0d0137;
        /**  Variant of AppCompat.DayNight that has a solid (opaque) action bar
         with an inverse color profile. The dark action bar sharply stands out against
         the light content (when applicable).  
 Variant of AppCompat.DayNight that has a solid (opaque) action bar
         with an inverse color profile. The dark action bar sharply stands out against
         the light content (when applicable).  
         */
        public static final int Theme_AppCompat_DayNight_DarkActionBar=0x7f0d0138;
        /**  AppCompat theme (day/night vesion) for dialog windows and activities,
         which is used by the {@code android.support.v7.app.Dialog} class. This changes
         the window to be floating (not fill the entire screen), and puts a
         frame around its contents. You can set this theme on an activity if
         you would like to make an activity that looks like a Dialog. 
 AppCompat theme (day/night vesion) for dialog windows and activities,
         which is used by the {@code android.support.v7.app.Dialog} class. This changes
         the window to be floating (not fill the entire screen), and puts a
         frame around its contents. You can set this theme on an activity if
         you would like to make an activity that looks like a Dialog. 
         */
        public static final int Theme_AppCompat_DayNight_Dialog=0x7f0d013a;
        /**  AppCompat user theme for alert dialog windows, which is used by the
         {@code android.support.v7.app.AlertDialog} class. 
 AppCompat user theme for alert dialog windows, which is used by the
         {@code android.support.v7.app.AlertDialog} class. 
         */
        public static final int Theme_AppCompat_DayNight_Dialog_Alert=0x7f0d013d;
        /**  Variant of Theme.AppCompat.DayNight.Dialog that has a nice minimum width for
         a regular dialog. 
 Variant of Theme.AppCompat.DayNight.Dialog that has a nice minimum width for
         a regular dialog. 
         */
        public static final int Theme_AppCompat_DayNight_Dialog_MinWidth=0x7f0d013b;
        /**  Theme for a window that will be displayed either full-screen on
         smaller screens (small, normal) or as a dialog on larger screens
         (large, xlarge). 
 Theme for a window that will be displayed either full-screen on
         smaller screens (small, normal) or as a dialog on larger screens
         (large, xlarge). 
         */
        public static final int Theme_AppCompat_DayNight_DialogWhenLarge=0x7f0d013c;
        /**  Variant of AppCompat.DayNight with no action bar.  
 Variant of AppCompat.DayNight with no action bar.  
         */
        public static final int Theme_AppCompat_DayNight_NoActionBar=0x7f0d0139;
        public static final int Theme_AppCompat_Dialog=0x7f0d0101;
        /**  Material theme for alert dialog windows, which is used by the AlertDialog class.
         This is basically a dialog but sets the background to empty so it can do
         two-tone backgrounds. For applications targeting Honeycomb or newer, this is the default
         AlertDialog theme. 
         */
        public static final int Theme_AppCompat_Dialog_Alert=0x7f0d0103;
        /**  Variant of Theme.AppCompat.Dialog that has a nice minimum width for
         a regular dialog. 
         */
        public static final int Theme_AppCompat_Dialog_MinWidth=0x7f0d0105;
        public static final int Theme_AppCompat_DialogWhenLarge=0x7f0d00ff;
        /**  Platform-independent theme providing an action bar in a light-themed activity. 
         */
        public static final int Theme_AppCompat_Light=0x7f0d00fb;
        /**  Platform-independent theme providing an action bar in a dark-themed activity. 
         */
        public static final int Theme_AppCompat_Light_DarkActionBar=0x7f0d00fc;
        public static final int Theme_AppCompat_Light_Dialog=0x7f0d0102;
        public static final int Theme_AppCompat_Light_Dialog_Alert=0x7f0d0104;
        public static final int Theme_AppCompat_Light_Dialog_MinWidth=0x7f0d0106;
        public static final int Theme_AppCompat_Light_DialogWhenLarge=0x7f0d0100;
        public static final int Theme_AppCompat_Light_NoActionBar=0x7f0d00fe;
        public static final int Theme_AppCompat_NoActionBar=0x7f0d00fd;
        public static final int ThemeOverlay_AppCompat=0x7f0d0108;
        /**  Theme overlay that replaces the normal control color, which by default is the same as the
         secondary text color, with the primary text color. 
         */
        public static final int ThemeOverlay_AppCompat_ActionBar=0x7f0d010b;
        /**  Theme overlay that replaces colors with their dark versions but preserves
         the value of colorAccent, colorPrimary and its variants. 
         */
        public static final int ThemeOverlay_AppCompat_Dark=0x7f0d010a;
        /**  Theme overlay that replaces colors with their dark versions and replaces the normal
         control color, which by default is the same as the secondary text color, with the primary
         text color. 
         */
        public static final int ThemeOverlay_AppCompat_Dark_ActionBar=0x7f0d010c;
        /**  Theme overlay that replaces colors with their light versions but preserves
         the value of colorAccent, colorPrimary and its variants. 
         */
        public static final int ThemeOverlay_AppCompat_Light=0x7f0d0109;
        /**  Styles in here can be extended for customisation in your application. Each utilises
         one of the.styles. If Holo themes are available on the current platform version
         they will be used instead of the compat styles. 
         */
        public static final int Widget_AppCompat_ActionBar=0x7f0d0000;
        public static final int Widget_AppCompat_ActionBar_Solid=0x7f0d0002;
        public static final int Widget_AppCompat_ActionBar_TabBar=0x7f0d000d;
        public static final int Widget_AppCompat_ActionBar_TabText=0x7f0d0011;
        public static final int Widget_AppCompat_ActionBar_TabView=0x7f0d000f;
        public static final int Widget_AppCompat_ActionButton=0x7f0d000a;
        public static final int Widget_AppCompat_ActionButton_CloseMode=0x7f0d000b;
        public static final int Widget_AppCompat_ActionButton_Overflow=0x7f0d000c;
        public static final int Widget_AppCompat_ActionMode=0x7f0d0016;
        public static final int Widget_AppCompat_ActivityChooserView=0x7f0d0030;
        public static final int Widget_AppCompat_AutoCompleteTextView=0x7f0d002f;
        public static final int Widget_AppCompat_Button=0x7f0d003a;
        public static final int Widget_AppCompat_Button_Borderless=0x7f0d003c;
        public static final int Widget_AppCompat_Button_Borderless_Colored=0x7f0d003d;
        public static final int Widget_AppCompat_Button_ButtonBar_AlertDialog=0x7f0d003e;
        public static final int Widget_AppCompat_Button_Colored=0x7f0d003f;
        public static final int Widget_AppCompat_Button_Small=0x7f0d003b;
        public static final int Widget_AppCompat_ButtonBar=0x7f0d0040;
        public static final int Widget_AppCompat_ButtonBar_AlertDialog=0x7f0d0041;
        public static final int Widget_AppCompat_CompoundButton_CheckBox=0x7f0d0035;
        public static final int Widget_AppCompat_CompoundButton_RadioButton=0x7f0d0036;
        public static final int Widget_AppCompat_CompoundButton_Switch=0x7f0d0034;
        public static final int Widget_AppCompat_DrawerArrowToggle=0x7f0d0012;
        /**  This style has an extra indirection to properly set RTL attributes. See styles_rtl.xml 
         */
        public static final int Widget_AppCompat_DropDownItem_Spinner=0x7f0d001e;
        public static final int Widget_AppCompat_EditText=0x7f0d0033;
        public static final int Widget_AppCompat_ImageButton=0x7f0d0042;
        public static final int Widget_AppCompat_Light_ActionBar=0x7f0d0001;
        public static final int Widget_AppCompat_Light_ActionBar_Solid=0x7f0d0003;
        /** 
         The following themes are deprecated.
    
         */
        public static final int Widget_AppCompat_Light_ActionBar_Solid_Inverse=0x7f0d0067;
        public static final int Widget_AppCompat_Light_ActionBar_TabBar=0x7f0d000e;
        public static final int Widget_AppCompat_Light_ActionBar_TabBar_Inverse=0x7f0d0068;
        public static final int Widget_AppCompat_Light_ActionBar_TabText=0x7f0d0013;
        public static final int Widget_AppCompat_Light_ActionBar_TabText_Inverse=0x7f0d0014;
        public static final int Widget_AppCompat_Light_ActionBar_TabView=0x7f0d0010;
        public static final int Widget_AppCompat_Light_ActionBar_TabView_Inverse=0x7f0d0069;
        public static final int Widget_AppCompat_Light_ActionButton=0x7f0d0071;
        public static final int Widget_AppCompat_Light_ActionButton_CloseMode=0x7f0d0073;
        public static final int Widget_AppCompat_Light_ActionButton_Overflow=0x7f0d0072;
        public static final int Widget_AppCompat_Light_ActionMode_Inverse=0x7f0d006c;
        public static final int Widget_AppCompat_Light_ActivityChooserView=0x7f0d0078;
        public static final int Widget_AppCompat_Light_AutoCompleteTextView=0x7f0d0077;
        public static final int Widget_AppCompat_Light_DropDownItem_Spinner=0x7f0d006f;
        public static final int Widget_AppCompat_Light_ListPopupWindow=0x7f0d0076;
        public static final int Widget_AppCompat_Light_ListView_DropDown=0x7f0d0075;
        public static final int Widget_AppCompat_Light_PopupMenu=0x7f0d0026;
        public static final int Widget_AppCompat_Light_PopupMenu_Overflow=0x7f0d0024;
        public static final int Widget_AppCompat_Light_SearchView=0x7f0d0070;
        public static final int Widget_AppCompat_Light_Spinner_DropDown_ActionBar=0x7f0d0074;
        public static final int Widget_AppCompat_ListPopupWindow=0x7f0d0022;
        public static final int Widget_AppCompat_ListView=0x7f0d001f;
        public static final int Widget_AppCompat_ListView_DropDown=0x7f0d0020;
        public static final int Widget_AppCompat_ListView_Menu=0x7f0d0027;
        public static final int Widget_AppCompat_PopupMenu=0x7f0d0025;
        public static final int Widget_AppCompat_PopupMenu_Overflow=0x7f0d0023;
        public static final int Widget_AppCompat_PopupWindow=0x7f0d0028;
        public static final int Widget_AppCompat_ProgressBar=0x7f0d0009;
        public static final int Widget_AppCompat_ProgressBar_Horizontal=0x7f0d0008;
        public static final int Widget_AppCompat_RatingBar=0x7f0d0037;
        public static final int Widget_AppCompat_RatingBar_Indicator=0x7f0d0038;
        public static final int Widget_AppCompat_RatingBar_Small=0x7f0d0039;
        public static final int Widget_AppCompat_SearchView=0x7f0d0031;
        public static final int Widget_AppCompat_SearchView_ActionBar=0x7f0d0032;
        public static final int Widget_AppCompat_SeekBar=0x7f0d0046;
        public static final int Widget_AppCompat_Spinner=0x7f0d001a;
        public static final int Widget_AppCompat_Spinner_DropDown=0x7f0d001c;
        public static final int Widget_AppCompat_Spinner_DropDown_ActionBar=0x7f0d001d;
        public static final int Widget_AppCompat_Spinner_Underlined=0x7f0d001b;
        public static final int Widget_AppCompat_TextView_SpinnerItem=0x7f0d0043;
        /**  Toolbar 
         */
        public static final int Widget_AppCompat_Toolbar=0x7f0d0047;
        public static final int Widget_AppCompat_Toolbar_Button_Navigation=0x7f0d0048;
    }
    public static final class xml {
        public static final int timezones=0x7f050000;
    }
    public static final class styleable {
        /**  ============================================ 
 Attributes used to style the Action Bar.
         These should be set on your theme; the default actionBarStyle will
         propagate them to the correct elements as needed.

         Please Note: when overriding attributes for an ActionBar style
         you must specify each attribute twice: once with the "android:"
         namespace prefix and once without. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionBar_background com.example.demo:background}</code></td><td> Specifies a background drawable for the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_backgroundSplit com.example.demo:backgroundSplit}</code></td><td> Specifies a background drawable for the bottom component of a split action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_backgroundStacked com.example.demo:backgroundStacked}</code></td><td> Specifies a background drawable for a second stacked row of the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_contentInsetEnd com.example.demo:contentInsetEnd}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #ActionBar_contentInsetLeft com.example.demo:contentInsetLeft}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #ActionBar_contentInsetRight com.example.demo:contentInsetRight}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #ActionBar_contentInsetStart com.example.demo:contentInsetStart}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #ActionBar_customNavigationLayout com.example.demo:customNavigationLayout}</code></td><td> Specifies a layout for custom navigation.</td></tr>
           <tr><td><code>{@link #ActionBar_displayOptions com.example.demo:displayOptions}</code></td><td> Options affecting how the action bar is displayed.</td></tr>
           <tr><td><code>{@link #ActionBar_divider com.example.demo:divider}</code></td><td> Specifies the drawable used for item dividers.</td></tr>
           <tr><td><code>{@link #ActionBar_elevation com.example.demo:elevation}</code></td><td> Elevation for the action bar itself </td></tr>
           <tr><td><code>{@link #ActionBar_height com.example.demo:height}</code></td><td> Specifies a fixed height.</td></tr>
           <tr><td><code>{@link #ActionBar_hideOnContentScroll com.example.demo:hideOnContentScroll}</code></td><td> Set true to hide the action bar on a vertical nested scroll of content.</td></tr>
           <tr><td><code>{@link #ActionBar_homeAsUpIndicator com.example.demo:homeAsUpIndicator}</code></td><td> Up navigation glyph </td></tr>
           <tr><td><code>{@link #ActionBar_homeLayout com.example.demo:homeLayout}</code></td><td> Specifies a layout to use for the "home" section of the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_icon com.example.demo:icon}</code></td><td> Specifies the drawable used for the application icon.</td></tr>
           <tr><td><code>{@link #ActionBar_indeterminateProgressStyle com.example.demo:indeterminateProgressStyle}</code></td><td> Specifies a style resource to use for an indeterminate progress spinner.</td></tr>
           <tr><td><code>{@link #ActionBar_itemPadding com.example.demo:itemPadding}</code></td><td> Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar.</td></tr>
           <tr><td><code>{@link #ActionBar_logo com.example.demo:logo}</code></td><td> Specifies the drawable used for the application logo.</td></tr>
           <tr><td><code>{@link #ActionBar_navigationMode com.example.demo:navigationMode}</code></td><td> The type of navigation to use.</td></tr>
           <tr><td><code>{@link #ActionBar_popupTheme com.example.demo:popupTheme}</code></td><td> Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar.</td></tr>
           <tr><td><code>{@link #ActionBar_progressBarPadding com.example.demo:progressBarPadding}</code></td><td> Specifies the horizontal padding on either end for an embedded progress bar.</td></tr>
           <tr><td><code>{@link #ActionBar_progressBarStyle com.example.demo:progressBarStyle}</code></td><td> Specifies a style resource to use for an embedded progress bar.</td></tr>
           <tr><td><code>{@link #ActionBar_subtitle com.example.demo:subtitle}</code></td><td> Specifies subtitle text used for navigationMode="normal" </td></tr>
           <tr><td><code>{@link #ActionBar_subtitleTextStyle com.example.demo:subtitleTextStyle}</code></td><td> Specifies a style to use for subtitle text.</td></tr>
           <tr><td><code>{@link #ActionBar_title com.example.demo:title}</code></td><td> Specifies title text used for navigationMode="normal" </td></tr>
           <tr><td><code>{@link #ActionBar_titleTextStyle com.example.demo:titleTextStyle}</code></td><td> Specifies a style to use for title text.</td></tr>
           </table>
           @see #ActionBar_background
           @see #ActionBar_backgroundSplit
           @see #ActionBar_backgroundStacked
           @see #ActionBar_contentInsetEnd
           @see #ActionBar_contentInsetLeft
           @see #ActionBar_contentInsetRight
           @see #ActionBar_contentInsetStart
           @see #ActionBar_customNavigationLayout
           @see #ActionBar_displayOptions
           @see #ActionBar_divider
           @see #ActionBar_elevation
           @see #ActionBar_height
           @see #ActionBar_hideOnContentScroll
           @see #ActionBar_homeAsUpIndicator
           @see #ActionBar_homeLayout
           @see #ActionBar_icon
           @see #ActionBar_indeterminateProgressStyle
           @see #ActionBar_itemPadding
           @see #ActionBar_logo
           @see #ActionBar_navigationMode
           @see #ActionBar_popupTheme
           @see #ActionBar_progressBarPadding
           @see #ActionBar_progressBarStyle
           @see #ActionBar_subtitle
           @see #ActionBar_subtitleTextStyle
           @see #ActionBar_title
           @see #ActionBar_titleTextStyle
         */
        public static final int[] ActionBar = {
            0x7f010000, 0x7f010001, 0x7f010031, 0x7f010071,
            0x7f010072, 0x7f010073, 0x7f010074, 0x7f010075,
            0x7f010076, 0x7f010077, 0x7f010078, 0x7f010079,
            0x7f01007a, 0x7f01007b, 0x7f01007c, 0x7f01007d,
            0x7f01007e, 0x7f01007f, 0x7f010080, 0x7f010081,
            0x7f010082, 0x7f010083, 0x7f010084, 0x7f010085,
            0x7f010086, 0x7f010087, 0x7f010088
        };
        /**
          <p>
          @attr description
           Specifies a background drawable for the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:background
        */
        public static final int ActionBar_background = 11;
        /**
          <p>
          @attr description
           Specifies a background drawable for the bottom component of a split action bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:backgroundSplit
        */
        public static final int ActionBar_backgroundSplit = 13;
        /**
          <p>
          @attr description
           Specifies a background drawable for a second stacked row of the action bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:backgroundStacked
        */
        public static final int ActionBar_backgroundStacked = 12;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:contentInsetEnd
        */
        public static final int ActionBar_contentInsetEnd = 22;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:contentInsetLeft
        */
        public static final int ActionBar_contentInsetLeft = 23;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:contentInsetRight
        */
        public static final int ActionBar_contentInsetRight = 24;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:contentInsetStart
        */
        public static final int ActionBar_contentInsetStart = 21;
        /**
          <p>
          @attr description
           Specifies a layout for custom navigation. Overrides navigationMode. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:customNavigationLayout
        */
        public static final int ActionBar_customNavigationLayout = 14;
        /**
          <p>
          @attr description
           Options affecting how the action bar is displayed. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>useLogo</code></td><td>0x1</td><td></td></tr>
<tr><td><code>showHome</code></td><td>0x2</td><td></td></tr>
<tr><td><code>homeAsUp</code></td><td>0x4</td><td></td></tr>
<tr><td><code>showTitle</code></td><td>0x8</td><td></td></tr>
<tr><td><code>showCustom</code></td><td>0x10</td><td></td></tr>
<tr><td><code>disableHome</code></td><td>0x20</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.demo:displayOptions
        */
        public static final int ActionBar_displayOptions = 4;
        /**
          <p>
          @attr description
           Specifies the drawable used for item dividers. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:divider
        */
        public static final int ActionBar_divider = 10;
        /**
          <p>
          @attr description
           Elevation for the action bar itself 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:elevation
        */
        public static final int ActionBar_elevation = 25;
        /**
          <p>
          @attr description
           Specifies a fixed height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:height
        */
        public static final int ActionBar_height = 1;
        /**
          <p>
          @attr description
           Set true to hide the action bar on a vertical nested scroll of content. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:hideOnContentScroll
        */
        public static final int ActionBar_hideOnContentScroll = 20;
        /**
          <p>
          @attr description
           Up navigation glyph 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:homeAsUpIndicator
        */
        public static final int ActionBar_homeAsUpIndicator = 2;
        /**
          <p>
          @attr description
           Specifies a layout to use for the "home" section of the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:homeLayout
        */
        public static final int ActionBar_homeLayout = 15;
        /**
          <p>
          @attr description
           Specifies the drawable used for the application icon. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:icon
        */
        public static final int ActionBar_icon = 8;
        /**
          <p>
          @attr description
           Specifies a style resource to use for an indeterminate progress spinner. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:indeterminateProgressStyle
        */
        public static final int ActionBar_indeterminateProgressStyle = 17;
        /**
          <p>
          @attr description
           Specifies padding that should be applied to the left and right sides of
             system-provided items in the bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:itemPadding
        */
        public static final int ActionBar_itemPadding = 19;
        /**
          <p>
          @attr description
           Specifies the drawable used for the application logo. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:logo
        */
        public static final int ActionBar_logo = 9;
        /**
          <p>
          @attr description
           The type of navigation to use. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> Normal static title text </td></tr>
<tr><td><code>listMode</code></td><td>1</td><td> The action bar will use a selection list for navigation. </td></tr>
<tr><td><code>tabMode</code></td><td>2</td><td> The action bar will use a series of horizontal tabs for navigation. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.demo:navigationMode
        */
        public static final int ActionBar_navigationMode = 3;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:popupTheme
        */
        public static final int ActionBar_popupTheme = 26;
        /**
          <p>
          @attr description
           Specifies the horizontal padding on either end for an embedded progress bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:progressBarPadding
        */
        public static final int ActionBar_progressBarPadding = 18;
        /**
          <p>
          @attr description
           Specifies a style resource to use for an embedded progress bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:progressBarStyle
        */
        public static final int ActionBar_progressBarStyle = 16;
        /**
          <p>
          @attr description
           Specifies subtitle text used for navigationMode="normal" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:subtitle
        */
        public static final int ActionBar_subtitle = 5;
        /**
          <p>
          @attr description
           Specifies a style to use for subtitle text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:subtitleTextStyle
        */
        public static final int ActionBar_subtitleTextStyle = 7;
        /**
          <p>
          @attr description
           Specifies title text used for navigationMode="normal" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:title
        */
        public static final int ActionBar_title = 0;
        /**
          <p>
          @attr description
           Specifies a style to use for title text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:titleTextStyle
        */
        public static final int ActionBar_titleTextStyle = 6;
        /**  Valid LayoutParams for views placed in the action bar as custom views. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionBarLayout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
           </table>
           @see #ActionBarLayout_android_layout_gravity
         */
        public static final int[] ActionBarLayout = {
            0x010100b3
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
          attribute's value can be found in the {@link #ActionBarLayout} array.
          @attr name android:layout_gravity
        */
        public static final int ActionBarLayout_android_layout_gravity = 0;
        /** Attributes that can be used with a ActionMenuItemView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionMenuItemView_android_minWidth android:minWidth}</code></td><td></td></tr>
           </table>
           @see #ActionMenuItemView_android_minWidth
         */
        public static final int[] ActionMenuItemView = {
            0x0101013f
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#minWidth}
          attribute's value can be found in the {@link #ActionMenuItemView} array.
          @attr name android:minWidth
        */
        public static final int ActionMenuItemView_android_minWidth = 0;
        /**  Size of padding on either end of a divider. 
         */
        public static final int[] ActionMenuView = {
            
        };
        /** Attributes that can be used with a ActionMode.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActionMode_background com.example.demo:background}</code></td><td> Specifies a background for the action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_backgroundSplit com.example.demo:backgroundSplit}</code></td><td> Specifies a background for the split action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_closeItemLayout com.example.demo:closeItemLayout}</code></td><td> Specifies a layout to use for the "close" item at the starting edge.</td></tr>
           <tr><td><code>{@link #ActionMode_height com.example.demo:height}</code></td><td> Specifies a fixed height for the action mode bar.</td></tr>
           <tr><td><code>{@link #ActionMode_subtitleTextStyle com.example.demo:subtitleTextStyle}</code></td><td> Specifies a style to use for subtitle text.</td></tr>
           <tr><td><code>{@link #ActionMode_titleTextStyle com.example.demo:titleTextStyle}</code></td><td> Specifies a style to use for title text.</td></tr>
           </table>
           @see #ActionMode_background
           @see #ActionMode_backgroundSplit
           @see #ActionMode_closeItemLayout
           @see #ActionMode_height
           @see #ActionMode_subtitleTextStyle
           @see #ActionMode_titleTextStyle
         */
        public static final int[] ActionMode = {
            0x7f010001, 0x7f010074, 0x7f010075, 0x7f010079,
            0x7f01007b, 0x7f010089
        };
        /**
          <p>
          @attr description
           Specifies a background for the action mode bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:background
        */
        public static final int ActionMode_background = 3;
        /**
          <p>
          @attr description
           Specifies a background for the split action mode bar. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:backgroundSplit
        */
        public static final int ActionMode_backgroundSplit = 4;
        /**
          <p>
          @attr description
           Specifies a layout to use for the "close" item at the starting edge. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:closeItemLayout
        */
        public static final int ActionMode_closeItemLayout = 5;
        /**
          <p>
          @attr description
           Specifies a fixed height for the action mode bar. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:height
        */
        public static final int ActionMode_height = 0;
        /**
          <p>
          @attr description
           Specifies a style to use for subtitle text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:subtitleTextStyle
        */
        public static final int ActionMode_subtitleTextStyle = 2;
        /**
          <p>
          @attr description
           Specifies a style to use for title text. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:titleTextStyle
        */
        public static final int ActionMode_titleTextStyle = 1;
        /**  Attrbitutes for a ActivityChooserView. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ActivityChooserView_expandActivityOverflowButtonDrawable com.example.demo:expandActivityOverflowButtonDrawable}</code></td><td> The drawable to show in the button for expanding the activities overflow popup.</td></tr>
           <tr><td><code>{@link #ActivityChooserView_initialActivityCount com.example.demo:initialActivityCount}</code></td><td> The maximal number of items initially shown in the activity list.</td></tr>
           </table>
           @see #ActivityChooserView_expandActivityOverflowButtonDrawable
           @see #ActivityChooserView_initialActivityCount
         */
        public static final int[] ActivityChooserView = {
            0x7f0100a1, 0x7f0100a2
        };
        /**
          <p>
          @attr description
           The drawable to show in the button for expanding the activities overflow popup.
             <strong>Note:</strong> Clients would like to set this drawable
             as a clue about the action the chosen activity will perform. For
             example, if share activity is to be chosen the drawable should
             give a clue that sharing is to be performed.
         


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:expandActivityOverflowButtonDrawable
        */
        public static final int ActivityChooserView_expandActivityOverflowButtonDrawable = 1;
        /**
          <p>
          @attr description
           The maximal number of items initially shown in the activity list. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:initialActivityCount
        */
        public static final int ActivityChooserView_initialActivityCount = 0;
        /**  The set of attributes that describe a AlertDialog's theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AlertDialog_android_layout android:layout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_buttonPanelSideLayout com.example.demo:buttonPanelSideLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_listItemLayout com.example.demo:listItemLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_listLayout com.example.demo:listLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_multiChoiceItemLayout com.example.demo:multiChoiceItemLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #AlertDialog_singleChoiceItemLayout com.example.demo:singleChoiceItemLayout}</code></td><td></td></tr>
           </table>
           @see #AlertDialog_android_layout
           @see #AlertDialog_buttonPanelSideLayout
           @see #AlertDialog_listItemLayout
           @see #AlertDialog_listLayout
           @see #AlertDialog_multiChoiceItemLayout
           @see #AlertDialog_singleChoiceItemLayout
         */
        public static final int[] AlertDialog = {
            0x010100f2, 0x7f0100ca, 0x7f0100cb, 0x7f0100cc,
            0x7f0100cd, 0x7f0100ce
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout}
          attribute's value can be found in the {@link #AlertDialog} array.
          @attr name android:layout
        */
        public static final int AlertDialog_android_layout = 0;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#buttonPanelSideLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:buttonPanelSideLayout
        */
        public static final int AlertDialog_buttonPanelSideLayout = 1;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#listItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:listItemLayout
        */
        public static final int AlertDialog_listItemLayout = 5;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#listLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:listLayout
        */
        public static final int AlertDialog_listLayout = 2;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#multiChoiceItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:multiChoiceItemLayout
        */
        public static final int AlertDialog_multiChoiceItemLayout = 3;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#singleChoiceItemLayout}
          attribute's value can be found in the {@link #AlertDialog} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:singleChoiceItemLayout
        */
        public static final int AlertDialog_singleChoiceItemLayout = 4;
        /** Attributes that can be used with a AppCompatImageView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AppCompatImageView_android_src android:src}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatImageView_srcCompat com.example.demo:srcCompat}</code></td><td> TODO </td></tr>
           </table>
           @see #AppCompatImageView_android_src
           @see #AppCompatImageView_srcCompat
         */
        public static final int[] AppCompatImageView = {
            0x01010119, 0x7f0100d0
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#src}
          attribute's value can be found in the {@link #AppCompatImageView} array.
          @attr name android:src
        */
        public static final int AppCompatImageView_android_src = 0;
        /**
          <p>
          @attr description
           TODO 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:srcCompat
        */
        public static final int AppCompatImageView_srcCompat = 1;
        /** Attributes that can be used with a AppCompatTextView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AppCompatTextView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTextView_textAllCaps com.example.demo:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
           </table>
           @see #AppCompatTextView_android_textAppearance
           @see #AppCompatTextView_textAllCaps
         */
        public static final int[] AppCompatTextView = {
            0x01010034, 0x7f0100a3
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
          attribute's value can be found in the {@link #AppCompatTextView} array.
          @attr name android:textAppearance
        */
        public static final int AppCompatTextView_android_textAppearance = 0;
        /**
          <p>
          @attr description
           Present the text in ALL CAPS. This may use a small-caps form when available. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textAllCaps
        */
        public static final int AppCompatTextView_textAllCaps = 1;
        /**  These are the standard attributes that make up a complete theme. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarDivider com.example.demo:actionBarDivider}</code></td><td> Custom divider drawable to use for elements in the action bar.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarItemBackground com.example.demo:actionBarItemBackground}</code></td><td> Custom item state list drawable background for action bar items.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarPopupTheme com.example.demo:actionBarPopupTheme}</code></td><td> Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarSize com.example.demo:actionBarSize}</code></td><td> Size of the Action Bar, including the contextual
             bar used to present Action Modes.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarSplitStyle com.example.demo:actionBarSplitStyle}</code></td><td> Reference to a style for the split Action Bar.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarStyle com.example.demo:actionBarStyle}</code></td><td> Reference to a style for the Action Bar </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarTabBarStyle com.example.demo:actionBarTabBarStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarTabStyle com.example.demo:actionBarTabStyle}</code></td><td> Default style for tabs within an action bar </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarTabTextStyle com.example.demo:actionBarTabTextStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarTheme com.example.demo:actionBarTheme}</code></td><td> Reference to a theme that should be used to inflate the
             action bar.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionBarWidgetTheme com.example.demo:actionBarWidgetTheme}</code></td><td> Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionButtonStyle com.example.demo:actionButtonStyle}</code></td><td> Default action button style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionDropDownStyle com.example.demo:actionDropDownStyle}</code></td><td> Default ActionBar dropdown style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionMenuTextAppearance com.example.demo:actionMenuTextAppearance}</code></td><td> TextAppearance style that will be applied to text that
             appears within action menu items.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionMenuTextColor com.example.demo:actionMenuTextColor}</code></td><td> Color for text that appears within action menu items.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeBackground com.example.demo:actionModeBackground}</code></td><td> Background drawable to use for action mode UI </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeCloseButtonStyle com.example.demo:actionModeCloseButtonStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeCloseDrawable com.example.demo:actionModeCloseDrawable}</code></td><td> Drawable to use for the close action mode button </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeCopyDrawable com.example.demo:actionModeCopyDrawable}</code></td><td> Drawable to use for the Copy action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeCutDrawable com.example.demo:actionModeCutDrawable}</code></td><td> Drawable to use for the Cut action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeFindDrawable com.example.demo:actionModeFindDrawable}</code></td><td> Drawable to use for the Find action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModePasteDrawable com.example.demo:actionModePasteDrawable}</code></td><td> Drawable to use for the Paste action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModePopupWindowStyle com.example.demo:actionModePopupWindowStyle}</code></td><td> PopupWindow style to use for action modes when showing as a window overlay.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeSelectAllDrawable com.example.demo:actionModeSelectAllDrawable}</code></td><td> Drawable to use for the Select all action button in Contextual Action Bar </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeShareDrawable com.example.demo:actionModeShareDrawable}</code></td><td> Drawable to use for the Share action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeSplitBackground com.example.demo:actionModeSplitBackground}</code></td><td> Background drawable to use for action mode UI in the lower split bar </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeStyle com.example.demo:actionModeStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionModeWebSearchDrawable com.example.demo:actionModeWebSearchDrawable}</code></td><td> Drawable to use for the Web Search action button in WebView selection action modes </td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionOverflowButtonStyle com.example.demo:actionOverflowButtonStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_actionOverflowMenuStyle com.example.demo:actionOverflowMenuStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_activityChooserViewStyle com.example.demo:activityChooserViewStyle}</code></td><td> Default ActivityChooserView style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_alertDialogButtonGroupStyle com.example.demo:alertDialogButtonGroupStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_alertDialogCenterButtons com.example.demo:alertDialogCenterButtons}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_alertDialogStyle com.example.demo:alertDialogStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_alertDialogTheme com.example.demo:alertDialogTheme}</code></td><td> Theme to use for alert dialogs spawned from this theme.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_android_windowIsFloating android:windowIsFloating}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_autoCompleteTextViewStyle com.example.demo:autoCompleteTextViewStyle}</code></td><td> Default AutoCompleteTextView style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_borderlessButtonStyle com.example.demo:borderlessButtonStyle}</code></td><td> Style for buttons without an explicit border, often used in groups.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_buttonBarButtonStyle com.example.demo:buttonBarButtonStyle}</code></td><td> Style for buttons within button bars </td></tr>
           <tr><td><code>{@link #AppCompatTheme_buttonBarNegativeButtonStyle com.example.demo:buttonBarNegativeButtonStyle}</code></td><td> Style for the "negative" buttons within button bars </td></tr>
           <tr><td><code>{@link #AppCompatTheme_buttonBarNeutralButtonStyle com.example.demo:buttonBarNeutralButtonStyle}</code></td><td> Style for the "neutral" buttons within button bars </td></tr>
           <tr><td><code>{@link #AppCompatTheme_buttonBarPositiveButtonStyle com.example.demo:buttonBarPositiveButtonStyle}</code></td><td> Style for the "positive" buttons within button bars </td></tr>
           <tr><td><code>{@link #AppCompatTheme_buttonBarStyle com.example.demo:buttonBarStyle}</code></td><td> Style for button bars </td></tr>
           <tr><td><code>{@link #AppCompatTheme_buttonStyle com.example.demo:buttonStyle}</code></td><td> Normal Button style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_buttonStyleSmall com.example.demo:buttonStyleSmall}</code></td><td> Small Button style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_checkboxStyle com.example.demo:checkboxStyle}</code></td><td> Default Checkbox style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_checkedTextViewStyle com.example.demo:checkedTextViewStyle}</code></td><td> Default CheckedTextView style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_colorAccent com.example.demo:colorAccent}</code></td><td> Bright complement to the primary branding color.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_colorButtonNormal com.example.demo:colorButtonNormal}</code></td><td> The color applied to framework buttons in their normal state.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_colorControlActivated com.example.demo:colorControlActivated}</code></td><td> The color applied to framework controls in their activated (ex.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_colorControlHighlight com.example.demo:colorControlHighlight}</code></td><td> The color applied to framework control highlights (ex.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_colorControlNormal com.example.demo:colorControlNormal}</code></td><td> The color applied to framework controls in their normal state.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_colorPrimary com.example.demo:colorPrimary}</code></td><td> The primary branding color for the app.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_colorPrimaryDark com.example.demo:colorPrimaryDark}</code></td><td> Dark variant of the primary branding color.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_colorSwitchThumbNormal com.example.demo:colorSwitchThumbNormal}</code></td><td> The color applied to framework switch thumbs in their normal state.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_controlBackground com.example.demo:controlBackground}</code></td><td> The background used by framework controls.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_dialogPreferredPadding com.example.demo:dialogPreferredPadding}</code></td><td> Preferred padding for dialog content.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_dialogTheme com.example.demo:dialogTheme}</code></td><td> Theme to use for dialogs spawned from this theme.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_dividerHorizontal com.example.demo:dividerHorizontal}</code></td><td> A drawable that may be used as a horizontal divider between visual elements.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_dividerVertical com.example.demo:dividerVertical}</code></td><td> A drawable that may be used as a vertical divider between visual elements.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_dropDownListViewStyle com.example.demo:dropDownListViewStyle}</code></td><td> ListPopupWindow compatibility </td></tr>
           <tr><td><code>{@link #AppCompatTheme_dropdownListPreferredItemHeight com.example.demo:dropdownListPreferredItemHeight}</code></td><td> The preferred item height for dropdown lists.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_editTextBackground com.example.demo:editTextBackground}</code></td><td> EditText background drawable.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_editTextColor com.example.demo:editTextColor}</code></td><td> EditText text foreground color.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_editTextStyle com.example.demo:editTextStyle}</code></td><td> Default EditText style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_homeAsUpIndicator com.example.demo:homeAsUpIndicator}</code></td><td> Specifies a drawable to use for the 'home as up' indicator.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_imageButtonStyle com.example.demo:imageButtonStyle}</code></td><td> ImageButton background drawable.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_listChoiceBackgroundIndicator com.example.demo:listChoiceBackgroundIndicator}</code></td><td> Drawable used as a background for selected list items.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_listDividerAlertDialog com.example.demo:listDividerAlertDialog}</code></td><td> The list divider used in alert dialogs.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_listPopupWindowStyle com.example.demo:listPopupWindowStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeight com.example.demo:listPreferredItemHeight}</code></td><td> The preferred list item height.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightLarge com.example.demo:listPreferredItemHeightLarge}</code></td><td> A larger, more robust list item height.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_listPreferredItemHeightSmall com.example.demo:listPreferredItemHeightSmall}</code></td><td> A smaller, sleeker list item height.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingLeft com.example.demo:listPreferredItemPaddingLeft}</code></td><td> The preferred padding along the left edge of list items.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_listPreferredItemPaddingRight com.example.demo:listPreferredItemPaddingRight}</code></td><td> The preferred padding along the right edge of list items.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_panelBackground com.example.demo:panelBackground}</code></td><td> The background of a panel when it is inset from the left and right edges of the screen.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_panelMenuListTheme com.example.demo:panelMenuListTheme}</code></td><td> Default Panel Menu style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_panelMenuListWidth com.example.demo:panelMenuListWidth}</code></td><td> Default Panel Menu width.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_popupMenuStyle com.example.demo:popupMenuStyle}</code></td><td> Default PopupMenu style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_popupWindowStyle com.example.demo:popupWindowStyle}</code></td><td> Default PopupWindow style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_radioButtonStyle com.example.demo:radioButtonStyle}</code></td><td> Default RadioButton style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_ratingBarStyle com.example.demo:ratingBarStyle}</code></td><td> Default RatingBar style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_ratingBarStyleIndicator com.example.demo:ratingBarStyleIndicator}</code></td><td> Indicator RatingBar style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_ratingBarStyleSmall com.example.demo:ratingBarStyleSmall}</code></td><td> Small indicator RatingBar style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_searchViewStyle com.example.demo:searchViewStyle}</code></td><td> Style for the search query widget.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_seekBarStyle com.example.demo:seekBarStyle}</code></td><td> Default SeekBar style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_selectableItemBackground com.example.demo:selectableItemBackground}</code></td><td> A style that may be applied to buttons or other selectable items
             that should react to pressed and focus states, but that do not
             have a clear visual border along the edges.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_selectableItemBackgroundBorderless com.example.demo:selectableItemBackgroundBorderless}</code></td><td> Background drawable for borderless standalone items that need focus/pressed states.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_spinnerDropDownItemStyle com.example.demo:spinnerDropDownItemStyle}</code></td><td> Default Spinner style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_spinnerStyle com.example.demo:spinnerStyle}</code></td><td> Default Spinner style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_switchStyle com.example.demo:switchStyle}</code></td><td> Default style for the Switch widget.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_textAppearanceLargePopupMenu com.example.demo:textAppearanceLargePopupMenu}</code></td><td> Text color, typeface, size, and style for the text inside of a popup menu.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_textAppearanceListItem com.example.demo:textAppearanceListItem}</code></td><td> The preferred TextAppearance for the primary text of list items.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_textAppearanceListItemSmall com.example.demo:textAppearanceListItemSmall}</code></td><td> The preferred TextAppearance for the primary text of small list items.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultSubtitle com.example.demo:textAppearanceSearchResultSubtitle}</code></td><td> Text color, typeface, size, and style for system search result subtitle.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_textAppearanceSearchResultTitle com.example.demo:textAppearanceSearchResultTitle}</code></td><td> Text color, typeface, size, and style for system search result title.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_textAppearanceSmallPopupMenu com.example.demo:textAppearanceSmallPopupMenu}</code></td><td> Text color, typeface, size, and style for small text inside of a popup menu.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_textColorAlertDialogListItem com.example.demo:textColorAlertDialogListItem}</code></td><td> Color of list item text in alert dialogs.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_textColorSearchUrl com.example.demo:textColorSearchUrl}</code></td><td> Text color for urls in search suggestions, used by things like global search </td></tr>
           <tr><td><code>{@link #AppCompatTheme_toolbarNavigationButtonStyle com.example.demo:toolbarNavigationButtonStyle}</code></td><td> Default Toolar NavigationButtonStyle </td></tr>
           <tr><td><code>{@link #AppCompatTheme_toolbarStyle com.example.demo:toolbarStyle}</code></td><td> Default Toolbar style.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowActionBar com.example.demo:windowActionBar}</code></td><td> Flag indicating whether this window should have an Action Bar
             in place of the usual title bar.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowActionBarOverlay com.example.demo:windowActionBarOverlay}</code></td><td> Flag indicating whether this window's Action Bar should overlay
             application content.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowActionModeOverlay com.example.demo:windowActionModeOverlay}</code></td><td> Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar).</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMajor com.example.demo:windowFixedHeightMajor}</code></td><td> A fixed height for the window along the major axis of the screen,
             that is, when in portrait.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowFixedHeightMinor com.example.demo:windowFixedHeightMinor}</code></td><td> A fixed height for the window along the minor axis of the screen,
             that is, when in landscape.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMajor com.example.demo:windowFixedWidthMajor}</code></td><td> A fixed width for the window along the major axis of the screen,
             that is, when in landscape.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowFixedWidthMinor com.example.demo:windowFixedWidthMinor}</code></td><td> A fixed width for the window along the minor axis of the screen,
             that is, when in portrait.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowMinWidthMajor com.example.demo:windowMinWidthMajor}</code></td><td> The minimum width the window is allowed to be, along the major
             axis of the screen.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowMinWidthMinor com.example.demo:windowMinWidthMinor}</code></td><td> The minimum width the window is allowed to be, along the minor
             axis of the screen.</td></tr>
           <tr><td><code>{@link #AppCompatTheme_windowNoTitle com.example.demo:windowNoTitle}</code></td><td> Flag indicating whether there should be no title on this window.</td></tr>
           </table>
           @see #AppCompatTheme_actionBarDivider
           @see #AppCompatTheme_actionBarItemBackground
           @see #AppCompatTheme_actionBarPopupTheme
           @see #AppCompatTheme_actionBarSize
           @see #AppCompatTheme_actionBarSplitStyle
           @see #AppCompatTheme_actionBarStyle
           @see #AppCompatTheme_actionBarTabBarStyle
           @see #AppCompatTheme_actionBarTabStyle
           @see #AppCompatTheme_actionBarTabTextStyle
           @see #AppCompatTheme_actionBarTheme
           @see #AppCompatTheme_actionBarWidgetTheme
           @see #AppCompatTheme_actionButtonStyle
           @see #AppCompatTheme_actionDropDownStyle
           @see #AppCompatTheme_actionMenuTextAppearance
           @see #AppCompatTheme_actionMenuTextColor
           @see #AppCompatTheme_actionModeBackground
           @see #AppCompatTheme_actionModeCloseButtonStyle
           @see #AppCompatTheme_actionModeCloseDrawable
           @see #AppCompatTheme_actionModeCopyDrawable
           @see #AppCompatTheme_actionModeCutDrawable
           @see #AppCompatTheme_actionModeFindDrawable
           @see #AppCompatTheme_actionModePasteDrawable
           @see #AppCompatTheme_actionModePopupWindowStyle
           @see #AppCompatTheme_actionModeSelectAllDrawable
           @see #AppCompatTheme_actionModeShareDrawable
           @see #AppCompatTheme_actionModeSplitBackground
           @see #AppCompatTheme_actionModeStyle
           @see #AppCompatTheme_actionModeWebSearchDrawable
           @see #AppCompatTheme_actionOverflowButtonStyle
           @see #AppCompatTheme_actionOverflowMenuStyle
           @see #AppCompatTheme_activityChooserViewStyle
           @see #AppCompatTheme_alertDialogButtonGroupStyle
           @see #AppCompatTheme_alertDialogCenterButtons
           @see #AppCompatTheme_alertDialogStyle
           @see #AppCompatTheme_alertDialogTheme
           @see #AppCompatTheme_android_windowAnimationStyle
           @see #AppCompatTheme_android_windowIsFloating
           @see #AppCompatTheme_autoCompleteTextViewStyle
           @see #AppCompatTheme_borderlessButtonStyle
           @see #AppCompatTheme_buttonBarButtonStyle
           @see #AppCompatTheme_buttonBarNegativeButtonStyle
           @see #AppCompatTheme_buttonBarNeutralButtonStyle
           @see #AppCompatTheme_buttonBarPositiveButtonStyle
           @see #AppCompatTheme_buttonBarStyle
           @see #AppCompatTheme_buttonStyle
           @see #AppCompatTheme_buttonStyleSmall
           @see #AppCompatTheme_checkboxStyle
           @see #AppCompatTheme_checkedTextViewStyle
           @see #AppCompatTheme_colorAccent
           @see #AppCompatTheme_colorButtonNormal
           @see #AppCompatTheme_colorControlActivated
           @see #AppCompatTheme_colorControlHighlight
           @see #AppCompatTheme_colorControlNormal
           @see #AppCompatTheme_colorPrimary
           @see #AppCompatTheme_colorPrimaryDark
           @see #AppCompatTheme_colorSwitchThumbNormal
           @see #AppCompatTheme_controlBackground
           @see #AppCompatTheme_dialogPreferredPadding
           @see #AppCompatTheme_dialogTheme
           @see #AppCompatTheme_dividerHorizontal
           @see #AppCompatTheme_dividerVertical
           @see #AppCompatTheme_dropDownListViewStyle
           @see #AppCompatTheme_dropdownListPreferredItemHeight
           @see #AppCompatTheme_editTextBackground
           @see #AppCompatTheme_editTextColor
           @see #AppCompatTheme_editTextStyle
           @see #AppCompatTheme_homeAsUpIndicator
           @see #AppCompatTheme_imageButtonStyle
           @see #AppCompatTheme_listChoiceBackgroundIndicator
           @see #AppCompatTheme_listDividerAlertDialog
           @see #AppCompatTheme_listPopupWindowStyle
           @see #AppCompatTheme_listPreferredItemHeight
           @see #AppCompatTheme_listPreferredItemHeightLarge
           @see #AppCompatTheme_listPreferredItemHeightSmall
           @see #AppCompatTheme_listPreferredItemPaddingLeft
           @see #AppCompatTheme_listPreferredItemPaddingRight
           @see #AppCompatTheme_panelBackground
           @see #AppCompatTheme_panelMenuListTheme
           @see #AppCompatTheme_panelMenuListWidth
           @see #AppCompatTheme_popupMenuStyle
           @see #AppCompatTheme_popupWindowStyle
           @see #AppCompatTheme_radioButtonStyle
           @see #AppCompatTheme_ratingBarStyle
           @see #AppCompatTheme_ratingBarStyleIndicator
           @see #AppCompatTheme_ratingBarStyleSmall
           @see #AppCompatTheme_searchViewStyle
           @see #AppCompatTheme_seekBarStyle
           @see #AppCompatTheme_selectableItemBackground
           @see #AppCompatTheme_selectableItemBackgroundBorderless
           @see #AppCompatTheme_spinnerDropDownItemStyle
           @see #AppCompatTheme_spinnerStyle
           @see #AppCompatTheme_switchStyle
           @see #AppCompatTheme_textAppearanceLargePopupMenu
           @see #AppCompatTheme_textAppearanceListItem
           @see #AppCompatTheme_textAppearanceListItemSmall
           @see #AppCompatTheme_textAppearanceSearchResultSubtitle
           @see #AppCompatTheme_textAppearanceSearchResultTitle
           @see #AppCompatTheme_textAppearanceSmallPopupMenu
           @see #AppCompatTheme_textColorAlertDialogListItem
           @see #AppCompatTheme_textColorSearchUrl
           @see #AppCompatTheme_toolbarNavigationButtonStyle
           @see #AppCompatTheme_toolbarStyle
           @see #AppCompatTheme_windowActionBar
           @see #AppCompatTheme_windowActionBarOverlay
           @see #AppCompatTheme_windowActionModeOverlay
           @see #AppCompatTheme_windowFixedHeightMajor
           @see #AppCompatTheme_windowFixedHeightMinor
           @see #AppCompatTheme_windowFixedWidthMajor
           @see #AppCompatTheme_windowFixedWidthMinor
           @see #AppCompatTheme_windowMinWidthMajor
           @see #AppCompatTheme_windowMinWidthMinor
           @see #AppCompatTheme_windowNoTitle
         */
        public static final int[] AppCompatTheme = {
            0x01010057, 0x010100ae, 0x7f010003, 0x7f010004,
            0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008,
            0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c,
            0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010,
            0x7f010011, 0x7f010012, 0x7f010013, 0x7f010014,
            0x7f010015, 0x7f010016, 0x7f010017, 0x7f010018,
            0x7f010019, 0x7f01001a, 0x7f01001b, 0x7f01001c,
            0x7f01001d, 0x7f01001e, 0x7f01001f, 0x7f010020,
            0x7f010021, 0x7f010022, 0x7f010023, 0x7f010024,
            0x7f010025, 0x7f010026, 0x7f010027, 0x7f010028,
            0x7f010029, 0x7f01002a, 0x7f01002b, 0x7f01002c,
            0x7f01002d, 0x7f01002e, 0x7f01002f, 0x7f010030,
            0x7f010031, 0x7f010032, 0x7f010033, 0x7f010034,
            0x7f010035, 0x7f010036, 0x7f010037, 0x7f010038,
            0x7f010039, 0x7f01003a, 0x7f01003b, 0x7f01003c,
            0x7f01003d, 0x7f01003e, 0x7f01003f, 0x7f010040,
            0x7f010041, 0x7f010042, 0x7f010043, 0x7f010044,
            0x7f010045, 0x7f010046, 0x7f010047, 0x7f010048,
            0x7f010049, 0x7f01004a, 0x7f01004b, 0x7f01004c,
            0x7f01004d, 0x7f01004e, 0x7f01004f, 0x7f010050,
            0x7f010051, 0x7f010052, 0x7f010053, 0x7f010054,
            0x7f010055, 0x7f010056, 0x7f010057, 0x7f010058,
            0x7f010059, 0x7f01005a, 0x7f01005b, 0x7f01005c,
            0x7f01005d, 0x7f01005e, 0x7f01005f, 0x7f010060,
            0x7f010061, 0x7f010062, 0x7f010063, 0x7f010064,
            0x7f010065, 0x7f010066, 0x7f010067, 0x7f010068,
            0x7f010069, 0x7f01006a, 0x7f01006b, 0x7f01006c,
            0x7f01006d, 0x7f01006e, 0x7f01006f, 0x7f010070
        };
        /**
          <p>
          @attr description
           Custom divider drawable to use for elements in the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarDivider
        */
        public static final int AppCompatTheme_actionBarDivider = 23;
        /**
          <p>
          @attr description
           Custom item state list drawable background for action bar items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarItemBackground
        */
        public static final int AppCompatTheme_actionBarItemBackground = 24;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate popups
             shown by widgets in the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarPopupTheme
        */
        public static final int AppCompatTheme_actionBarPopupTheme = 17;
        /**
          <p>
          @attr description
           Size of the Action Bar, including the contextual
             bar used to present Action Modes. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>wrap_content</code></td><td>0</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarSize
        */
        public static final int AppCompatTheme_actionBarSize = 22;
        /**
          <p>
          @attr description
           Reference to a style for the split Action Bar. This style
             controls the split component that holds the menu/action
             buttons. actionBarStyle is still used for the primary
             bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarSplitStyle
        */
        public static final int AppCompatTheme_actionBarSplitStyle = 19;
        /**
          <p>
          @attr description
           Reference to a style for the Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarStyle
        */
        public static final int AppCompatTheme_actionBarStyle = 18;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#actionBarTabBarStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:actionBarTabBarStyle
        */
        public static final int AppCompatTheme_actionBarTabBarStyle = 13;
        /**
          <p>
          @attr description
           Default style for tabs within an action bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarTabStyle
        */
        public static final int AppCompatTheme_actionBarTabStyle = 12;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#actionBarTabTextStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:actionBarTabTextStyle
        */
        public static final int AppCompatTheme_actionBarTabTextStyle = 14;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate the
             action bar. This will be inherited by any widget inflated
             into the action bar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarTheme
        */
        public static final int AppCompatTheme_actionBarTheme = 20;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate widgets
             and layouts destined for the action bar. Most of the time
             this will be a reference to the current theme, but when
             the action bar has a significantly different contrast
             profile than the rest of the activity the difference
             can become important. If this is set to @null the current
             theme will be used.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionBarWidgetTheme
        */
        public static final int AppCompatTheme_actionBarWidgetTheme = 21;
        /**
          <p>
          @attr description
           Default action button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionButtonStyle
        */
        public static final int AppCompatTheme_actionButtonStyle = 49;
        /**
          <p>
          @attr description
           Default ActionBar dropdown style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionDropDownStyle
        */
        public static final int AppCompatTheme_actionDropDownStyle = 45;
        /**
          <p>
          @attr description
           TextAppearance style that will be applied to text that
             appears within action menu items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionMenuTextAppearance
        */
        public static final int AppCompatTheme_actionMenuTextAppearance = 25;
        /**
          <p>
          @attr description
           Color for text that appears within action menu items. 
 Color for text that appears within action menu items. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionMenuTextColor
        */
        public static final int AppCompatTheme_actionMenuTextColor = 26;
        /**
          <p>
          @attr description
           Background drawable to use for action mode UI 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeBackground
        */
        public static final int AppCompatTheme_actionModeBackground = 29;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#actionModeCloseButtonStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:actionModeCloseButtonStyle
        */
        public static final int AppCompatTheme_actionModeCloseButtonStyle = 28;
        /**
          <p>
          @attr description
           Drawable to use for the close action mode button 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeCloseDrawable
        */
        public static final int AppCompatTheme_actionModeCloseDrawable = 31;
        /**
          <p>
          @attr description
           Drawable to use for the Copy action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeCopyDrawable
        */
        public static final int AppCompatTheme_actionModeCopyDrawable = 33;
        /**
          <p>
          @attr description
           Drawable to use for the Cut action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeCutDrawable
        */
        public static final int AppCompatTheme_actionModeCutDrawable = 32;
        /**
          <p>
          @attr description
           Drawable to use for the Find action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeFindDrawable
        */
        public static final int AppCompatTheme_actionModeFindDrawable = 37;
        /**
          <p>
          @attr description
           Drawable to use for the Paste action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModePasteDrawable
        */
        public static final int AppCompatTheme_actionModePasteDrawable = 34;
        /**
          <p>
          @attr description
           PopupWindow style to use for action modes when showing as a window overlay. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModePopupWindowStyle
        */
        public static final int AppCompatTheme_actionModePopupWindowStyle = 39;
        /**
          <p>
          @attr description
           Drawable to use for the Select all action button in Contextual Action Bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeSelectAllDrawable
        */
        public static final int AppCompatTheme_actionModeSelectAllDrawable = 35;
        /**
          <p>
          @attr description
           Drawable to use for the Share action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeShareDrawable
        */
        public static final int AppCompatTheme_actionModeShareDrawable = 36;
        /**
          <p>
          @attr description
           Background drawable to use for action mode UI in the lower split bar 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeSplitBackground
        */
        public static final int AppCompatTheme_actionModeSplitBackground = 30;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#actionModeStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:actionModeStyle
        */
        public static final int AppCompatTheme_actionModeStyle = 27;
        /**
          <p>
          @attr description
           Drawable to use for the Web Search action button in WebView selection action modes 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionModeWebSearchDrawable
        */
        public static final int AppCompatTheme_actionModeWebSearchDrawable = 38;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#actionOverflowButtonStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:actionOverflowButtonStyle
        */
        public static final int AppCompatTheme_actionOverflowButtonStyle = 15;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#actionOverflowMenuStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:actionOverflowMenuStyle
        */
        public static final int AppCompatTheme_actionOverflowMenuStyle = 16;
        /**
          <p>
          @attr description
           Default ActivityChooserView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:activityChooserViewStyle
        */
        public static final int AppCompatTheme_activityChooserViewStyle = 57;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#alertDialogButtonGroupStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:alertDialogButtonGroupStyle
        */
        public static final int AppCompatTheme_alertDialogButtonGroupStyle = 92;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#alertDialogCenterButtons}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:alertDialogCenterButtons
        */
        public static final int AppCompatTheme_alertDialogCenterButtons = 93;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#alertDialogStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:alertDialogStyle
        */
        public static final int AppCompatTheme_alertDialogStyle = 91;
        /**
          <p>
          @attr description
           Theme to use for alert dialogs spawned from this theme. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:alertDialogTheme
        */
        public static final int AppCompatTheme_alertDialogTheme = 94;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#windowAnimationStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.
          @attr name android:windowAnimationStyle
        */
        public static final int AppCompatTheme_android_windowAnimationStyle = 1;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#windowIsFloating}
          attribute's value can be found in the {@link #AppCompatTheme} array.
          @attr name android:windowIsFloating
        */
        public static final int AppCompatTheme_android_windowIsFloating = 0;
        /**
          <p>
          @attr description
           Default AutoCompleteTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:autoCompleteTextViewStyle
        */
        public static final int AppCompatTheme_autoCompleteTextViewStyle = 99;
        /**
          <p>
          @attr description
           Style for buttons without an explicit border, often used in groups. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:borderlessButtonStyle
        */
        public static final int AppCompatTheme_borderlessButtonStyle = 54;
        /**
          <p>
          @attr description
           Style for buttons within button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:buttonBarButtonStyle
        */
        public static final int AppCompatTheme_buttonBarButtonStyle = 51;
        /**
          <p>
          @attr description
           Style for the "negative" buttons within button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:buttonBarNegativeButtonStyle
        */
        public static final int AppCompatTheme_buttonBarNegativeButtonStyle = 97;
        /**
          <p>
          @attr description
           Style for the "neutral" buttons within button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:buttonBarNeutralButtonStyle
        */
        public static final int AppCompatTheme_buttonBarNeutralButtonStyle = 98;
        /**
          <p>
          @attr description
           Style for the "positive" buttons within button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:buttonBarPositiveButtonStyle
        */
        public static final int AppCompatTheme_buttonBarPositiveButtonStyle = 96;
        /**
          <p>
          @attr description
           Style for button bars 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:buttonBarStyle
        */
        public static final int AppCompatTheme_buttonBarStyle = 50;
        /**
          <p>
          @attr description
           Normal Button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:buttonStyle
        */
        public static final int AppCompatTheme_buttonStyle = 100;
        /**
          <p>
          @attr description
           Small Button style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:buttonStyleSmall
        */
        public static final int AppCompatTheme_buttonStyleSmall = 101;
        /**
          <p>
          @attr description
           Default Checkbox style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:checkboxStyle
        */
        public static final int AppCompatTheme_checkboxStyle = 102;
        /**
          <p>
          @attr description
           Default CheckedTextView style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:checkedTextViewStyle
        */
        public static final int AppCompatTheme_checkedTextViewStyle = 103;
        /**
          <p>
          @attr description
           Bright complement to the primary branding color. By default, this is the color applied
             to framework controls (via colorControlActivated). 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:colorAccent
        */
        public static final int AppCompatTheme_colorAccent = 84;
        /**
          <p>
          @attr description
           The color applied to framework buttons in their normal state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:colorButtonNormal
        */
        public static final int AppCompatTheme_colorButtonNormal = 88;
        /**
          <p>
          @attr description
           The color applied to framework controls in their activated (ex. checked) state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:colorControlActivated
        */
        public static final int AppCompatTheme_colorControlActivated = 86;
        /**
          <p>
          @attr description
           The color applied to framework control highlights (ex. ripples, list selectors). 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:colorControlHighlight
        */
        public static final int AppCompatTheme_colorControlHighlight = 87;
        /**
          <p>
          @attr description
           The color applied to framework controls in their normal state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:colorControlNormal
        */
        public static final int AppCompatTheme_colorControlNormal = 85;
        /**
          <p>
          @attr description
           The primary branding color for the app. By default, this is the color applied to the
             action bar background. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:colorPrimary
        */
        public static final int AppCompatTheme_colorPrimary = 82;
        /**
          <p>
          @attr description
           Dark variant of the primary branding color. By default, this is the color applied to
             the status bar (via statusBarColor) and navigation bar (via navigationBarColor). 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:colorPrimaryDark
        */
        public static final int AppCompatTheme_colorPrimaryDark = 83;
        /**
          <p>
          @attr description
           The color applied to framework switch thumbs in their normal state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:colorSwitchThumbNormal
        */
        public static final int AppCompatTheme_colorSwitchThumbNormal = 89;
        /**
          <p>
          @attr description
           The background used by framework controls. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:controlBackground
        */
        public static final int AppCompatTheme_controlBackground = 90;
        /**
          <p>
          @attr description
           Preferred padding for dialog content. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:dialogPreferredPadding
        */
        public static final int AppCompatTheme_dialogPreferredPadding = 43;
        /**
          <p>
          @attr description
           Theme to use for dialogs spawned from this theme. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:dialogTheme
        */
        public static final int AppCompatTheme_dialogTheme = 42;
        /**
          <p>
          @attr description
           A drawable that may be used as a horizontal divider between visual elements. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:dividerHorizontal
        */
        public static final int AppCompatTheme_dividerHorizontal = 56;
        /**
          <p>
          @attr description
           A drawable that may be used as a vertical divider between visual elements. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:dividerVertical
        */
        public static final int AppCompatTheme_dividerVertical = 55;
        /**
          <p>
          @attr description
           ListPopupWindow compatibility 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:dropDownListViewStyle
        */
        public static final int AppCompatTheme_dropDownListViewStyle = 74;
        /**
          <p>
          @attr description
           The preferred item height for dropdown lists. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:dropdownListPreferredItemHeight
        */
        public static final int AppCompatTheme_dropdownListPreferredItemHeight = 46;
        /**
          <p>
          @attr description
           EditText background drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:editTextBackground
        */
        public static final int AppCompatTheme_editTextBackground = 63;
        /**
          <p>
          @attr description
           EditText text foreground color. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:editTextColor
        */
        public static final int AppCompatTheme_editTextColor = 62;
        /**
          <p>
          @attr description
           Default EditText style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:editTextStyle
        */
        public static final int AppCompatTheme_editTextStyle = 104;
        /**
          <p>
          @attr description
           Specifies a drawable to use for the 'home as up' indicator. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:homeAsUpIndicator
        */
        public static final int AppCompatTheme_homeAsUpIndicator = 48;
        /**
          <p>
          @attr description
           ImageButton background drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:imageButtonStyle
        */
        public static final int AppCompatTheme_imageButtonStyle = 64;
        /**
          <p>
          @attr description
           Drawable used as a background for selected list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:listChoiceBackgroundIndicator
        */
        public static final int AppCompatTheme_listChoiceBackgroundIndicator = 81;
        /**
          <p>
          @attr description
           The list divider used in alert dialogs. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:listDividerAlertDialog
        */
        public static final int AppCompatTheme_listDividerAlertDialog = 44;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#listPopupWindowStyle}
          attribute's value can be found in the {@link #AppCompatTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:listPopupWindowStyle
        */
        public static final int AppCompatTheme_listPopupWindowStyle = 75;
        /**
          <p>
          @attr description
           The preferred list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:listPreferredItemHeight
        */
        public static final int AppCompatTheme_listPreferredItemHeight = 69;
        /**
          <p>
          @attr description
           A larger, more robust list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:listPreferredItemHeightLarge
        */
        public static final int AppCompatTheme_listPreferredItemHeightLarge = 71;
        /**
          <p>
          @attr description
           A smaller, sleeker list item height. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:listPreferredItemHeightSmall
        */
        public static final int AppCompatTheme_listPreferredItemHeightSmall = 70;
        /**
          <p>
          @attr description
           The preferred padding along the left edge of list items. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:listPreferredItemPaddingLeft
        */
        public static final int AppCompatTheme_listPreferredItemPaddingLeft = 72;
        /**
          <p>
          @attr description
           The preferred padding along the right edge of list items. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:listPreferredItemPaddingRight
        */
        public static final int AppCompatTheme_listPreferredItemPaddingRight = 73;
        /**
          <p>
          @attr description
           The background of a panel when it is inset from the left and right edges of the screen. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:panelBackground
        */
        public static final int AppCompatTheme_panelBackground = 78;
        /**
          <p>
          @attr description
           Default Panel Menu style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:panelMenuListTheme
        */
        public static final int AppCompatTheme_panelMenuListTheme = 80;
        /**
          <p>
          @attr description
           Default Panel Menu width. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:panelMenuListWidth
        */
        public static final int AppCompatTheme_panelMenuListWidth = 79;
        /**
          <p>
          @attr description
           Default PopupMenu style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:popupMenuStyle
        */
        public static final int AppCompatTheme_popupMenuStyle = 60;
        /**
          <p>
          @attr description
           Default PopupWindow style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:popupWindowStyle
        */
        public static final int AppCompatTheme_popupWindowStyle = 61;
        /**
          <p>
          @attr description
           Default RadioButton style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:radioButtonStyle
        */
        public static final int AppCompatTheme_radioButtonStyle = 105;
        /**
          <p>
          @attr description
           Default RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:ratingBarStyle
        */
        public static final int AppCompatTheme_ratingBarStyle = 106;
        /**
          <p>
          @attr description
           Indicator RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:ratingBarStyleIndicator
        */
        public static final int AppCompatTheme_ratingBarStyleIndicator = 107;
        /**
          <p>
          @attr description
           Small indicator RatingBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:ratingBarStyleSmall
        */
        public static final int AppCompatTheme_ratingBarStyleSmall = 108;
        /**
          <p>
          @attr description
           Style for the search query widget. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:searchViewStyle
        */
        public static final int AppCompatTheme_searchViewStyle = 68;
        /**
          <p>
          @attr description
           Default SeekBar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:seekBarStyle
        */
        public static final int AppCompatTheme_seekBarStyle = 109;
        /**
          <p>
          @attr description
           A style that may be applied to buttons or other selectable items
             that should react to pressed and focus states, but that do not
             have a clear visual border along the edges. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:selectableItemBackground
        */
        public static final int AppCompatTheme_selectableItemBackground = 52;
        /**
          <p>
          @attr description
           Background drawable for borderless standalone items that need focus/pressed states. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:selectableItemBackgroundBorderless
        */
        public static final int AppCompatTheme_selectableItemBackgroundBorderless = 53;
        /**
          <p>
          @attr description
           Default Spinner style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:spinnerDropDownItemStyle
        */
        public static final int AppCompatTheme_spinnerDropDownItemStyle = 47;
        /**
          <p>
          @attr description
           Default Spinner style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:spinnerStyle
        */
        public static final int AppCompatTheme_spinnerStyle = 110;
        /**
          <p>
          @attr description
           Default style for the Switch widget. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:switchStyle
        */
        public static final int AppCompatTheme_switchStyle = 111;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for the text inside of a popup menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textAppearanceLargePopupMenu
        */
        public static final int AppCompatTheme_textAppearanceLargePopupMenu = 40;
        /**
          <p>
          @attr description
           The preferred TextAppearance for the primary text of list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textAppearanceListItem
        */
        public static final int AppCompatTheme_textAppearanceListItem = 76;
        /**
          <p>
          @attr description
           The preferred TextAppearance for the primary text of small list items. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textAppearanceListItemSmall
        */
        public static final int AppCompatTheme_textAppearanceListItemSmall = 77;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for system search result subtitle. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textAppearanceSearchResultSubtitle
        */
        public static final int AppCompatTheme_textAppearanceSearchResultSubtitle = 66;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for system search result title. Defaults to primary inverse text color. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textAppearanceSearchResultTitle
        */
        public static final int AppCompatTheme_textAppearanceSearchResultTitle = 65;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style for small text inside of a popup menu. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textAppearanceSmallPopupMenu
        */
        public static final int AppCompatTheme_textAppearanceSmallPopupMenu = 41;
        /**
          <p>
          @attr description
           Color of list item text in alert dialogs. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textColorAlertDialogListItem
        */
        public static final int AppCompatTheme_textColorAlertDialogListItem = 95;
        /**
          <p>
          @attr description
           Text color for urls in search suggestions, used by things like global search 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textColorSearchUrl
        */
        public static final int AppCompatTheme_textColorSearchUrl = 67;
        /**
          <p>
          @attr description
           Default Toolar NavigationButtonStyle 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:toolbarNavigationButtonStyle
        */
        public static final int AppCompatTheme_toolbarNavigationButtonStyle = 59;
        /**
          <p>
          @attr description
           Default Toolbar style. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:toolbarStyle
        */
        public static final int AppCompatTheme_toolbarStyle = 58;
        /**
          <p>
          @attr description
           Flag indicating whether this window should have an Action Bar
             in place of the usual title bar. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowActionBar
        */
        public static final int AppCompatTheme_windowActionBar = 2;
        /**
          <p>
          @attr description
           Flag indicating whether this window's Action Bar should overlay
             application content. Does nothing if the window would not
             have an Action Bar. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowActionBarOverlay
        */
        public static final int AppCompatTheme_windowActionBarOverlay = 4;
        /**
          <p>
          @attr description
           Flag indicating whether action modes should overlay window content
             when there is not reserved space for their UI (such as an Action Bar). 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowActionModeOverlay
        */
        public static final int AppCompatTheme_windowActionModeOverlay = 5;
        /**
          <p>
          @attr description
           A fixed height for the window along the major axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowFixedHeightMajor
        */
        public static final int AppCompatTheme_windowFixedHeightMajor = 9;
        /**
          <p>
          @attr description
           A fixed height for the window along the minor axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowFixedHeightMinor
        */
        public static final int AppCompatTheme_windowFixedHeightMinor = 7;
        /**
          <p>
          @attr description
           A fixed width for the window along the major axis of the screen,
             that is, when in landscape. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowFixedWidthMajor
        */
        public static final int AppCompatTheme_windowFixedWidthMajor = 6;
        /**
          <p>
          @attr description
           A fixed width for the window along the minor axis of the screen,
             that is, when in portrait. Can be either an absolute dimension
             or a fraction of the screen size in that dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowFixedWidthMinor
        */
        public static final int AppCompatTheme_windowFixedWidthMinor = 8;
        /**
          <p>
          @attr description
           The minimum width the window is allowed to be, along the major
             axis of the screen.  That is, when in landscape.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowMinWidthMajor
        */
        public static final int AppCompatTheme_windowMinWidthMajor = 10;
        /**
          <p>
          @attr description
           The minimum width the window is allowed to be, along the minor
             axis of the screen.  That is, when in portrait.  Can be either
             an absolute dimension or a fraction of the screen size in that
             dimension. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowMinWidthMinor
        */
        public static final int AppCompatTheme_windowMinWidthMinor = 11;
        /**
          <p>
          @attr description
           Flag indicating whether there should be no title on this window. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:windowNoTitle
        */
        public static final int AppCompatTheme_windowNoTitle = 3;
        /** Attributes that can be used with a BatteryHistoryChart.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowColor android:shadowColor}</code></td><td> Place a shadow of the specified color behind the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowDx android:shadowDx}</code></td><td> Horizontal offset of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowDy android:shadowDy}</code></td><td> Vertical offset of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowRadius android:shadowRadius}</code></td><td> Radius of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textAppearance android:textAppearance}</code></td><td> Base text color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textColor android:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textSize android:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textStyle android:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_typeface android:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_barPredictionColor com.example.demo:barPredictionColor}</code></td><td> Color of predicted future use part of chart.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_barPrimaryColor com.example.demo:barPrimaryColor}</code></td><td> Primary color of chart.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_chartMinHeight com.example.demo:chartMinHeight}</code></td><td> Minimum height of the chart itself.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_headerAppearance com.example.demo:headerAppearance}</code></td><td> Text color, typeface, size, and style of header.</td></tr>
           </table>
           @see #BatteryHistoryChart_android_shadowColor
           @see #BatteryHistoryChart_android_shadowDx
           @see #BatteryHistoryChart_android_shadowDy
           @see #BatteryHistoryChart_android_shadowRadius
           @see #BatteryHistoryChart_android_textAppearance
           @see #BatteryHistoryChart_android_textColor
           @see #BatteryHistoryChart_android_textSize
           @see #BatteryHistoryChart_android_textStyle
           @see #BatteryHistoryChart_android_typeface
           @see #BatteryHistoryChart_barPredictionColor
           @see #BatteryHistoryChart_barPrimaryColor
           @see #BatteryHistoryChart_chartMinHeight
           @see #BatteryHistoryChart_headerAppearance
         */
        public static final int[] BatteryHistoryChart = {
            0x01010034, 0x01010095, 0x01010096, 0x01010097,
            0x01010098, 0x01010161, 0x01010162, 0x01010163,
            0x01010164, 0x7f0100d3, 0x7f0100d4, 0x7f0100d5,
            0x7f0100d6
        };
        /**
          <p>
          @attr description
           Place a shadow of the specified color behind the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowColor}.
          @attr name android:shadowColor
        */
        public static final int BatteryHistoryChart_android_shadowColor = 5;
        /**
          <p>
          @attr description
           Horizontal offset of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowDx}.
          @attr name android:shadowDx
        */
        public static final int BatteryHistoryChart_android_shadowDx = 6;
        /**
          <p>
          @attr description
           Vertical offset of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowDy}.
          @attr name android:shadowDy
        */
        public static final int BatteryHistoryChart_android_shadowDy = 7;
        /**
          <p>
          @attr description
           Radius of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowRadius}.
          @attr name android:shadowRadius
        */
        public static final int BatteryHistoryChart_android_shadowRadius = 8;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textAppearance}.
          @attr name android:textAppearance
        */
        public static final int BatteryHistoryChart_android_textAppearance = 0;
        /**
          <p>
          @attr description
           Text color. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textColor}.
          @attr name android:textColor
        */
        public static final int BatteryHistoryChart_android_textColor = 4;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textSize}.
          @attr name android:textSize
        */
        public static final int BatteryHistoryChart_android_textSize = 1;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textStyle}.
          @attr name android:textStyle
        */
        public static final int BatteryHistoryChart_android_textStyle = 3;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#typeface}.
          @attr name android:typeface
        */
        public static final int BatteryHistoryChart_android_typeface = 2;
        /**
          <p>
          @attr description
           Color of predicted future use part of chart. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:barPredictionColor
        */
        public static final int BatteryHistoryChart_barPredictionColor = 11;
        /**
          <p>
          @attr description
           Primary color of chart. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:barPrimaryColor
        */
        public static final int BatteryHistoryChart_barPrimaryColor = 10;
        /**
          <p>
          @attr description
           Minimum height of the chart itself. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
          <p>This is a private symbol.
          @attr name com.example.demo:chartMinHeight
        */
        public static final int BatteryHistoryChart_chartMinHeight = 12;
        /**
          <p>
          @attr description
           Text color, typeface, size, and style of header. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:headerAppearance
        */
        public static final int BatteryHistoryChart_headerAppearance = 9;
        /**  @hide 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ButtonBarLayout_allowStacking com.example.demo:allowStacking}</code></td><td> Whether to automatically stack the buttons when there is not
             enough space to lay them out side-by-side.</td></tr>
           </table>
           @see #ButtonBarLayout_allowStacking
         */
        public static final int[] ButtonBarLayout = {
            0x7f0100cf
        };
        /**
          <p>
          @attr description
           Whether to automatically stack the buttons when there is not
             enough space to lay them out side-by-side. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:allowStacking
        */
        public static final int ButtonBarLayout_allowStacking = 0;
        /** Attributes that can be used with a ChartGridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartGridView_android_textAppearance android:textAppearance}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_android_textColor android:textColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_borderDrawable com.example.demo:borderDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_primaryDrawable com.example.demo:primaryDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_secondaryDrawable com.example.demo:secondaryDrawable}</code></td><td></td></tr>
           </table>
           @see #ChartGridView_android_textAppearance
           @see #ChartGridView_android_textColor
           @see #ChartGridView_borderDrawable
           @see #ChartGridView_primaryDrawable
           @see #ChartGridView_secondaryDrawable
         */
        public static final int[] ChartGridView = {
            0x01010034, 0x01010098, 0x7f0100e2, 0x7f0100e3,
            0x7f0100e4
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textAppearance}
          attribute's value can be found in the {@link #ChartGridView} array.
          @attr name android:textAppearance
        */
        public static final int ChartGridView_android_textAppearance = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textColor}
          attribute's value can be found in the {@link #ChartGridView} array.
          @attr name android:textColor
        */
        public static final int ChartGridView_android_textColor = 1;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#borderDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:borderDrawable
        */
        public static final int ChartGridView_borderDrawable = 4;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#primaryDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:primaryDrawable
        */
        public static final int ChartGridView_primaryDrawable = 2;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#secondaryDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:secondaryDrawable
        */
        public static final int ChartGridView_secondaryDrawable = 3;
        /** Attributes that can be used with a ChartNetworkSeriesView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_fillColor com.example.demo:fillColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_fillColorSecondary com.example.demo:fillColorSecondary}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_safeRegion com.example.demo:safeRegion}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_strokeColor com.example.demo:strokeColor}</code></td><td></td></tr>
           </table>
           @see #ChartNetworkSeriesView_fillColor
           @see #ChartNetworkSeriesView_fillColorSecondary
           @see #ChartNetworkSeriesView_safeRegion
           @see #ChartNetworkSeriesView_strokeColor
         */
        public static final int[] ChartNetworkSeriesView = {
            0x7f0100e1, 0x7f0100e5, 0x7f0100e6, 0x7f0100e7
        };
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#fillColor}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:fillColor
        */
        public static final int ChartNetworkSeriesView_fillColor = 2;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#fillColorSecondary}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:fillColorSecondary
        */
        public static final int ChartNetworkSeriesView_fillColorSecondary = 3;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#safeRegion}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:safeRegion
        */
        public static final int ChartNetworkSeriesView_safeRegion = 0;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#strokeColor}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:strokeColor
        */
        public static final int ChartNetworkSeriesView_strokeColor = 1;
        /** Attributes that can be used with a ChartSweepView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartSweepView_followAxis com.example.demo:followAxis}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelColor com.example.demo:labelColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelSize com.example.demo:labelSize}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelTemplate com.example.demo:labelTemplate}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_neighborMargin com.example.demo:neighborMargin}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_safeRegion com.example.demo:safeRegion}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_sweepDrawable com.example.demo:sweepDrawable}</code></td><td></td></tr>
           </table>
           @see #ChartSweepView_followAxis
           @see #ChartSweepView_labelColor
           @see #ChartSweepView_labelSize
           @see #ChartSweepView_labelTemplate
           @see #ChartSweepView_neighborMargin
           @see #ChartSweepView_safeRegion
           @see #ChartSweepView_sweepDrawable
         */
        public static final int[] ChartSweepView = {
            0x7f0100db, 0x7f0100dc, 0x7f0100dd, 0x7f0100de,
            0x7f0100df, 0x7f0100e0, 0x7f0100e1
        };
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#followAxis}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
          @attr name com.example.demo:followAxis
        */
        public static final int ChartSweepView_followAxis = 1;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#labelColor}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:labelColor
        */
        public static final int ChartSweepView_labelColor = 5;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#labelSize}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:labelSize
        */
        public static final int ChartSweepView_labelSize = 3;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#labelTemplate}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:labelTemplate
        */
        public static final int ChartSweepView_labelTemplate = 4;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#neighborMargin}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:neighborMargin
        */
        public static final int ChartSweepView_neighborMargin = 2;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#safeRegion}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:safeRegion
        */
        public static final int ChartSweepView_safeRegion = 6;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#sweepDrawable}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:sweepDrawable
        */
        public static final int ChartSweepView_sweepDrawable = 0;
        /** Attributes that can be used with a ChartView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartView_optimalWidth com.example.demo:optimalWidth}</code></td><td> optimal width of the chart </td></tr>
           <tr><td><code>{@link #ChartView_optimalWidthWeight com.example.demo:optimalWidthWeight}</code></td><td> how to weight extra space beyond optimal width </td></tr>
           </table>
           @see #ChartView_optimalWidth
           @see #ChartView_optimalWidthWeight
         */
        public static final int[] ChartView = {
            0x7f0100d9, 0x7f0100da
        };
        /**
          <p>
          @attr description
           optimal width of the chart 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:optimalWidth
        */
        public static final int ChartView_optimalWidth = 0;
        /**
          <p>
          @attr description
           how to weight extra space beyond optimal width 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:optimalWidthWeight
        */
        public static final int ChartView_optimalWidthWeight = 1;
        /** Attributes that can be used with a CompoundButton.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CompoundButton_android_button android:button}</code></td><td></td></tr>
           <tr><td><code>{@link #CompoundButton_buttonTint com.example.demo:buttonTint}</code></td><td> Tint to apply to the button drawable.</td></tr>
           <tr><td><code>{@link #CompoundButton_buttonTintMode com.example.demo:buttonTintMode}</code></td><td> Blending mode used to apply the button tint.</td></tr>
           </table>
           @see #CompoundButton_android_button
           @see #CompoundButton_buttonTint
           @see #CompoundButton_buttonTintMode
         */
        public static final int[] CompoundButton = {
            0x01010107, 0x7f0100c1, 0x7f0100c2
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#button}
          attribute's value can be found in the {@link #CompoundButton} array.
          @attr name android:button
        */
        public static final int CompoundButton_android_button = 0;
        /**
          <p>
          @attr description
           Tint to apply to the button drawable. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:buttonTint
        */
        public static final int CompoundButton_buttonTint = 1;
        /**
          <p>
          @attr description
           Blending mode used to apply the button tint. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>src_over</code></td><td>3</td><td> The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] </td></tr>
<tr><td><code>src_in</code></td><td>5</td><td> The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] </td></tr>
<tr><td><code>src_atop</code></td><td>9</td><td> The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] </td></tr>
<tr><td><code>multiply</code></td><td>14</td><td> Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] </td></tr>
<tr><td><code>screen</code></td><td>15</td><td> [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.demo:buttonTintMode
        */
        public static final int CompoundButton_buttonTintMode = 2;
        /** Attributes that can be used with a DrawerArrowToggle.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DrawerArrowToggle_arrowHeadLength com.example.demo:arrowHeadLength}</code></td><td> The length of the arrow head when formed to make an arrow </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_arrowShaftLength com.example.demo:arrowShaftLength}</code></td><td> The length of the shaft when formed to make an arrow </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_barLength com.example.demo:barLength}</code></td><td> The length of the bars when they are parallel to each other </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_color com.example.demo:color}</code></td><td> The drawing color for the bars </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_drawableSize com.example.demo:drawableSize}</code></td><td> The total size of the drawable </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_gapBetweenBars com.example.demo:gapBetweenBars}</code></td><td> The max gap between the bars when they are parallel to each other </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_spinBars com.example.demo:spinBars}</code></td><td> Whether bars should rotate or not during transition </td></tr>
           <tr><td><code>{@link #DrawerArrowToggle_thickness com.example.demo:thickness}</code></td><td> The thickness (stroke size) for the bar paint </td></tr>
           </table>
           @see #DrawerArrowToggle_arrowHeadLength
           @see #DrawerArrowToggle_arrowShaftLength
           @see #DrawerArrowToggle_barLength
           @see #DrawerArrowToggle_color
           @see #DrawerArrowToggle_drawableSize
           @see #DrawerArrowToggle_gapBetweenBars
           @see #DrawerArrowToggle_spinBars
           @see #DrawerArrowToggle_thickness
         */
        public static final int[] DrawerArrowToggle = {
            0x7f0100b8, 0x7f0100b9, 0x7f0100ba, 0x7f0100bb,
            0x7f0100bc, 0x7f0100bd, 0x7f0100be, 0x7f0100bf
        };
        /**
          <p>
          @attr description
           The length of the arrow head when formed to make an arrow 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:arrowHeadLength
        */
        public static final int DrawerArrowToggle_arrowHeadLength = 4;
        /**
          <p>
          @attr description
           The length of the shaft when formed to make an arrow 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:arrowShaftLength
        */
        public static final int DrawerArrowToggle_arrowShaftLength = 5;
        /**
          <p>
          @attr description
           The length of the bars when they are parallel to each other 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:barLength
        */
        public static final int DrawerArrowToggle_barLength = 6;
        /**
          <p>
          @attr description
           The drawing color for the bars 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:color
        */
        public static final int DrawerArrowToggle_color = 0;
        /**
          <p>
          @attr description
           The total size of the drawable 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:drawableSize
        */
        public static final int DrawerArrowToggle_drawableSize = 2;
        /**
          <p>
          @attr description
           The max gap between the bars when they are parallel to each other 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:gapBetweenBars
        */
        public static final int DrawerArrowToggle_gapBetweenBars = 3;
        /**
          <p>
          @attr description
           Whether bars should rotate or not during transition 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:spinBars
        */
        public static final int DrawerArrowToggle_spinBars = 1;
        /**
          <p>
          @attr description
           The thickness (stroke size) for the bar paint 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:thickness
        */
        public static final int DrawerArrowToggle_thickness = 7;
        /** Attributes that can be used with a DropDownPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #DropDownPreference_android_entries android:entries}</code></td><td></td></tr>
           <tr><td><code>{@link #DropDownPreference_android_entryValues android:entryValues}</code></td><td></td></tr>
           </table>
           @see #DropDownPreference_android_entries
           @see #DropDownPreference_android_entryValues
         */
        public static final int[] DropDownPreference = {
            0x010100b2, 0x010101f8
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#entries}
          attribute's value can be found in the {@link #DropDownPreference} array.
          @attr name android:entries
        */
        public static final int DropDownPreference_android_entries = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#entryValues}
          attribute's value can be found in the {@link #DropDownPreference} array.
          @attr name android:entryValues
        */
        public static final int DropDownPreference_android_entryValues = 1;
        /** Attributes that can be used with a LinearLayoutCompat.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_baselineAligned android:baselineAligned}</code></td><td> When set to false, prevents the layout from aligning its children's
             baselines.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_baselineAlignedChildIndex android:baselineAlignedChildIndex}</code></td><td> When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_gravity android:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_orientation android:orientation}</code></td><td> Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_android_weightSum android:weightSum}</code></td><td> Defines the maximum weight sum.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_divider com.example.demo:divider}</code></td><td> Drawable to use as a vertical divider between buttons.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_dividerPadding com.example.demo:dividerPadding}</code></td><td> Size of padding on either end of a divider.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_measureWithLargestChild com.example.demo:measureWithLargestChild}</code></td><td> When set to true, all children with a weight will be considered having
             the minimum size of the largest child.</td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_showDividers com.example.demo:showDividers}</code></td><td> Setting for which dividers to show.</td></tr>
           </table>
           @see #LinearLayoutCompat_android_baselineAligned
           @see #LinearLayoutCompat_android_baselineAlignedChildIndex
           @see #LinearLayoutCompat_android_gravity
           @see #LinearLayoutCompat_android_orientation
           @see #LinearLayoutCompat_android_weightSum
           @see #LinearLayoutCompat_divider
           @see #LinearLayoutCompat_dividerPadding
           @see #LinearLayoutCompat_measureWithLargestChild
           @see #LinearLayoutCompat_showDividers
         */
        public static final int[] LinearLayoutCompat = {
            0x010100af, 0x010100c4, 0x01010126, 0x01010127,
            0x01010128, 0x7f010078, 0x7f0100a4, 0x7f0100a5,
            0x7f0100a6
        };
        /**
          <p>
          @attr description
           When set to false, prevents the layout from aligning its children's
             baselines. This attribute is particularly useful when the children
             use different values for gravity. The default value is true. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#baselineAligned}.
          @attr name android:baselineAligned
        */
        public static final int LinearLayoutCompat_android_baselineAligned = 2;
        /**
          <p>
          @attr description
           When a linear layout is part of another layout that is baseline
          aligned, it can specify which of its children to baseline align to
          (that is, which child TextView).
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#baselineAlignedChildIndex}.
          @attr name android:baselineAlignedChildIndex
        */
        public static final int LinearLayoutCompat_android_baselineAlignedChildIndex = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#gravity}
          attribute's value can be found in the {@link #LinearLayoutCompat} array.
          @attr name android:gravity
        */
        public static final int LinearLayoutCompat_android_gravity = 0;
        /**
          <p>
          @attr description
           Should the layout be a column or a row?  Use "horizontal"
             for a row, "vertical" for a column.  The default is
             horizontal. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int LinearLayoutCompat_android_orientation = 1;
        /**
          <p>
          @attr description
           Defines the maximum weight sum. If unspecified, the sum is computed
             by adding the layout_weight of all of the children. This can be
             used for instance to give a single child 50% of the total available
             space by giving it a layout_weight of 0.5 and setting the weightSum
             to 1.0. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#weightSum}.
          @attr name android:weightSum
        */
        public static final int LinearLayoutCompat_android_weightSum = 4;
        /**
          <p>
          @attr description
           Drawable to use as a vertical divider between buttons. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:divider
        */
        public static final int LinearLayoutCompat_divider = 5;
        /**
          <p>
          @attr description
           Size of padding on either end of a divider. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:dividerPadding
        */
        public static final int LinearLayoutCompat_dividerPadding = 8;
        /**
          <p>
          @attr description
           When set to true, all children with a weight will be considered having
             the minimum size of the largest child. If false, all children are
             measured normally. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:measureWithLargestChild
        */
        public static final int LinearLayoutCompat_measureWithLargestChild = 6;
        /**
          <p>
          @attr description
           Setting for which dividers to show. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td></td></tr>
<tr><td><code>beginning</code></td><td>1</td><td></td></tr>
<tr><td><code>middle</code></td><td>2</td><td></td></tr>
<tr><td><code>end</code></td><td>4</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.demo:showDividers
        */
        public static final int LinearLayoutCompat_showDividers = 7;
        /** Attributes that can be used with a LinearLayoutCompat_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_height android:layout_height}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_weight android:layout_weight}</code></td><td></td></tr>
           <tr><td><code>{@link #LinearLayoutCompat_Layout_android_layout_width android:layout_width}</code></td><td></td></tr>
           </table>
           @see #LinearLayoutCompat_Layout_android_layout_gravity
           @see #LinearLayoutCompat_Layout_android_layout_height
           @see #LinearLayoutCompat_Layout_android_layout_weight
           @see #LinearLayoutCompat_Layout_android_layout_width
         */
        public static final int[] LinearLayoutCompat_Layout = {
            0x010100b3, 0x010100f4, 0x010100f5, 0x01010181
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
          attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
          @attr name android:layout_gravity
        */
        public static final int LinearLayoutCompat_Layout_android_layout_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_height}
          attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
          @attr name android:layout_height
        */
        public static final int LinearLayoutCompat_Layout_android_layout_height = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_weight}
          attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
          @attr name android:layout_weight
        */
        public static final int LinearLayoutCompat_Layout_android_layout_weight = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#layout_width}
          attribute's value can be found in the {@link #LinearLayoutCompat_Layout} array.
          @attr name android:layout_width
        */
        public static final int LinearLayoutCompat_Layout_android_layout_width = 1;
        /** Attributes that can be used with a ListPopupWindow.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListPopupWindow_android_dropDownHorizontalOffset android:dropDownHorizontalOffset}</code></td><td> Amount of pixels by which the drop down should be offset horizontally.</td></tr>
           <tr><td><code>{@link #ListPopupWindow_android_dropDownVerticalOffset android:dropDownVerticalOffset}</code></td><td> Amount of pixels by which the drop down should be offset vertically.</td></tr>
           </table>
           @see #ListPopupWindow_android_dropDownHorizontalOffset
           @see #ListPopupWindow_android_dropDownVerticalOffset
         */
        public static final int[] ListPopupWindow = {
            0x010102ac, 0x010102ad
        };
        /**
          <p>
          @attr description
           Amount of pixels by which the drop down should be offset horizontally. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#dropDownHorizontalOffset}.
          @attr name android:dropDownHorizontalOffset
        */
        public static final int ListPopupWindow_android_dropDownHorizontalOffset = 0;
        /**
          <p>
          @attr description
           Amount of pixels by which the drop down should be offset vertically. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#dropDownVerticalOffset}.
          @attr name android:dropDownVerticalOffset
        */
        public static final int ListPopupWindow_android_dropDownVerticalOffset = 1;
        /**  Base attributes that are available to all groups. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuGroup_android_checkableBehavior android:checkableBehavior}</code></td><td> Whether the items are capable of displaying a check mark.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_enabled android:enabled}</code></td><td> Whether the items are enabled.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_id android:id}</code></td><td> The ID of the group.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_menuCategory android:menuCategory}</code></td><td> The category applied to all items within this group.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_orderInCategory android:orderInCategory}</code></td><td> The order within the category applied to all items within this group.</td></tr>
           <tr><td><code>{@link #MenuGroup_android_visible android:visible}</code></td><td> Whether the items are shown/visible.</td></tr>
           </table>
           @see #MenuGroup_android_checkableBehavior
           @see #MenuGroup_android_enabled
           @see #MenuGroup_android_id
           @see #MenuGroup_android_menuCategory
           @see #MenuGroup_android_orderInCategory
           @see #MenuGroup_android_visible
         */
        public static final int[] MenuGroup = {
            0x0101000e, 0x010100d0, 0x01010194, 0x010101de,
            0x010101df, 0x010101e0
        };
        /**
          <p>
          @attr description
           Whether the items are capable of displaying a check mark. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#checkableBehavior}.
          @attr name android:checkableBehavior
        */
        public static final int MenuGroup_android_checkableBehavior = 5;
        /**
          <p>
          @attr description
           Whether the items are enabled. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int MenuGroup_android_enabled = 0;
        /**
          <p>
          @attr description
           The ID of the group. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#id}.
          @attr name android:id
        */
        public static final int MenuGroup_android_id = 1;
        /**
          <p>
          @attr description
           The category applied to all items within this group.
             (This will be or'ed with the orderInCategory attribute.) 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#menuCategory}.
          @attr name android:menuCategory
        */
        public static final int MenuGroup_android_menuCategory = 3;
        /**
          <p>
          @attr description
           The order within the category applied to all items within this group.
             (This will be or'ed with the category attribute.) 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#orderInCategory}.
          @attr name android:orderInCategory
        */
        public static final int MenuGroup_android_orderInCategory = 4;
        /**
          <p>
          @attr description
           Whether the items are shown/visible. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int MenuGroup_android_visible = 2;
        /**  Base attributes that are available to all Item objects. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuItem_actionLayout com.example.demo:actionLayout}</code></td><td> An optional layout to be used as an action view.</td></tr>
           <tr><td><code>{@link #MenuItem_actionProviderClass com.example.demo:actionProviderClass}</code></td><td> The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.</td></tr>
           <tr><td><code>{@link #MenuItem_actionViewClass com.example.demo:actionViewClass}</code></td><td> The name of an optional View class to instantiate and use as an
             action view.</td></tr>
           <tr><td><code>{@link #MenuItem_android_alphabeticShortcut android:alphabeticShortcut}</code></td><td> The alphabetic shortcut key.</td></tr>
           <tr><td><code>{@link #MenuItem_android_checkable android:checkable}</code></td><td> Whether the item is capable of displaying a check mark.</td></tr>
           <tr><td><code>{@link #MenuItem_android_checked android:checked}</code></td><td> Whether the item is checked.</td></tr>
           <tr><td><code>{@link #MenuItem_android_enabled android:enabled}</code></td><td> Whether the item is enabled.</td></tr>
           <tr><td><code>{@link #MenuItem_android_icon android:icon}</code></td><td> The icon associated with this item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_id android:id}</code></td><td> The ID of the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_menuCategory android:menuCategory}</code></td><td> The category applied to the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_numericShortcut android:numericShortcut}</code></td><td> The numeric shortcut key.</td></tr>
           <tr><td><code>{@link #MenuItem_android_onClick android:onClick}</code></td><td> Name of a method on the Context used to inflate the menu that will be
             called when the item is clicked.</td></tr>
           <tr><td><code>{@link #MenuItem_android_orderInCategory android:orderInCategory}</code></td><td> The order within the category applied to the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_title android:title}</code></td><td> The title associated with the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_titleCondensed android:titleCondensed}</code></td><td> The condensed title associated with the item.</td></tr>
           <tr><td><code>{@link #MenuItem_android_visible android:visible}</code></td><td> Whether the item is shown/visible.</td></tr>
           <tr><td><code>{@link #MenuItem_showAsAction com.example.demo:showAsAction}</code></td><td> How this item should display in the Action Bar, if present.</td></tr>
           </table>
           @see #MenuItem_actionLayout
           @see #MenuItem_actionProviderClass
           @see #MenuItem_actionViewClass
           @see #MenuItem_android_alphabeticShortcut
           @see #MenuItem_android_checkable
           @see #MenuItem_android_checked
           @see #MenuItem_android_enabled
           @see #MenuItem_android_icon
           @see #MenuItem_android_id
           @see #MenuItem_android_menuCategory
           @see #MenuItem_android_numericShortcut
           @see #MenuItem_android_onClick
           @see #MenuItem_android_orderInCategory
           @see #MenuItem_android_title
           @see #MenuItem_android_titleCondensed
           @see #MenuItem_android_visible
           @see #MenuItem_showAsAction
         */
        public static final int[] MenuItem = {
            0x01010002, 0x0101000e, 0x010100d0, 0x01010106,
            0x01010194, 0x010101de, 0x010101df, 0x010101e1,
            0x010101e2, 0x010101e3, 0x010101e4, 0x010101e5,
            0x0101026f, 0x7f010090, 0x7f010091, 0x7f010092,
            0x7f010093
        };
        /**
          <p>
          @attr description
           An optional layout to be used as an action view.
             See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:actionLayout
        */
        public static final int MenuItem_actionLayout = 14;
        /**
          <p>
          @attr description
           The name of an optional ActionProvider class to instantiate an action view
             and perform operations such as default action for that menu item.
             See {@link android.view.MenuItem#setActionProvider(android.view.ActionProvider)}
             for more info. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:actionProviderClass
        */
        public static final int MenuItem_actionProviderClass = 16;
        /**
          <p>
          @attr description
           The name of an optional View class to instantiate and use as an
             action view. See {@link android.view.MenuItem#setActionView(android.view.View)}
             for more info. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:actionViewClass
        */
        public static final int MenuItem_actionViewClass = 15;
        /**
          <p>
          @attr description
           The alphabetic shortcut key.  This is the shortcut when using a keyboard
             with alphabetic keys. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#alphabeticShortcut}.
          @attr name android:alphabeticShortcut
        */
        public static final int MenuItem_android_alphabeticShortcut = 9;
        /**
          <p>
          @attr description
           Whether the item is capable of displaying a check mark. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#checkable}.
          @attr name android:checkable
        */
        public static final int MenuItem_android_checkable = 11;
        /**
          <p>
          @attr description
           Whether the item is checked.  Note that you must first have enabled checking with
             the checkable attribute or else the check mark will not appear. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#checked}.
          @attr name android:checked
        */
        public static final int MenuItem_android_checked = 3;
        /**
          <p>
          @attr description
           Whether the item is enabled. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#enabled}.
          @attr name android:enabled
        */
        public static final int MenuItem_android_enabled = 1;
        /**
          <p>
          @attr description
           The icon associated with this item.  This icon will not always be shown, so
             the title should be sufficient in describing this item. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#icon}.
          @attr name android:icon
        */
        public static final int MenuItem_android_icon = 0;
        /**
          <p>
          @attr description
           The ID of the item. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#id}.
          @attr name android:id
        */
        public static final int MenuItem_android_id = 2;
        /**
          <p>
          @attr description
           The category applied to the item.
             (This will be or'ed with the orderInCategory attribute.) 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#menuCategory}.
          @attr name android:menuCategory
        */
        public static final int MenuItem_android_menuCategory = 5;
        /**
          <p>
          @attr description
           The numeric shortcut key.  This is the shortcut when using a numeric (e.g., 12-key)
             keyboard. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#numericShortcut}.
          @attr name android:numericShortcut
        */
        public static final int MenuItem_android_numericShortcut = 10;
        /**
          <p>
          @attr description
           Name of a method on the Context used to inflate the menu that will be
             called when the item is clicked. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#onClick}.
          @attr name android:onClick
        */
        public static final int MenuItem_android_onClick = 12;
        /**
          <p>
          @attr description
           The order within the category applied to the item.
             (This will be or'ed with the category attribute.) 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#orderInCategory}.
          @attr name android:orderInCategory
        */
        public static final int MenuItem_android_orderInCategory = 6;
        /**
          <p>
          @attr description
           The title associated with the item. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#title}.
          @attr name android:title
        */
        public static final int MenuItem_android_title = 7;
        /**
          <p>
          @attr description
           The condensed title associated with the item.  This is used in situations where the
             normal title may be too long to be displayed. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#titleCondensed}.
          @attr name android:titleCondensed
        */
        public static final int MenuItem_android_titleCondensed = 8;
        /**
          <p>
          @attr description
           Whether the item is shown/visible. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#visible}.
          @attr name android:visible
        */
        public static final int MenuItem_android_visible = 4;
        /**
          <p>
          @attr description
           How this item should display in the Action Bar, if present. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>never</code></td><td>0</td><td> Never show this item in an action bar, show it in the overflow menu instead.
                 Mutually exclusive with "ifRoom" and "always". </td></tr>
<tr><td><code>ifRoom</code></td><td>1</td><td> Show this item in an action bar if there is room for it as determined
                 by the system. Favor this option over "always" where possible.
                 Mutually exclusive with "never" and "always". </td></tr>
<tr><td><code>always</code></td><td>2</td><td> Always show this item in an actionbar, even if it would override
                 the system's limits of how much stuff to put there. This may make
                 your action bar look bad on some screens. In most cases you should
                 use "ifRoom" instead. Mutually exclusive with "ifRoom" and "never". </td></tr>
<tr><td><code>withText</code></td><td>4</td><td> When this item is shown as an action in the action bar, show a text
                 label with it even if it has an icon representation. </td></tr>
<tr><td><code>collapseActionView</code></td><td>8</td><td> This item's action view collapses to a normal menu
                 item. When expanded, the action view takes over a
                 larger segment of its container. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.demo:showAsAction
        */
        public static final int MenuItem_showAsAction = 13;
        /** Attributes that can be used with a MenuView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MenuView_android_headerBackground android:headerBackground}</code></td><td> Default background for the menu header.</td></tr>
           <tr><td><code>{@link #MenuView_android_horizontalDivider android:horizontalDivider}</code></td><td> Default horizontal divider between rows of menu items.</td></tr>
           <tr><td><code>{@link #MenuView_android_itemBackground android:itemBackground}</code></td><td> Default background for each menu item.</td></tr>
           <tr><td><code>{@link #MenuView_android_itemIconDisabledAlpha android:itemIconDisabledAlpha}</code></td><td> Default disabled icon alpha for each menu item that shows an icon.</td></tr>
           <tr><td><code>{@link #MenuView_android_itemTextAppearance android:itemTextAppearance}</code></td><td> Default appearance of menu item text.</td></tr>
           <tr><td><code>{@link #MenuView_android_verticalDivider android:verticalDivider}</code></td><td> Default vertical divider between menu items.</td></tr>
           <tr><td><code>{@link #MenuView_android_windowAnimationStyle android:windowAnimationStyle}</code></td><td> Default animations for the menu.</td></tr>
           <tr><td><code>{@link #MenuView_preserveIconSpacing com.example.demo:preserveIconSpacing}</code></td><td> Whether space should be reserved in layout when an icon is missing.</td></tr>
           </table>
           @see #MenuView_android_headerBackground
           @see #MenuView_android_horizontalDivider
           @see #MenuView_android_itemBackground
           @see #MenuView_android_itemIconDisabledAlpha
           @see #MenuView_android_itemTextAppearance
           @see #MenuView_android_verticalDivider
           @see #MenuView_android_windowAnimationStyle
           @see #MenuView_preserveIconSpacing
         */
        public static final int[] MenuView = {
            0x010100ae, 0x0101012c, 0x0101012d, 0x0101012e,
            0x0101012f, 0x01010130, 0x01010131, 0x7f01008f
        };
        /**
          <p>
          @attr description
           Default background for the menu header. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#headerBackground}.
          @attr name android:headerBackground
        */
        public static final int MenuView_android_headerBackground = 4;
        /**
          <p>
          @attr description
           Default horizontal divider between rows of menu items. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#horizontalDivider}.
          @attr name android:horizontalDivider
        */
        public static final int MenuView_android_horizontalDivider = 2;
        /**
          <p>
          @attr description
           Default background for each menu item. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#itemBackground}.
          @attr name android:itemBackground
        */
        public static final int MenuView_android_itemBackground = 5;
        /**
          <p>
          @attr description
           Default disabled icon alpha for each menu item that shows an icon. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#itemIconDisabledAlpha}.
          @attr name android:itemIconDisabledAlpha
        */
        public static final int MenuView_android_itemIconDisabledAlpha = 6;
        /**
          <p>
          @attr description
           Default appearance of menu item text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#itemTextAppearance}.
          @attr name android:itemTextAppearance
        */
        public static final int MenuView_android_itemTextAppearance = 1;
        /**
          <p>
          @attr description
           Default vertical divider between menu items. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#verticalDivider}.
          @attr name android:verticalDivider
        */
        public static final int MenuView_android_verticalDivider = 3;
        /**
          <p>
          @attr description
           Default animations for the menu. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#windowAnimationStyle}.
          @attr name android:windowAnimationStyle
        */
        public static final int MenuView_android_windowAnimationStyle = 0;
        /**
          <p>
          @attr description
           Whether space should be reserved in layout when an icon is missing. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:preserveIconSpacing
        */
        public static final int MenuView_preserveIconSpacing = 7;
        /** Attributes that can be used with a PercentageBarChart.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PercentageBarChart_emptyColor com.example.demo:emptyColor}</code></td><td> Background color </td></tr>
           <tr><td><code>{@link #PercentageBarChart_minTickWidth com.example.demo:minTickWidth}</code></td><td> Minimum tick width for each slice in the bar chart.</td></tr>
           </table>
           @see #PercentageBarChart_emptyColor
           @see #PercentageBarChart_minTickWidth
         */
        public static final int[] PercentageBarChart = {
            0x7f0100d7, 0x7f0100d8
        };
        /**
          <p>
          @attr description
           Background color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:emptyColor
        */
        public static final int PercentageBarChart_emptyColor = 0;
        /**
          <p>
          @attr description
           Minimum tick width for each slice in the bar chart. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:minTickWidth
        */
        public static final int PercentageBarChart_minTickWidth = 1;
        /** Attributes that can be used with a PopupWindow.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PopupWindow_android_popupBackground android:popupBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #PopupWindow_overlapAnchor com.example.demo:overlapAnchor}</code></td><td> Whether the popup window should overlap its anchor view.</td></tr>
           </table>
           @see #PopupWindow_android_popupBackground
           @see #PopupWindow_overlapAnchor
         */
        public static final int[] PopupWindow = {
            0x01010176, 0x7f0100b7
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#popupBackground}
          attribute's value can be found in the {@link #PopupWindow} array.
          @attr name android:popupBackground
        */
        public static final int PopupWindow_android_popupBackground = 0;
        /**
          <p>
          @attr description
           Whether the popup window should overlap its anchor view. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:overlapAnchor
        */
        public static final int PopupWindow_overlapAnchor = 1;
        /** Attributes that can be used with a PopupWindowBackgroundState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PopupWindowBackgroundState_state_above_anchor com.example.demo:state_above_anchor}</code></td><td> State identifier indicating the popup will be above the anchor.</td></tr>
           </table>
           @see #PopupWindowBackgroundState_state_above_anchor
         */
        public static final int[] PopupWindowBackgroundState = {
            0x7f0100b6
        };
        /**
          <p>
          @attr description
           State identifier indicating the popup will be above the anchor. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:state_above_anchor
        */
        public static final int PopupWindowBackgroundState_state_above_anchor = 0;
        /**  For Search 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Preference_keywords com.example.demo:keywords}</code></td><td></td></tr>
           </table>
           @see #Preference_keywords
         */
        public static final int[] Preference = {
            0x7f0100e9
        };
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#keywords}
          attribute's value can be found in the {@link #Preference} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:keywords
        */
        public static final int Preference_keywords = 0;
        /** Attributes that can be used with a SearchView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SearchView_android_focusable android:focusable}</code></td><td></td></tr>
           <tr><td><code>{@link #SearchView_android_imeOptions android:imeOptions}</code></td><td> The IME options to set on the query text field.</td></tr>
           <tr><td><code>{@link #SearchView_android_inputType android:inputType}</code></td><td> The input type to set on the query text field.</td></tr>
           <tr><td><code>{@link #SearchView_android_maxWidth android:maxWidth}</code></td><td> An optional maximum width of the SearchView.</td></tr>
           <tr><td><code>{@link #SearchView_closeIcon com.example.demo:closeIcon}</code></td><td> Close button icon </td></tr>
           <tr><td><code>{@link #SearchView_commitIcon com.example.demo:commitIcon}</code></td><td> Commit icon shown in the query suggestion row </td></tr>
           <tr><td><code>{@link #SearchView_defaultQueryHint com.example.demo:defaultQueryHint}</code></td><td> Default query hint used when {@code queryHint} is undefined and
             the search view's {@code SearchableInfo} does not provide a hint.</td></tr>
           <tr><td><code>{@link #SearchView_goIcon com.example.demo:goIcon}</code></td><td> Go button icon </td></tr>
           <tr><td><code>{@link #SearchView_iconifiedByDefault com.example.demo:iconifiedByDefault}</code></td><td> The default state of the SearchView.</td></tr>
           <tr><td><code>{@link #SearchView_layout com.example.demo:layout}</code></td><td> The layout to use for the search view.</td></tr>
           <tr><td><code>{@link #SearchView_queryBackground com.example.demo:queryBackground}</code></td><td> Background for the section containing the search query </td></tr>
           <tr><td><code>{@link #SearchView_queryHint com.example.demo:queryHint}</code></td><td> An optional user-defined query hint string to be displayed in the empty query field.</td></tr>
           <tr><td><code>{@link #SearchView_searchHintIcon com.example.demo:searchHintIcon}</code></td><td> Search icon displayed as a text field hint </td></tr>
           <tr><td><code>{@link #SearchView_searchIcon com.example.demo:searchIcon}</code></td><td> Search icon </td></tr>
           <tr><td><code>{@link #SearchView_submitBackground com.example.demo:submitBackground}</code></td><td> Background for the section containing the action (e.</td></tr>
           <tr><td><code>{@link #SearchView_suggestionRowLayout com.example.demo:suggestionRowLayout}</code></td><td> Layout for query suggestion rows </td></tr>
           <tr><td><code>{@link #SearchView_voiceIcon com.example.demo:voiceIcon}</code></td><td> Voice button icon </td></tr>
           </table>
           @see #SearchView_android_focusable
           @see #SearchView_android_imeOptions
           @see #SearchView_android_inputType
           @see #SearchView_android_maxWidth
           @see #SearchView_closeIcon
           @see #SearchView_commitIcon
           @see #SearchView_defaultQueryHint
           @see #SearchView_goIcon
           @see #SearchView_iconifiedByDefault
           @see #SearchView_layout
           @see #SearchView_queryBackground
           @see #SearchView_queryHint
           @see #SearchView_searchHintIcon
           @see #SearchView_searchIcon
           @see #SearchView_submitBackground
           @see #SearchView_suggestionRowLayout
           @see #SearchView_voiceIcon
         */
        public static final int[] SearchView = {
            0x010100da, 0x0101011f, 0x01010220, 0x01010264,
            0x7f010094, 0x7f010095, 0x7f010096, 0x7f010097,
            0x7f010098, 0x7f010099, 0x7f01009a, 0x7f01009b,
            0x7f01009c, 0x7f01009d, 0x7f01009e, 0x7f01009f,
            0x7f0100a0
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#focusable}
          attribute's value can be found in the {@link #SearchView} array.
          @attr name android:focusable
        */
        public static final int SearchView_android_focusable = 0;
        /**
          <p>
          @attr description
           The IME options to set on the query text field. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#imeOptions}.
          @attr name android:imeOptions
        */
        public static final int SearchView_android_imeOptions = 3;
        /**
          <p>
          @attr description
           The input type to set on the query text field. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#inputType}.
          @attr name android:inputType
        */
        public static final int SearchView_android_inputType = 2;
        /**
          <p>
          @attr description
           An optional maximum width of the SearchView. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#maxWidth}.
          @attr name android:maxWidth
        */
        public static final int SearchView_android_maxWidth = 1;
        /**
          <p>
          @attr description
           Close button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:closeIcon
        */
        public static final int SearchView_closeIcon = 8;
        /**
          <p>
          @attr description
           Commit icon shown in the query suggestion row 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:commitIcon
        */
        public static final int SearchView_commitIcon = 13;
        /**
          <p>
          @attr description
           Default query hint used when {@code queryHint} is undefined and
             the search view's {@code SearchableInfo} does not provide a hint. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:defaultQueryHint
        */
        public static final int SearchView_defaultQueryHint = 7;
        /**
          <p>
          @attr description
           Go button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:goIcon
        */
        public static final int SearchView_goIcon = 9;
        /**
          <p>
          @attr description
           The default state of the SearchView. If true, it will be iconified when not in
             use and expanded when clicked. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:iconifiedByDefault
        */
        public static final int SearchView_iconifiedByDefault = 5;
        /**
          <p>
          @attr description
           The layout to use for the search view. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:layout
        */
        public static final int SearchView_layout = 4;
        /**
          <p>
          @attr description
           Background for the section containing the search query 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:queryBackground
        */
        public static final int SearchView_queryBackground = 15;
        /**
          <p>
          @attr description
           An optional user-defined query hint string to be displayed in the empty query field. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:queryHint
        */
        public static final int SearchView_queryHint = 6;
        /**
          <p>
          @attr description
           Search icon displayed as a text field hint 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:searchHintIcon
        */
        public static final int SearchView_searchHintIcon = 11;
        /**
          <p>
          @attr description
           Search icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:searchIcon
        */
        public static final int SearchView_searchIcon = 10;
        /**
          <p>
          @attr description
           Background for the section containing the action (e.g. voice search) 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:submitBackground
        */
        public static final int SearchView_submitBackground = 16;
        /**
          <p>
          @attr description
           Layout for query suggestion rows 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:suggestionRowLayout
        */
        public static final int SearchView_suggestionRowLayout = 14;
        /**
          <p>
          @attr description
           Voice button icon 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:voiceIcon
        */
        public static final int SearchView_voiceIcon = 12;
        /**      <declare-styleable name="IconPreferenceScreen">
        <attr name="icon" format="reference" />
    </declare-styleable> 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SetupWizardIllustration_aspectRatio com.example.demo:aspectRatio}</code></td><td></td></tr>
           </table>
           @see #SetupWizardIllustration_aspectRatio
         */
        public static final int[] SetupWizardIllustration = {
            0x7f0100d2
        };
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#aspectRatio}
          attribute's value can be found in the {@link #SetupWizardIllustration} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:aspectRatio
        */
        public static final int SetupWizardIllustration_aspectRatio = 0;
        /** Attributes that can be used with a Spinner.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Spinner_android_dropDownWidth android:dropDownWidth}</code></td><td> Width of the dropdown in spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_android_entries android:entries}</code></td><td> Reference to an array resource that will populate the Spinner.</td></tr>
           <tr><td><code>{@link #Spinner_android_popupBackground android:popupBackground}</code></td><td> Background drawable to use for the dropdown in spinnerMode="dropdown".</td></tr>
           <tr><td><code>{@link #Spinner_android_prompt android:prompt}</code></td><td> The prompt to display when the spinner's dialog is shown.</td></tr>
           <tr><td><code>{@link #Spinner_popupTheme com.example.demo:popupTheme}</code></td><td> Theme to use for the drop-down or dialog popup window.</td></tr>
           </table>
           @see #Spinner_android_dropDownWidth
           @see #Spinner_android_entries
           @see #Spinner_android_popupBackground
           @see #Spinner_android_prompt
           @see #Spinner_popupTheme
         */
        public static final int[] Spinner = {
            0x010100b2, 0x01010176, 0x0101017b, 0x01010262,
            0x7f010088
        };
        /**
          <p>
          @attr description
           Width of the dropdown in spinnerMode="dropdown". 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#dropDownWidth}.
          @attr name android:dropDownWidth
        */
        public static final int Spinner_android_dropDownWidth = 3;
        /**
          <p>
          @attr description
           Reference to an array resource that will populate the Spinner. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#entries}.
          @attr name android:entries
        */
        public static final int Spinner_android_entries = 0;
        /**
          <p>
          @attr description
           Background drawable to use for the dropdown in spinnerMode="dropdown". 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#popupBackground}.
          @attr name android:popupBackground
        */
        public static final int Spinner_android_popupBackground = 1;
        /**
          <p>
          @attr description
           The prompt to display when the spinner's dialog is shown. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#prompt}.
          @attr name android:prompt
        */
        public static final int Spinner_android_prompt = 2;
        /**
          <p>
          @attr description
           Theme to use for the drop-down or dialog popup window. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:popupTheme
        */
        public static final int Spinner_popupTheme = 4;
        /** Attributes that can be used with a SwitchCompat.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SwitchCompat_android_textOff android:textOff}</code></td><td> Text to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #SwitchCompat_android_textOn android:textOn}</code></td><td> Text to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #SwitchCompat_android_thumb android:thumb}</code></td><td> Drawable to use as the "thumb" that switches back and forth.</td></tr>
           <tr><td><code>{@link #SwitchCompat_showText com.example.demo:showText}</code></td><td> Whether to draw on/off text.</td></tr>
           <tr><td><code>{@link #SwitchCompat_splitTrack com.example.demo:splitTrack}</code></td><td> Whether to split the track and leave a gap for the thumb drawable.</td></tr>
           <tr><td><code>{@link #SwitchCompat_switchMinWidth com.example.demo:switchMinWidth}</code></td><td> Minimum width for the switch component </td></tr>
           <tr><td><code>{@link #SwitchCompat_switchPadding com.example.demo:switchPadding}</code></td><td> Minimum space between the switch and caption text </td></tr>
           <tr><td><code>{@link #SwitchCompat_switchTextAppearance com.example.demo:switchTextAppearance}</code></td><td> TextAppearance style for text displayed on the switch thumb.</td></tr>
           <tr><td><code>{@link #SwitchCompat_thumbTextPadding com.example.demo:thumbTextPadding}</code></td><td> Amount of padding on either side of text within the switch thumb.</td></tr>
           <tr><td><code>{@link #SwitchCompat_track com.example.demo:track}</code></td><td> Drawable to use as the "track" that the switch thumb slides within.</td></tr>
           </table>
           @see #SwitchCompat_android_textOff
           @see #SwitchCompat_android_textOn
           @see #SwitchCompat_android_thumb
           @see #SwitchCompat_showText
           @see #SwitchCompat_splitTrack
           @see #SwitchCompat_switchMinWidth
           @see #SwitchCompat_switchPadding
           @see #SwitchCompat_switchTextAppearance
           @see #SwitchCompat_thumbTextPadding
           @see #SwitchCompat_track
         */
        public static final int[] SwitchCompat = {
            0x01010124, 0x01010125, 0x01010142, 0x7f0100c3,
            0x7f0100c4, 0x7f0100c5, 0x7f0100c6, 0x7f0100c7,
            0x7f0100c8, 0x7f0100c9
        };
        /**
          <p>
          @attr description
           Text to use when the switch is in the unchecked/"off" state. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textOff}.
          @attr name android:textOff
        */
        public static final int SwitchCompat_android_textOff = 1;
        /**
          <p>
          @attr description
           Text to use when the switch is in the checked/"on" state. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textOn}.
          @attr name android:textOn
        */
        public static final int SwitchCompat_android_textOn = 0;
        /**
          <p>
          @attr description
           Drawable to use as the "thumb" that switches back and forth. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#thumb}.
          @attr name android:thumb
        */
        public static final int SwitchCompat_android_thumb = 2;
        /**
          <p>
          @attr description
           Whether to draw on/off text. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:showText
        */
        public static final int SwitchCompat_showText = 9;
        /**
          <p>
          @attr description
           Whether to split the track and leave a gap for the thumb drawable. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:splitTrack
        */
        public static final int SwitchCompat_splitTrack = 8;
        /**
          <p>
          @attr description
           Minimum width for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:switchMinWidth
        */
        public static final int SwitchCompat_switchMinWidth = 6;
        /**
          <p>
          @attr description
           Minimum space between the switch and caption text 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:switchPadding
        */
        public static final int SwitchCompat_switchPadding = 7;
        /**
          <p>
          @attr description
           TextAppearance style for text displayed on the switch thumb. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:switchTextAppearance
        */
        public static final int SwitchCompat_switchTextAppearance = 5;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch thumb. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:thumbTextPadding
        */
        public static final int SwitchCompat_thumbTextPadding = 4;
        /**
          <p>
          @attr description
           Drawable to use as the "track" that the switch thumb slides within. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:track
        */
        public static final int SwitchCompat_track = 3;
        /** Attributes that can be used with a TextAppearance.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #TextAppearance_android_shadowColor android:shadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_shadowDx android:shadowDx}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_shadowDy android:shadowDy}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_shadowRadius android:shadowRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_textColor android:textColor}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_textSize android:textSize}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_textStyle android:textStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_android_typeface android:typeface}</code></td><td></td></tr>
           <tr><td><code>{@link #TextAppearance_textAllCaps com.example.demo:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
           </table>
           @see #TextAppearance_android_shadowColor
           @see #TextAppearance_android_shadowDx
           @see #TextAppearance_android_shadowDy
           @see #TextAppearance_android_shadowRadius
           @see #TextAppearance_android_textColor
           @see #TextAppearance_android_textSize
           @see #TextAppearance_android_textStyle
           @see #TextAppearance_android_typeface
           @see #TextAppearance_textAllCaps
         */
        public static final int[] TextAppearance = {
            0x01010095, 0x01010096, 0x01010097, 0x01010098,
            0x01010161, 0x01010162, 0x01010163, 0x01010164,
            0x7f0100a3
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#shadowColor}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:shadowColor
        */
        public static final int TextAppearance_android_shadowColor = 4;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#shadowDx}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:shadowDx
        */
        public static final int TextAppearance_android_shadowDx = 5;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#shadowDy}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:shadowDy
        */
        public static final int TextAppearance_android_shadowDy = 6;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#shadowRadius}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:shadowRadius
        */
        public static final int TextAppearance_android_shadowRadius = 7;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textColor}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:textColor
        */
        public static final int TextAppearance_android_textColor = 3;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textSize}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:textSize
        */
        public static final int TextAppearance_android_textSize = 0;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#textStyle}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:textStyle
        */
        public static final int TextAppearance_android_textStyle = 2;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#typeface}
          attribute's value can be found in the {@link #TextAppearance} array.
          @attr name android:typeface
        */
        public static final int TextAppearance_android_typeface = 1;
        /**
          <p>
          @attr description
           Present the text in ALL CAPS. This may use a small-caps form when available. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a boolean value, either "<code>true</code>" or "<code>false</code>".
          <p>This is a private symbol.
          @attr name com.example.demo:textAllCaps
        */
        public static final int TextAppearance_textAllCaps = 8;
        /** Attributes that can be used with a Toolbar.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Toolbar_android_gravity android:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_android_minHeight android:minHeight}</code></td><td> Allows us to read in the minHeight attr pre-v16 </td></tr>
           <tr><td><code>{@link #Toolbar_collapseContentDescription com.example.demo:collapseContentDescription}</code></td><td> Text to set as the content description for the collapse button.</td></tr>
           <tr><td><code>{@link #Toolbar_collapseIcon com.example.demo:collapseIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_contentInsetEnd com.example.demo:contentInsetEnd}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #Toolbar_contentInsetLeft com.example.demo:contentInsetLeft}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #Toolbar_contentInsetRight com.example.demo:contentInsetRight}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #Toolbar_contentInsetStart com.example.demo:contentInsetStart}</code></td><td> Minimum inset for content views within a bar.</td></tr>
           <tr><td><code>{@link #Toolbar_logo com.example.demo:logo}</code></td><td> Drawable to set as the logo that appears at the starting side of
             the Toolbar, just after the navigation button.</td></tr>
           <tr><td><code>{@link #Toolbar_logoDescription com.example.demo:logoDescription}</code></td><td> A content description string to describe the appearance of the
             associated logo image.</td></tr>
           <tr><td><code>{@link #Toolbar_maxButtonHeight com.example.demo:maxButtonHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_navigationContentDescription com.example.demo:navigationContentDescription}</code></td><td> Text to set as the content description for the navigation button
             located at the start of the toolbar.</td></tr>
           <tr><td><code>{@link #Toolbar_navigationIcon com.example.demo:navigationIcon}</code></td><td> Icon drawable to use for the navigation button located at
             the start of the toolbar.</td></tr>
           <tr><td><code>{@link #Toolbar_popupTheme com.example.demo:popupTheme}</code></td><td> Reference to a theme that should be used to inflate popups
             shown by widgets in the toolbar.</td></tr>
           <tr><td><code>{@link #Toolbar_subtitle com.example.demo:subtitle}</code></td><td> Specifies subtitle text used for navigationMode="normal" </td></tr>
           <tr><td><code>{@link #Toolbar_subtitleTextAppearance com.example.demo:subtitleTextAppearance}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_subtitleTextColor com.example.demo:subtitleTextColor}</code></td><td> A color to apply to the subtitle string.</td></tr>
           <tr><td><code>{@link #Toolbar_title com.example.demo:title}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMarginBottom com.example.demo:titleMarginBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMarginEnd com.example.demo:titleMarginEnd}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMarginStart com.example.demo:titleMarginStart}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMarginTop com.example.demo:titleMarginTop}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleMargins com.example.demo:titleMargins}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleTextAppearance com.example.demo:titleTextAppearance}</code></td><td></td></tr>
           <tr><td><code>{@link #Toolbar_titleTextColor com.example.demo:titleTextColor}</code></td><td> A color to apply to the title string.</td></tr>
           </table>
           @see #Toolbar_android_gravity
           @see #Toolbar_android_minHeight
           @see #Toolbar_collapseContentDescription
           @see #Toolbar_collapseIcon
           @see #Toolbar_contentInsetEnd
           @see #Toolbar_contentInsetLeft
           @see #Toolbar_contentInsetRight
           @see #Toolbar_contentInsetStart
           @see #Toolbar_logo
           @see #Toolbar_logoDescription
           @see #Toolbar_maxButtonHeight
           @see #Toolbar_navigationContentDescription
           @see #Toolbar_navigationIcon
           @see #Toolbar_popupTheme
           @see #Toolbar_subtitle
           @see #Toolbar_subtitleTextAppearance
           @see #Toolbar_subtitleTextColor
           @see #Toolbar_title
           @see #Toolbar_titleMarginBottom
           @see #Toolbar_titleMarginEnd
           @see #Toolbar_titleMarginStart
           @see #Toolbar_titleMarginTop
           @see #Toolbar_titleMargins
           @see #Toolbar_titleTextAppearance
           @see #Toolbar_titleTextColor
         */
        public static final int[] Toolbar = {
            0x010100af, 0x01010140, 0x7f010000, 0x7f010073,
            0x7f010077, 0x7f010083, 0x7f010084, 0x7f010085,
            0x7f010086, 0x7f010088, 0x7f0100a7, 0x7f0100a8,
            0x7f0100a9, 0x7f0100aa, 0x7f0100ab, 0x7f0100ac,
            0x7f0100ad, 0x7f0100ae, 0x7f0100af, 0x7f0100b0,
            0x7f0100b1, 0x7f0100b2, 0x7f0100b3, 0x7f0100b4,
            0x7f0100b5
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#gravity}
          attribute's value can be found in the {@link #Toolbar} array.
          @attr name android:gravity
        */
        public static final int Toolbar_android_gravity = 0;
        /**
          <p>
          @attr description
           Allows us to read in the minHeight attr pre-v16 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#minHeight}.
          @attr name android:minHeight
        */
        public static final int Toolbar_android_minHeight = 1;
        /**
          <p>
          @attr description
           Text to set as the content description for the collapse button. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:collapseContentDescription
        */
        public static final int Toolbar_collapseContentDescription = 19;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#collapseIcon}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:collapseIcon
        */
        public static final int Toolbar_collapseIcon = 18;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:contentInsetEnd
        */
        public static final int Toolbar_contentInsetEnd = 6;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:contentInsetLeft
        */
        public static final int Toolbar_contentInsetLeft = 7;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:contentInsetRight
        */
        public static final int Toolbar_contentInsetRight = 8;
        /**
          <p>
          @attr description
           Minimum inset for content views within a bar. Navigation buttons and
             menu views are excepted. Only valid for some themes and configurations. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:contentInsetStart
        */
        public static final int Toolbar_contentInsetStart = 5;
        /**
          <p>
          @attr description
           Drawable to set as the logo that appears at the starting side of
             the Toolbar, just after the navigation button. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:logo
        */
        public static final int Toolbar_logo = 4;
        /**
          <p>
          @attr description
           A content description string to describe the appearance of the
             associated logo image. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:logoDescription
        */
        public static final int Toolbar_logoDescription = 22;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#maxButtonHeight}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:maxButtonHeight
        */
        public static final int Toolbar_maxButtonHeight = 17;
        /**
          <p>
          @attr description
           Text to set as the content description for the navigation button
             located at the start of the toolbar. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:navigationContentDescription
        */
        public static final int Toolbar_navigationContentDescription = 21;
        /**
          <p>
          @attr description
           Icon drawable to use for the navigation button located at
             the start of the toolbar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:navigationIcon
        */
        public static final int Toolbar_navigationIcon = 20;
        /**
          <p>
          @attr description
           Reference to a theme that should be used to inflate popups
             shown by widgets in the toolbar. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:popupTheme
        */
        public static final int Toolbar_popupTheme = 9;
        /**
          <p>
          @attr description
           Specifies subtitle text used for navigationMode="normal" 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:subtitle
        */
        public static final int Toolbar_subtitle = 3;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#subtitleTextAppearance}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:subtitleTextAppearance
        */
        public static final int Toolbar_subtitleTextAppearance = 11;
        /**
          <p>
          @attr description
           A color to apply to the subtitle string. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:subtitleTextColor
        */
        public static final int Toolbar_subtitleTextColor = 24;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#title}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:title
        */
        public static final int Toolbar_title = 2;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#titleMarginBottom}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:titleMarginBottom
        */
        public static final int Toolbar_titleMarginBottom = 16;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#titleMarginEnd}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:titleMarginEnd
        */
        public static final int Toolbar_titleMarginEnd = 14;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#titleMarginStart}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:titleMarginStart
        */
        public static final int Toolbar_titleMarginStart = 13;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#titleMarginTop}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:titleMarginTop
        */
        public static final int Toolbar_titleMarginTop = 15;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#titleMargins}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:titleMargins
        */
        public static final int Toolbar_titleMargins = 12;
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#titleTextAppearance}
          attribute's value can be found in the {@link #Toolbar} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.example.demo:titleTextAppearance
        */
        public static final int Toolbar_titleTextAppearance = 10;
        /**
          <p>
          @attr description
           A color to apply to the title string. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:titleTextColor
        */
        public static final int Toolbar_titleTextColor = 23;
        /** Attributes that can be used with a View.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #View_android_focusable android:focusable}</code></td><td> Boolean that controls whether a view can take focus.</td></tr>
           <tr><td><code>{@link #View_android_theme android:theme}</code></td><td> Specifies a theme override for a view.</td></tr>
           <tr><td><code>{@link #View_paddingEnd com.example.demo:paddingEnd}</code></td><td> Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingStart com.example.demo:paddingStart}</code></td><td> Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_theme com.example.demo:theme}</code></td><td> Deprecated.</td></tr>
           </table>
           @see #View_android_focusable
           @see #View_android_theme
           @see #View_paddingEnd
           @see #View_paddingStart
           @see #View_theme
         */
        public static final int[] View = {
            0x01010000, 0x010100da, 0x7f01008a, 0x7f01008b,
            0x7f01008c
        };
        /**
          <p>
          @attr description
           Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#focusable}.
          @attr name android:focusable
        */
        public static final int View_android_focusable = 1;
        /**
          <p>
          @attr description
           Specifies a theme override for a view. When a theme override is set, the
             view will be inflated using a {@link android.content.Context} themed with
             the specified resource. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#theme}.
          @attr name android:theme
        */
        public static final int View_android_theme = 0;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:paddingEnd
        */
        public static final int View_paddingEnd = 3;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:paddingStart
        */
        public static final int View_paddingStart = 2;
        /**
          <p>
          @attr description
           Deprecated. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.example.demo:theme
        */
        public static final int View_theme = 4;
        /** Attributes that can be used with a ViewBackgroundHelper.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewBackgroundHelper_android_background android:background}</code></td><td></td></tr>
           <tr><td><code>{@link #ViewBackgroundHelper_backgroundTint com.example.demo:backgroundTint}</code></td><td> Tint to apply to the background.</td></tr>
           <tr><td><code>{@link #ViewBackgroundHelper_backgroundTintMode com.example.demo:backgroundTintMode}</code></td><td> Blending mode used to apply the background tint.</td></tr>
           </table>
           @see #ViewBackgroundHelper_android_background
           @see #ViewBackgroundHelper_backgroundTint
           @see #ViewBackgroundHelper_backgroundTintMode
         */
        public static final int[] ViewBackgroundHelper = {
            0x010100d4, 0x7f01008d, 0x7f01008e
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#background}
          attribute's value can be found in the {@link #ViewBackgroundHelper} array.
          @attr name android:background
        */
        public static final int ViewBackgroundHelper_android_background = 0;
        /**
          <p>
          @attr description
           Tint to apply to the background. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.example.demo:backgroundTint
        */
        public static final int ViewBackgroundHelper_backgroundTint = 1;
        /**
          <p>
          @attr description
           Blending mode used to apply the background tint. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>src_over</code></td><td>3</td><td> The tint is drawn on top of the drawable.
                 [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] </td></tr>
<tr><td><code>src_in</code></td><td>5</td><td> The tint is masked by the alpha channel of the drawable. The drawable’s
                 color channels are thrown out. [Sa * Da, Sc * Da] </td></tr>
<tr><td><code>src_atop</code></td><td>9</td><td> The tint is drawn above the drawable, but with the drawable’s alpha
                 channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] </td></tr>
<tr><td><code>multiply</code></td><td>14</td><td> Multiplies the color and alpha channels of the drawable with those of
                 the tint. [Sa * Da, Sc * Dc] </td></tr>
<tr><td><code>screen</code></td><td>15</td><td> [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.example.demo:backgroundTintMode
        */
        public static final int ViewBackgroundHelper_backgroundTintMode = 2;
        /** Attributes that can be used with a ViewStubCompat.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewStubCompat_android_id android:id}</code></td><td></td></tr>
           <tr><td><code>{@link #ViewStubCompat_android_inflatedId android:inflatedId}</code></td><td> Overrides the id of the inflated View with this value.</td></tr>
           <tr><td><code>{@link #ViewStubCompat_android_layout android:layout}</code></td><td> Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so.</td></tr>
           </table>
           @see #ViewStubCompat_android_id
           @see #ViewStubCompat_android_inflatedId
           @see #ViewStubCompat_android_layout
         */
        public static final int[] ViewStubCompat = {
            0x010100d0, 0x010100f2, 0x010100f3
        };
        /**
          <p>This symbol is the offset where the {@link android.R.attr#id}
          attribute's value can be found in the {@link #ViewStubCompat} array.
          @attr name android:id
        */
        public static final int ViewStubCompat_android_id = 0;
        /**
          <p>
          @attr description
           Overrides the id of the inflated View with this value. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#inflatedId}.
          @attr name android:inflatedId
        */
        public static final int ViewStubCompat_android_inflatedId = 2;
        /**
          <p>
          @attr description
           Supply an identifier for the layout resource to inflate when the ViewStub
             becomes visible or when forced to do so. The layout resource must be a
             valid reference to a layout. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#layout}.
          @attr name android:layout
        */
        public static final int ViewStubCompat_android_layout = 1;
        /** Attributes that can be used with a WifiEncryptionState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WifiEncryptionState_state_encrypted com.example.demo:state_encrypted}</code></td><td></td></tr>
           </table>
           @see #WifiEncryptionState_state_encrypted
         */
        public static final int[] WifiEncryptionState = {
            0x7f0100d1
        };
        /**
          <p>This symbol is the offset where the {@link com.example.demo.R.attr#state_encrypted}
          attribute's value can be found in the {@link #WifiEncryptionState} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.example.demo:state_encrypted
        */
        public static final int WifiEncryptionState_state_encrypted = 0;
    };
}
